<Type Name="RoleProvider" FullName="System.Web.Security.RoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33a7ad2cf07f9ba52a5dfcde65d9f08df7a73804" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57928000" /></Metadata><TypeSignature Language="C#" Value="public abstract class RoleProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RoleProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RoleProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type RoleProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.ApplicationServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Определяет контракт, который реализуется ASP.NET, чтобы предоставлять управление ролью, используя пользовательские поставщики роли.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Управление ролями ASP.NET обеспечивает возможность можно легко использовать ряд поставщиков различных ролей для приложений ASP.NET. Можно использовать предоставленные поставщики роли, которые входят в состав .NET Framework, или можно реализовать собственного поставщика.  
  
 При реализации пользовательского поставщика ролей, необходимо наследовать <xref:System.Web.Security.RoleProvider> абстрактного класса.  
  
 Существует две главные причины для создания пользовательского поставщика ролей.  
  
-   Вам необходимо сохранить сведения о роли в источнике данных, который не поддерживается поставщиками ролей, входящими в .NET Framework, таких как базы данных FoxPro, базы данных Oracle или других источников данных.  
  
-   Необходимо управлять сведениями о роли, используя схему базы данных, которая отличается от схемы базы данных, используемые поставщиками, входящие в состав .NET Framework. Распространенным примером этого будет данных роли, который уже существует в базе данных SQL Server для компании или веб-сайта.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Реализация поставщика ролей</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Security.RoleProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Не требуется реализовывать конструктор для класса, который наследует <xref:System.Web.Security.RoleProvider> абстрактного класса. Инициализация значений в параметре <xref:System.Web.Security.RoleProvider> передаются реализации <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> реализацию метода.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Реализация поставщика ролей</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public abstract void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member AddUsersToRoles : string[] * string[] -&gt; unit" Usage="roleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="roleNames" Type="System.String[]" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="usernames">Массив строк имен пользователей для добавления в указанные роли.</param>
        <param name="roleNames">Массив строк имен пользователей, в который добавляются указанные имена пользователей.</param>
        <summary>Добавляет указанные имена пользователей к указанным ролям для установленного приложения <see langword="applicationName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> вызывается <xref:System.Web.Security.Roles> класс должен быть сопоставлен указанных пользователей в указанные роли в источнике данных. Добавляются роли для настроенного <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 Если любой из указанных имен роли является не найден для настроенного `applicationName`, мы рекомендуем, чтобы поставщик выдал <xref:System.Configuration.Provider.ProviderException>.  
  
 Если любой из указанных имен пользователя не связаны с любой из указанных имен роли для настроенного `applicationName`, мы рекомендуем, чтобы поставщик выдал <xref:System.Configuration.Provider.ProviderException>.  
  
 Если выполняется одно из указанных имен пользователя `null` или является пустой строкой, рекомендуется, чтобы поставщик выдал исключение.  
  
 Если любое из указанных имен роли является `null` или является пустой строкой, рекомендуется, чтобы поставщик выдал исключение.  
  
 Если источник данных поддерживает транзакции, рекомендуется включить каждую операцию добавления в транзакции и откат транзакции и создания исключения, если любых добавьте сбоя операции.  
  
   
  
## Examples  
 В следующем примере кода показан пример реализации <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> метод.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#2)]
 [!code-vb[System.Web.Security.IRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Реализация поставщика ролей</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.RoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя приложения, для которого будут сохраняться и извлекаться сведения о роли.</summary>
        <value>Имя приложения, для которого будут сохраняться и извлекаться сведения о роли.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.ApplicationName%2A> Используется <xref:System.Web.Security.Roles> класс, связанный с различными приложениями пользователей и ролей. Это позволяет нескольким приложениям использовать ту же базу данных для хранения пользователя и сведения о роли без конфликтов между одинаковых имен пользователей или имен ролей. Несколько приложений ASP.NET можно использовать ту же базу данных, указав то же значение в <xref:System.Web.Security.Roles.ApplicationName%2A> свойство. <xref:System.Web.Security.Roles.ApplicationName%2A> Свойства могут устанавливаться программными средствами, или его можно задать декларативно в файле конфигурации для веб-приложения с помощью `applicationName` атрибута.  
  
 Если не <xref:System.Web.Security.RoleProvider.ApplicationName%2A> свойство указано, мы рекомендуем <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> использовать значение свойства.  
  
   
  
## Examples  
 В следующем примере кода показан пример реализации <xref:System.Web.Security.RoleProvider.ApplicationName%2A> свойство.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#1)]
 [!code-vb[System.Web.Security.IRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Реализация поставщика ролей</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public abstract void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member CreateRole : string -&gt; unit" Usage="roleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">Имя создаваемой роли.</param>
        <summary>Добавляет новую роль к источнику данных для настроенного приложения <see langword="applicationName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.CreateRole%2A> вызывается <xref:System.Web.Security.Roles.CreateRole%2A> метод <xref:System.Web.Security.Roles> класс, чтобы добавить указанную роль к источнику данных для настроенного <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 Если указанное имя роли уже существует для настроенного `applicationName`, является `null`, или является пустой строкой, рекомендуется, чтобы поставщик выдал исключение.  
  
 Если указанное имя роли содержит запятую, рекомендуется, чтобы поставщик выдал исключение.  
  
 Если источник данных ограничивает длину имени роли, например, через фиксированной длины столбца таблицы в базе данных, мы рекомендуем вызывается исключение, если имя роли превышает максимальную длину, разрешенную в источнике данных.  
  
   
  
## Examples  
 В следующем примере кода показан пример реализации <xref:System.Web.Security.RoleProvider.CreateRole%2A> метод.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#3)]
 [!code-vb[System.Web.Security.IRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Реализация поставщика ролей</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public abstract bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="abstract member DeleteRole : string * bool -&gt; bool" Usage="roleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">Имя удаляемой роли.</param>
        <param name="throwOnPopulatedRole">Если <see langword="true" />, то выдайте исключение, если <paramref name="roleName" /> имеет один или более членов и не удаляйте <paramref name="roleName" />.</param>
        <summary>Удаляет роль из источника данных для настроенного приложения <see langword="applicationName" />.</summary>
        <returns>Значение <see langword="true" />, если роль успешно удалена; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.DeleteRole%2A> вызывается <xref:System.Web.Security.Roles.DeleteRole%2A> и <xref:System.Web.Security.Roles.DeleteRole%2A> методы <xref:System.Web.Security.Roles> класса, чтобы удалить указанную роль из источника данных для настроенного <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 При удалении роли из источника данных, убедитесь, что также удаляются все связи между имя пользователя и удаленные роли для настроенного `applicationName`.  
  
 Если `throwOnPopulatedRole` — `true`и роли, идентифицируемый `roleName` параметр имеет один или несколько членов, создается исключение <xref:System.Configuration.Provider.ProviderException> и не удаляет эту роль. Если `throwOnPopulatedRole` является `false`, удалите роль ли он пуст или нет.  
  
 Если указанное имя роли не существует, является `null`, или является пустой строкой, рекомендуется, чтобы поставщик выдал исключение.  
  
   
  
## Examples  
 В следующем примере кода показан пример реализации <xref:System.Web.Security.RoleProvider.DeleteRole%2A> метод.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#4)]
 [!code-vb[System.Web.Security.IRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Реализация поставщика ролей</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="abstract member FindUsersInRole : string * string -&gt; string[]" Usage="roleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="usernameToMatch" Type="System.String" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">Роль, в которой следует выполнить поиск.</param>
        <param name="usernameToMatch">Имя пользователя для поиска.</param>
        <summary>Возвращает массив имен пользователей в роли, у которых имена совпадают с указанными именами пользователей.</summary>
        <returns>Массив строк, содержащий имена всех пользователей, имена которых совпадают с <paramref name="usernameToMatch" />, и которые являются членами указанной роли.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> Вызывается метод <xref:System.Web.Security.Roles> и возвращает список пользователей в роли, где имя пользователя содержит соответствие предоставленного `usernameToMatch` для настроенного `applicationName`. Поддержка подстановочных знаков включается на основе источника данных. Пользователи возвращаются в алфавитном порядке по имени пользователя.  
  
 Мы рекомендуем генерировать <xref:System.Configuration.Provider.ProviderException> Если `roleName` не существует в источнике данных.  
  
   
  
## Examples  
 В следующем примере кода показан пример <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> реализации.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#11)]
 [!code-vb[System.Web.Security.IRoleProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Реализация поставщика ролей</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public abstract string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="abstract member GetAllRoles : unit -&gt; string[]" Usage="roleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает список всех ролей для настроенного <see langword="applicationName" />.</summary>
        <returns>Массив строк, содержащий имена всех ролей, сохраненных в источнике данных для настроенного <see langword="applicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> вызывается <xref:System.Web.Security.Roles.GetAllRoles%2A> метод <xref:System.Web.Security.Roles> класса, чтобы получить список имен ролей из источника данных. Только роли для указанного <xref:System.Web.Security.RoleProvider.ApplicationName%2A> извлекаются.  
  
 Если не существует ролей для настроенного `applicationName`, мы рекомендуем, чтобы поставщик возвращал массив строк, не содержит элементов.  
  
   
  
## Examples  
 В следующем примере кода показан пример реализации <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> метод.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#5)]
 [!code-vb[System.Web.Security.IRoleProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Реализация поставщика ролей</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public abstract string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="abstract member GetRolesForUser : string -&gt; string[]" Usage="roleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="username">Имя пользователя, для которого нужно возвратить список ролей.</param>
        <summary>Возвращает список ролей, с которыми связан указанный пользователей для настроенного <see langword="applicationName" />.</summary>
        <returns>Массив строк, содержащий имена всех ролей, с которыми связан указанный пользователь для настроенного <see langword="applicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> вызывается <xref:System.Web.Security.Roles.GetRolesForUser%2A> метод <xref:System.Web.Security.Roles> класса для извлечения имена ролей, указанный пользователь связан с источником данных. Только роли для настроенного <xref:System.Web.Security.RoleProvider.ApplicationName%2A> извлекаются.  
  
 Если роли не существует для указанного пользователя для настроенного `applicationName`, мы рекомендуем, чтобы поставщик возвращал массив строк, не содержит элементов.  
  
 Если указанное имя пользователя является `null` или является пустой строкой, рекомендуется, чтобы поставщик выдал исключение.  
  
   
  
## Examples  
 В следующем примере кода показан пример реализации <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> метод.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#6)]
 [!code-vb[System.Web.Security.IRoleProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Реализация поставщика ролей</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member GetUsersInRole : string -&gt; string[]" Usage="roleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">Имя роли, для которой необходимо возвратить список пользователей.</param>
        <summary>Возвращает список пользователей, связанных с указанной ролью, для настроенного <see langword="applicationName" />.</summary>
        <returns>Массив строк, содержащий имена всех пользователей, которые являются членами указанной роли для настроенного <see langword="applicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> вызывается <xref:System.Web.Security.Roles.GetUsersInRole%2A> метод <xref:System.Web.Security.Roles> класса для извлечения имен пользователей, связанных с ролью из источника данных. Только роли для настроенного <xref:System.Web.Security.RoleProvider.ApplicationName%2A> извлекаются.  
  
 Если указанное имя роли не существует для настроенного `applicationName` или если это `null` или является пустой строкой, рекомендуется, чтобы поставщик выдал исключение.  
  
 Если пользователи не связаны с указанной роли для настроенного `applicationName`, мы рекомендуем, чтобы поставщик возвращал массив строк, не содержит элементов.  
  
   
  
## Examples  
 В следующем примере кода показан пример реализации <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> метод.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#7)]
 [!code-vb[System.Web.Security.IRoleProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Реализация поставщика ролей</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public abstract bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member IsUserInRole : string * string -&gt; bool" Usage="roleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="roleName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="username">Имя пользователя для поиска.</param>
        <param name="roleName">Роль, в которой следует выполнить поиск.</param>
        <summary>Возвращает значение, указывающее связан ли указанный пользователь с указанной ролью для настроенного <see langword="applicationName" />.</summary>
        <returns>Значение <see langword="true" />, если указанный пользователь связан с указанной ролью для настроенного <see langword="applicationName" />; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> Вызывается метод <xref:System.Web.Security.Roles.IsUserInRole%2A> метод <xref:System.Web.Security.Roles> класс, чтобы определить, связан ли текущий пользователь вошел с ролью из источника данных для настроенного <xref:System.Web.Security.Roles.ApplicationName%2A>.  
  
 Если указанное имя пользователя является `null` или является пустой строкой, рекомендуется, чтобы поставщик выдал исключение.  
  
 Если указанное имя роли `null` или является пустой строкой, рекомендуется, чтобы поставщик выдал исключение.  
  
   
  
## Examples  
 В следующем примере кода показан пример реализации <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> метод.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#8)]
 [!code-vb[System.Web.Security.IRoleProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Реализация поставщика ролей</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public abstract void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="roleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="roleNames" Type="System.String[]" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="usernames">Массив строк имен пользователей для удаления из указанных ролей.</param>
        <param name="roleNames">Массив строк имен ролей, из которых необходимо удалить указанные имена пользователей.</param>
        <summary>Удаляет указанные имена пользователей из указанных ролей для установленного приложения <see langword="applicationName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> вызывается <xref:System.Web.Security.Roles.RemoveUserFromRole%2A> , <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> , <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> , и <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> методы <xref:System.Web.Security.Roles> позволит удалить указанных пользователей из указанных ролей в источнике данных. Только роли для настроенного <xref:System.Web.Security.RoleProvider.ApplicationName%2A> изменяются.  
  
 Если любой из указанных имен роли является не найден для настроенного `applicationName`, мы рекомендуем, чтобы поставщик выдал <xref:System.Configuration.Provider.ProviderException>.  
  
 Если любой из указанных имен пользователя не связаны с любой из указанных имен роли для настроенного `applicationName`, мы рекомендуем, чтобы поставщик выдал <xref:System.Configuration.Provider.ProviderException>.  
  
 Если выполняется одно из указанных имен пользователя `null` или является пустой строкой, рекомендуется, чтобы поставщик выдал исключение.  
  
 Если любое из указанных имен роли является `null` или является пустой строкой, рекомендуется, чтобы поставщик выдал исключение.  
  
 Если источник данных поддерживает транзакции, рекомендуется включить каждую операцию удаления в транзакцию и откатить транзакцию и исключение при сбое любой операции удаления.  
  
   
  
## Examples  
 В следующем примере кода показан пример реализации <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> метод.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#9)]
 [!code-vb[System.Web.Security.IRoleProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Реализация поставщика ролей</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public abstract bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member RoleExists : string -&gt; bool" Usage="roleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">Имя роли, которую необходимо найти в источнике данных.</param>
        <summary>Возвращает значение, указывающее, существует ли указанная роль в источнике данных ролей для настроенного <see langword="applicationName" />.</summary>
        <returns><see langword="true" />, если имя роли уже существует в источнике данных для настроенного <see langword="applicationName" />; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RoleExists%2A> вызывается <xref:System.Web.Security.Roles.RoleExists%2A> метод <xref:System.Web.Security.Roles> класс, чтобы определить, существует ли имя роли в источнике данных для настроенного <xref:System.Web.Security.Roles.ApplicationName%2A>.  
  
 Если указанное имя роли `null` или является пустой строкой, рекомендуется, чтобы поставщик выдал исключение.  
  
   
  
## Examples  
 В следующем примере кода показан пример реализации <xref:System.Web.Security.RoleProvider.RoleExists%2A> метод.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#10)]
 [!code-vb[System.Web.Security.IRoleProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Реализация поставщика ролей</related>
      </Docs>
    </Member>
  </Members>
</Type>