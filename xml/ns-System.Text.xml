<Namespace Name="System.Text">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34cddae6e8018aa3245a0db0838a6b65070528ea" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="30736138" /></Metadata><Docs>
    <summary>Пространство имен<see cref="N:System.Text" /> содержит классы, которые представляют кодировки ASCII и Юникода; абстрактные базовые классы для преобразования блоков знаков в блоки байтов и обратно; вспомогательный класс, который обрабатывает и форматирует объекты <see cref="T:System.String" />, не создавая промежуточные экземпляры <see cref="T:System.String" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы кодировок в первую очередь предназначены для преобразования между разными кодировками или кодовых страниц и кодировку Юникод. <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> Кодировка (UTF-16) является внутренним классом .NET Framework, и <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> кодирования часто используется для хранения символьных данных для обеспечения переносимости между машинами и языков и региональных параметров.  
  
 Классы, унаследованные от <xref:System.Text.Encoding> позволяют выбрать резервную стратегию, которая определяет способ обработки символов, не может быть закодирован в последовательность байтов, или байтов, которые не удается декодировать в символы,. Можно выбрать один из следующих:  
  
-   Резервная стратегия исключения. Вы можете создавать исключения при возникновении ошибок данных, либо с помощью `throwonerror` флаг, который доступен в некоторых конструкторах классов или с помощью <xref:System.Text.EncoderExceptionFallback> и <xref:System.Text.DecoderExceptionFallback> классы. Если вы беспокоитесь о целостности потока данных, рекомендуется вызов исключения.  
  
-   Резервную стратегию замены. Можно использовать <xref:System.Text.EncoderFallback> и <xref:System.Text.DecoderFallback> классам без предупреждения изменять символ «?» или замещающий символ Юникода (U + FFFD).  
  
-   Резервную стратегию наилучшего. Этот параметр соответствует символу в одной кодировки в символ в другой кодировке. Наиболее подходящая fallback часто не рекомендуется, поскольку это может вызвать потерю данных и путаницы и выполняется медленнее, чем простой «?» символ замены. Однако для кодовых страниц ANSI наилучшего поведение используется по умолчанию.  
  
 <xref:System.Text.StringBuilder> Класс предназначен для операций, которые сложных манипуляций на одну строку. В отличие от <xref:System.String> класса <xref:System.Text.StringBuilder> класс является изменяемым и обеспечивает более высокую производительность при сцеплении или удалении строк.  
  
 Дополнительные сведения о <xref:System.Text?displayProperty=nameWithType>, см. в разделе [кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md) .  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>
