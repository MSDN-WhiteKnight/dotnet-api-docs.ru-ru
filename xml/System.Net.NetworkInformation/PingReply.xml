<Type Name="PingReply" FullName="System.Net.NetworkInformation.PingReply">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2750e7a260fe829621cbe77b38b9b869d5350955" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58716092" /></Metadata><TypeSignature Language="C#" Value="public class PingReply" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PingReply extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.PingReply" />
  <TypeSignature Language="VB.NET" Value="Public Class PingReply" />
  <TypeSignature Language="C++ CLI" Value="public ref class PingReply" />
  <TypeSignature Language="F#" Value="type PingReply = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет сведения о состоянии и о данных, полученных в результате операции <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> или <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.Ping> Класс пытается отправить запрос проверки связи Internet Control Message Protocol (ICMP) к удаленному компьютеру и получать сведения с компьютера с помощью сообщении ответа проверки связи ICMP. <xref:System.Net.NetworkInformation.Ping> Класс использует экземпляры <xref:System.Net.NetworkInformation.PingReply> класса для возвращения сведений об операции, такие как его состояние и время, необходимое для отправки запроса и получения ответа.  
  
 <xref:System.Net.NetworkInformation.Ping.Send%2A> Методы возвращают экземпляры <xref:System.Net.NetworkInformation.PingReply> класса напрямую. <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Методы возвращают <xref:System.Net.NetworkInformation.PingReply> в <xref:System.Net.NetworkInformation.PingCompletedEventHandler> метода <xref:System.Net.NetworkInformation.PingCompletedEventArgs> параметра. <xref:System.Net.NetworkInformation.PingReply> Осуществляется через <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> свойство.  
  
 Если значение <xref:System.Net.NetworkInformation.PingReply.Status%2A> не <xref:System.Net.NetworkInformation.IPStatus.Success>, не следует использовать значения, возвращаемые методом <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> или <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> свойства. <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> Свойство возвращает ноль, <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> свойство возвращает пустой массив и <xref:System.Net.NetworkInformation.PingReply.Options%2A> свойство возвратит `null`.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Net.NetworkInformation.Ping> класс отправлять запрос проверки связи ICMP синхронно, и отобразить ответ.  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As IPAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPAddress ^ Address { System::Net::IPAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : System.Net.IPAddress" Usage="System.Net.NetworkInformation.PingReply.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает адрес узла и отправляет ответ проверки связи ICMP.</summary>
        <value>Объект <see cref="T:System.Net.IPAddress" />, содержащий получателя сообщения проверки связи ICMP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.PingReply.Address%2A> Возвращаемые любым <xref:System.Net.NetworkInformation.Ping.Send%2A> перегрузки могут быть получены из вредоносных удаленного компьютера. Не подключиться к удаленному компьютеру, с помощью этого адреса. Используйте DNS, чтобы определить IP-адрес компьютера, к которому необходимо подключиться.  
  
   
  
## Examples  
 В следующем примере кода синхронно отправляет запрос проверки связи ICMP и отображает значение этого свойства.  
  
 [!code-cpp[NclPingSampler#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#2)]
 [!code-csharp[NclPingSampler#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : byte[]" Usage="System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает буфер данных, полученных в сообщении ответа проверки связи ICMP.</summary>
        <value>Массив <see cref="T:System.Byte" />, в котором содержатся данные, полученные в сообщении ответа проверки связи ICMP, или пустой массив, если ответ не получен.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Буфер данных, отправленный с запросом проверки связи ICMP возвращается отправителю в ответе, поэтому время в пути обмена данными для известного размера пакета может быть вычислено. Буфер данных, в сочетании с <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> , то можно использовать для обнаружения наибольший размер передаваемых данных для сетевой путь между исходный и конечный компьютеры. Дополнительные сведения см. в разделе «Traceroute» в 1574 RFC, в разделе 3.2, найти по адресу [ https://www.ietf.org ](https://www.ietf.org).  
  
 По умолчанию буфера, используемого с <xref:System.Net.NetworkInformation.Ping.Send%2A> и <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> содержит 32 байт.  
  
   
  
## Examples  
 В следующем примере кода синхронно отправляет запрос проверки связи ICMP и отображает размер буфера, возвращенный этим свойством.  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.PingOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As PingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::PingOptions ^ Options { System::Net::NetworkInformation::PingOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Net.NetworkInformation.PingOptions" Usage="System.Net.NetworkInformation.PingReply.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает параметры, используемые для передачи ответа на запрос проверки связи ICMP.</summary>
        <value>Объект <see cref="T:System.Net.NetworkInformation.PingOptions" />, содержащий срок жизни и директиву фрагментации, которые используются для передачи ответа, если свойство <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> имеет значение <see cref="F:System.Net.NetworkInformation.IPStatus.Success" />; в противном случае — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Срок ЖИЗНИ определяет количество узлов можно переадресовать пакет на пути между источником и получателем. Если количество переадресаций, также известный как число прыжков, превышает значение срока ЖИЗНИ, пакет считается Недоставленное и отбрасывается.  
  
 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Значение, указанное в фрагментации пакетов для запроса элементов управления ICMP echo. Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> — `true` и размер пакета превышает наибольший размер передаваемых данных сетевого пути, выполняемое пакет, пакет отбрасывается и <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig> возвращается ошибка.  
  
   
  
## Examples  
 В следующем примере кода, синхронно отправляет запрос проверки связи ICMP и отображает значения, хранящиеся в <xref:System.Net.NetworkInformation.PingOptions> объект, возвращаемый этим свойством.  
  
 [!code-cpp[NclPingSampler#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#3)]
 [!code-csharp[NclPingSampler#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundtripTime">
      <MemberSignature Language="C#" Value="public long RoundtripTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RoundtripTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoundtripTime As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RoundtripTime { long get(); };" />
      <MemberSignature Language="F#" Value="member this.RoundtripTime : int64" Usage="System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает время в миллисекундах, затрачиваемое на отправку запроса проверки связи ICMP и получение соответствующего сообщения ответа проверки связи ICMP.</summary>
        <value>Значение типа <see cref="T:System.Int64" />, указывающее время прохождения пакета "туда и обратно" в миллисекундах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В случае сбоя запроса проверки связи <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> времени, которая считается 0, являющимся также является допустимым значением, если запрос выполнен успешно. Необходимо проверить <xref:System.Net.NetworkInformation.PingReply.Status%2A> для определения, следует ли игнорировать значение, возвращаемое этим свойством.  
  
   
  
## Examples  
 В следующем примере кода синхронно отправляет запрос проверки связи ICMP и отображает размер буфера, возвращенный этим свойством.  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.IPStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.IPStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As IPStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::IPStatus Status { System::Net::NetworkInformation::IPStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.Status : System.Net.NetworkInformation.IPStatus" Usage="System.Net.NetworkInformation.PingReply.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает состояние попытки отправки запроса проверки связи ICMP и получения соответствующего сообщения ответа проверки связи ICMP.</summary>
        <value>Значение <see cref="T:System.Net.NetworkInformation.IPStatus" />, показывающее результат запроса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если значение <xref:System.Net.NetworkInformation.PingReply.Status%2A> не <xref:System.Net.NetworkInformation.IPStatus.Success>, не следует использовать значения, возвращаемые методом <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> или <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> свойства. <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> И <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> возвращает нуль, свойства и <xref:System.Net.NetworkInformation.PingReply.Options%2A> свойство возвратит `null`.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Net.NetworkInformation.Ping> класс отправлять запрос проверки связи ICMP синхронно, и отобразить ответ.  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>