<Type Name="ConsoleTraceListener" FullName="System.Diagnostics.ConsoleTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="653b0096816140df8e14c31875fab5b4d202d7ef" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56362363" /></Metadata><TypeSignature Language="C#" Value="public class ConsoleTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConsoleTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConsoleTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class ConsoleTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConsoleTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type ConsoleTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Направляет вывод отладки и трассировки в стандартный поток вывода или стандартный поток сообщений об ошибках.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Diagnostics.ConsoleTraceListener> класс для записи трассировки и отладки сообщений в консоль. Вы можете инициализировать <xref:System.Diagnostics.ConsoleTraceListener> объект для записи сообщений трассировки <xref:System.Console.Out%2A?displayProperty=nameWithType> потока или <xref:System.Console.Error%2A?displayProperty=nameWithType> потока.  
  
> [!IMPORTANT]
>  интерфейса <xref:System.IDisposable>. Когда вы закончите, используя тип, следует освободить его прямо или косвенно. Чтобы удалить тип напрямую, вызовите его <xref:System.IDisposable.Dispose%2A> метод в`try` / `catch` блока. Чтобы избавиться от его косвенно, используйте языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic). Дополнительные сведения см. в разделе «С помощью объекта, реализует IDisposable» <xref:System.IDisposable> разделу интерфейса.  
  
 Когда трассировка и выходные данные отладки, <xref:System.Diagnostics.ConsoleTraceListener> сообщения записываются в указанный <xref:System.Console?displayProperty=nameWithType> поток, который подобно тому, как сообщения записываются с <xref:System.Console.Write%2A?displayProperty=nameWithType> или <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> методы. В консольном приложении <xref:System.Console?displayProperty=nameWithType> потоки вывода и ошибок записи сообщения в существующее окно консоли или вы можете перенаправлять потоки для записи <xref:System.IO.TextWriter?displayProperty=nameWithType> экземпляра.  
  
> [!NOTE]
>  Если консоль не существует, например в Windows-приложениях, не отображаются сообщения, записываемые в консоль.  
  
 Добавить <xref:System.Diagnostics.ConsoleTraceListener> объект к соответствующему <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, сообщения, записанной через <xref:System.Diagnostics.Trace>, <xref:System.Diagnostics.TraceSource>, или <xref:System.Diagnostics.Debug> для записи в консоль. Кроме того, можно написать сообщения напрямую на консоль, используя <xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType> или <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> методы.  
  
> [!NOTE]
>  <xref:System.Diagnostics.Debug> И <xref:System.Diagnostics.Trace> классы одного и того же <xref:System.Diagnostics.TraceListenerCollection> коллекции, осуществляется через соответствующие `Listeners` свойства. Если вы добавите <xref:System.Diagnostics.ConsoleTraceListener> объект в коллекцию, с помощью одного из этих классов, другой класс автоматически использует этот же прослушиватель.  
  
 Большинство компиляторов Включение трассировки и отладки выходных данных с помощью флагов условной компиляции. Если не включить трассировки или отладки, сообщения, записанные через <xref:System.Diagnostics.Debug?displayProperty=nameWithType> и <xref:System.Diagnostics.Trace?displayProperty=nameWithType> классы фактически учитываются. Синтаксис для включения трассировки и выходные данные отладки зависит от компилятора; При использовании компиляторов, отличный от C# или Visual Basic, см. в документации по вашим компилятором.  
  
-   Чтобы включить отладку в C#, добавьте **/d: Debug**флаг в командную строку компилятора при компиляции кода, или можно добавить **#define DEBUG** в начало файла. В Visual Basic добавьте **/d: Debug = True** флаг в командную строку компилятора.  
  
-   Чтобы включить трассировку в C#, добавьте **/d: trace** флаг в командную строку компилятора при компиляции кода, или добавьте **#define ТРАССИРОВКИ** в начало файла. В Visual Basic добавьте **/d: trace = True** флаг в командную строку компилятора.  
  
 Вы можете добавить <xref:System.Diagnostics.ConsoleTraceListener> объект <xref:System.Diagnostics.Trace.Listeners%2A> коллекции в коде, или вы можете добавить <xref:System.Diagnostics.ConsoleTraceListener> объект <xref:System.Diagnostics.Trace.Listeners%2A> коллекции с помощью файла конфигурации приложения. Добавление <xref:System.Diagnostics.ConsoleTraceListener> объекта в коде для записи сообщений для конкретного кода раздела или выполнения пути. Добавление <xref:System.Diagnostics.ConsoleTraceListener> объекта в файле конфигурации приложения для перенаправления всех trace и debug сообщений в консоль при выполнении приложения.  
  
 Для создания трассировки и отладки сообщений в консоль для определенной части кода, инициализируйте <xref:System.Diagnostics.ConsoleTraceListener> и добавьте его к <xref:System.Diagnostics.Trace.Listeners%2A> коллекции. Инструментирование раздела кода, содержащий сообщения с помощью <xref:System.Diagnostics.Trace> или <xref:System.Diagnostics.Debug> классы. В конце раздела кода, удалите <xref:System.Diagnostics.ConsoleTraceListener> объекта из <xref:System.Diagnostics.Trace.Listeners%2A> коллекции и вызвать <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> метод <xref:System.Diagnostics.ConsoleTraceListener>.  
  
 Чтобы направлять все трассировки и отладки сообщений в консоль во время выполнения приложения, добавьте <xref:System.Diagnostics.ConsoleTraceListener> объекта в файле конфигурации приложения. Изменить файл конфигурации, который соответствует имени приложения или файл app.config в [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] проекта. В этом файле, вставьте элемент для <xref:System.Diagnostics.ConsoleTraceListener>.  
  
 В следующем примере добавляется <xref:System.Diagnostics.ConsoleTraceListener> объект с именем `configConsoleListener` для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="configConsoleListener"            type="System.Diagnostics.ConsoleTraceListener" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
 </configuration>  
```  
  
 Дополнительные сведения о добавлении прослушивателей в файле конфигурации приложения, см. в разделе [ &lt;прослушиватели&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md).  
  
   
  
## Examples  
 В следующем примере кода реализуется консольное приложение, состоящее из класса с два открытых метода.  
  
 `Main` Метод анализирует аргументы командной строки и определяет, должны быть направлены выходные данные трассировки в стандартный поток ошибок или в стандартный выходной поток. `Main` Создает и инициализирует <xref:System.Diagnostics.ConsoleTraceListener> для указанного <xref:System.Console> поток выходных данных и добавляет этот объект в коллекции таких прослушивателей. Затем он вызывает `WriteEnvironmentInfoToTrace` метод, который записывает подробные сведения о среде выполнения и конфигурации прослушивателя трассировки в выходные данные трассировки.  
  
 При выполнении примера приложения, сведения о конфигурации среды и трассировки записываются в указанный поток вывода консоли через <xref:System.Diagnostics.ConsoleTraceListener> объекта.  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#1)]
 [!code-vb[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Console" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.ConsoleTraceListener" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.ConsoleTraceListener" /> с записью выходных данных трассировки в стандартный поток вывода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует <xref:System.Diagnostics.ConsoleTraceListener> объект для записи сообщений в <xref:System.Console.Out%2A?displayProperty=nameWithType> потока. Его <xref:System.Diagnostics.TraceListener.Name%2A> свойство инициализируется пустой строкой (»»).  
  
   
  
## Examples  
 В следующем примере кода пример инициализирует <xref:System.Diagnostics.ConsoleTraceListener> для указанного <xref:System.Console> поток выходных данных и добавляет его к коллекции таких прослушивателей. Данный пример кода является частью большего примера для <xref:System.Diagnostics.ConsoleTraceListener> класса.  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener (bool useErrorStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool useErrorStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (useErrorStream As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener(bool useErrorStream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ConsoleTraceListener : bool -&gt; System.Diagnostics.ConsoleTraceListener" Usage="new System.Diagnostics.ConsoleTraceListener useErrorStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="useErrorStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useErrorStream">Значение <see langword="true" /> для записи выходных данных отладки и трассировки в стандартный поток ошибок или значение <see langword="false" /> для записи выходных данных отладки и трассировки в стандартный поток вывода.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.ConsoleTraceListener" /> с возможностью записи выходных данных трассировки в стандартный поток вывода или стандартный поток ошибок.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует <xref:System.Diagnostics.ConsoleTraceListener> объект для записи сообщений либо <xref:System.Console.Out%2A?displayProperty=nameWithType> или <xref:System.Console.Error%2A?displayProperty=nameWithType> потока. Его <xref:System.Diagnostics.TraceListener.Name%2A> свойство инициализируется пустой строкой (»»).  
  
   
  
## Examples  
 В следующем примере кода пример инициализирует <xref:System.Diagnostics.ConsoleTraceListener> для указанного <xref:System.Console> поток выходных данных и добавляет его к коллекции таких прослушивателей. Данный пример кода является частью большего примера для <xref:System.Diagnostics.ConsoleTraceListener> класса.  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Console" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="consoleTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает выходные данные для потока, заданного для этого прослушивателя трассировки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поток, указанный для этого <xref:System.Diagnostics.ConsoleTraceListener> экземпляр (либо <xref:System.Console.Out%2A?displayProperty=nameWithType> потока или <xref:System.Console.Error%2A?displayProperty=nameWithType> потока) закрывается.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>