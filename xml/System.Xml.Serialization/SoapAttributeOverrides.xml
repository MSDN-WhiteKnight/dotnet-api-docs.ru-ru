<Type Name="SoapAttributeOverrides" FullName="System.Xml.Serialization.SoapAttributeOverrides">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33b73a9543a6778e623c78919651c7512629419b" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58703647" /></Metadata><TypeSignature Language="C#" Value="public class SoapAttributeOverrides" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapAttributeOverrides extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapAttributeOverrides" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapAttributeOverrides" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapAttributeOverrides" />
  <TypeSignature Language="F#" Value="type SoapAttributeOverrides = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Позволяет переопределять атрибуты, примененные к свойствам, полям и классам, при использовании <see cref="T:System.Xml.Serialization.XmlSerializer" /> для сериализации или десериализации объекта как кодированного элемента SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapAttributeOverrides> Класса включает <xref:System.Xml.Serialization.XmlSerializer> для переопределения стандартного способа сериализации набора объектов. Переопределение сериализации таким способом имеет два применения: во-первых, можно управлять и дополнять сериализацию объектов в библиотеке DLL, даже если у вас нет доступа к источнику; Во-вторых можно создать один набор сериализуемых классов, но сериализации объектов несколькими способами. Например вместо сериализации членов экземпляра класса как XML-элементов, можно сериализовать их в как атрибуты XML, приведет к более эффективным документа к транспорта.  
  
 После создания <xref:System.Xml.Serialization.SoapAttributeOverrides>, создании <xref:System.Xml.Serialization.XmlTypeMapping> с помощью <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> метод <xref:System.Xml.Serialization.SoapReflectionImporter> класса. Передайте полученный объект в качестве аргумента для <xref:System.Xml.Serialization.XmlSerializer.%23ctor%2A> конструктор. Полученный в результате <xref:System.Xml.Serialization.XmlSerializer> использует данные, содержащиеся в <xref:System.Xml.Serialization.SoapAttributeOverrides> переопределять атрибуты, определяющие, каким образом объекты сериализуются. Чтобы выполнить это, <xref:System.Xml.Serialization.SoapAttributeOverrides> содержит коллекцию типов объектов, которые переопределены, а также через <xref:System.Xml.Serialization.SoapAttributes> связанные с каждым типом переопределяемого объекта. Каждый <xref:System.Xml.Serialization.SoapAttributes> содержит соответствующий набор объектов атрибутов, управляющих сериализацией каждого поля, свойства или класса.  
  
 Процесс создания и использования <xref:System.Xml.Serialization.SoapAttributeOverrides> выглядит следующим образом:  
  
1.  Создайте таблицу <xref:System.Xml.Serialization.SoapAttributes>.  
  
2.  Создайте объект атрибута, соответствующего переопределенный объект. Например, чтобы переопределить поля или свойства, создать <xref:System.Xml.Serialization.SoapElementAttribute>, используя новый производный тип. При необходимости можно назначить новый <xref:System.Xml.Serialization.SoapElementAttribute.ElementName%2A> , переопределяющий базового класса имя атрибута или пространства имен.  
  
3.  Добавить в соответствующий объект атрибута <xref:System.Xml.Serialization.SoapAttributes> свойства или коллекции. Например, можно установить <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> свойство <xref:System.Xml.Serialization.SoapAttributes> объект <xref:System.Xml.Serialization.SoapElementAttribute> и укажите имя члена, переопределяется.  
  
4.  Создайте таблицу <xref:System.Xml.Serialization.SoapAttributeOverrides>.  
  
5.  Добавить <xref:System.Xml.Serialization.SoapAttributes> для <xref:System.Xml.Serialization.SoapAttributeOverrides> с помощью <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> метод. Если переопределенный объект <xref:System.Xml.Serialization.SoapTypeAttribute>, требуется только указать тип переопределяемого объекта. Но при переопределении поля или свойства, необходимо также указать имя переопределяемого члена.  
  
6.  Создание <xref:System.Xml.Serialization.XmlTypeMapping> с помощью <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> метод <xref:System.Xml.Serialization.SoapReflectionImporter> класса.  
  
7.  При создании <xref:System.Xml.Serialization.XmlSerializer>, передайте <xref:System.Xml.Serialization.XmlTypeMapping> для <xref:System.Xml.Serialization.XmlSerializer.%23ctor%2A> конструктор.  
  
8.  Используйте полученный <xref:System.Xml.Serialization.XmlSerializer> для сериализации или десериализации объектов класса.  
  
   
  
## Examples  
 В следующем примере сериализуется класс с именем `Group`. Сериализация `GroupName` и `IgnoreThis` поля и члены `GroupType` перечисления переопределены. В `CreateOverrideSerializer` метод, <xref:System.Xml.Serialization.SoapAttributeOverrides> будет создана и для каждого переопределяемого члена или перечисления, <xref:System.Xml.Serialization.SoapAttributes> создается с помощью соответствующего свойства установить и добавить к <xref:System.Xml.Serialization.SoapAttributeOverrides>. <xref:System.Xml.Serialization.XmlTypeMapping> Создается с помощью <xref:System.Xml.Serialization.SoapAttributeOverrides>и что <xref:System.Xml.Serialization.XmlTypeMapping> используется для создания <xref:System.Xml.Serialization.XmlSerializer> , переопределяющий сериализацию по умолчанию.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Введение в сериализацию XML</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream.md">Практическое руководство. Сериализация объекта как потока XML с кодировкой SOAP</related>
    <related type="Article" href="~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md">Атрибуты управления сериализацией с кодировкой SOAP</related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Примеры сериализации XML</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapAttributeOverrides ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapAttributeOverrides();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере сериализуется класс с именем `Group`. Сериализация `GroupName` и `IgnoreThis` поля и члены `GroupType` перечисления переопределены. В `CreateOverrideSerializer` метод, <xref:System.Xml.Serialization.SoapAttributeOverrides> будет создана и для каждого переопределяемого члена или перечисления, <xref:System.Xml.Serialization.SoapAttributes> создается с помощью соответствующего свойства установить и добавить к <xref:System.Xml.Serialization.SoapAttributeOverrides>. <xref:System.Xml.Serialization.XmlTypeMapping> Создается с помощью <xref:System.Xml.Serialization.SoapAttributeOverrides>и что <xref:System.Xml.Serialization.XmlTypeMapping> используется для создания <xref:System.Xml.Serialization.XmlSerializer> , переопределяющий сериализацию по умолчанию.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет <see cref="T:System.Xml.Serialization.SoapAttributes" /> в коллекцию <see cref="T:System.Xml.Serialization.SoapAttributes" /> объектов, содержащихся в <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Type type, System.Xml.Serialization.SoapAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Type type, class System.Xml.Serialization.SoapAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Type ^ type, System::Xml::Serialization::SoapAttributes ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Add : Type * System.Xml.Serialization.SoapAttributes -&gt; unit" Usage="soapAttributeOverrides.Add (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Xml.Serialization.SoapAttributes" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Type" /> переопределяемого объекта.</param>
        <param name="attributes">Объект <see cref="T:System.Xml.Serialization.SoapAttributes" />, представляющий переопределяемые атрибуты.</param>
        <summary>Добавляет <see cref="T:System.Xml.Serialization.SoapAttributes" /> в коллекцию объектов <see cref="T:System.Xml.Serialization.SoapAttributes" />. Параметр <paramref name="type" />, указывающий объект, подлежащий переопределению при помощи <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapAttributes> Содержит объединение объектов атрибутов, вызывающие <xref:System.Xml.Serialization.XmlSerializer> переопределить его поведение сериализации по умолчанию для набора объектов. Выберите объекты атрибутов для размещения в <xref:System.Xml.Serialization.SoapAttributes>, в зависимости от конкретных настроек, которое нужно переопределить. Например <xref:System.Xml.Serialization.XmlSerializer> сериализует член класса как XML-элемент по умолчанию. Если вам нужно член сериализуется как атрибут XML вместо этого, необходимо создать <xref:System.Xml.Serialization.SoapAttributeAttribute>, назначить его <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> свойство <xref:System.Xml.Serialization.SoapAttributes>и добавьте <xref:System.Xml.Serialization.XmlAttributes> для <xref:System.Xml.Serialization.SoapAttributeOverrides>. Используйте <xref:System.Xml.Serialization.SoapAttributeOverrides.Add%2A> метод, чтобы добавить <xref:System.Xml.Serialization.SoapAttributes> для <xref:System.Xml.Serialization.SoapAttributeOverrides>.  
  
 Используйте этот перегруженный метод для добавления <xref:System.Xml.Serialization.SoapAttributes> , содержащий <xref:System.Xml.Serialization.SoapTypeAttribute>. Так как <xref:System.Xml.Serialization.SoapTypeAttribute> переопределяет сериализацию класса, не требуется указывать членом класса, чтобы переопределить, только тип класса.  
  
   
  
## Examples  
 В следующем примере сериализуется класс с именем `Group`. Сериализация `GroupName` и `IgnoreThis` поля и члены `GroupType` перечисления переопределены. В `CreateOverrideSerializer` метод, <xref:System.Xml.Serialization.SoapAttributeOverrides> будет создана и для каждого переопределяемого члена или перечисления, <xref:System.Xml.Serialization.SoapAttributes> создается с помощью соответствующего свойства установить и добавить к <xref:System.Xml.Serialization.SoapAttributeOverrides>. <xref:System.Xml.Serialization.XmlTypeMapping> Создается с помощью <xref:System.Xml.Serialization.SoapAttributeOverrides>и что <xref:System.Xml.Serialization.XmlTypeMapping> используется для создания <xref:System.Xml.Serialization.XmlSerializer> , переопределяющий сериализацию по умолчанию.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Type type, string member, System.Xml.Serialization.SoapAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Type type, string member, class System.Xml.Serialization.SoapAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Type ^ type, System::String ^ member, System::Xml::Serialization::SoapAttributes ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Add : Type * string * System.Xml.Serialization.SoapAttributes -&gt; unit" Usage="soapAttributeOverrides.Add (type, member, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="member" Type="System.String" />
        <Parameter Name="attributes" Type="System.Xml.Serialization.SoapAttributes" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Type" /> объекта для переопределения.</param>
        <param name="member">Имя члена для переопределения.</param>
        <param name="attributes">Объект <see cref="T:System.Xml.Serialization.SoapAttributes" />, представляющий переопределяемые атрибуты.</param>
        <summary>Добавляет <see cref="T:System.Xml.Serialization.SoapAttributes" /> в коллекцию <see cref="T:System.Xml.Serialization.SoapAttributes" /> объектов, содержащихся в <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />. Параметр <paramref name="type" /> указывает объект, подлежащий переопределению при помощи <see cref="T:System.Xml.Serialization.SoapAttributes" />. Параметр <paramref name="member" /> указывает имя переопределяемого члена.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapAttributes> Содержит объединение объектов атрибутов, вызывающие <xref:System.Xml.Serialization.XmlSerializer> переопределить его поведение сериализации по умолчанию для набора объектов. Выберите объекты атрибутов для размещения в <xref:System.Xml.Serialization.SoapAttributes>, в зависимости от конкретных настроек, которое нужно переопределить. Например <xref:System.Xml.Serialization.XmlSerializer> сериализует член класса как XML-элемент по умолчанию. Если вам нужно член сериализуется как атрибут SOAP, необходимо создать <xref:System.Xml.Serialization.SoapAttributeAttribute>, назначить его <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> свойство <xref:System.Xml.Serialization.SoapAttributes>и добавьте <xref:System.Xml.Serialization.XmlAttributes> для <xref:System.Xml.Serialization.SoapAttributeOverrides>. Используйте <xref:System.Xml.Serialization.SoapAttributeOverrides.Add%2A> метод, чтобы добавить <xref:System.Xml.Serialization.SoapAttributes> для <xref:System.Xml.Serialization.SoapAttributeOverrides>.  
  
 Используйте этот метод при <xref:System.Xml.Serialization.SoapAttributes> содержит маршрут <xref:System.Xml.Serialization.SoapAttributeAttribute>, <xref:System.ComponentModel.DefaultValueAttribute> <xref:System.Xml.Serialization.SoapElementAttribute>, <xref:System.Xml.Serialization.SoapEnumAttribute>, или <xref:System.Xml.Serialization.SoapIgnoreAttribute>.  
  
   
  
## Examples  
 В следующем примере сериализуется класс с именем `Group`. Сериализация `GroupName` и `IgnoreThis` поля и члены `GroupType` перечисления переопределены. В `CreateOverrideSerializer` метод, <xref:System.Xml.Serialization.SoapAttributeOverrides> будет создана и для каждого переопределяемого члена или перечисления, <xref:System.Xml.Serialization.SoapAttributes> создается с помощью соответствующего свойства установить и добавить к <xref:System.Xml.Serialization.SoapAttributeOverrides>. <xref:System.Xml.Serialization.XmlTypeMapping> Создается с помощью <xref:System.Xml.Serialization.SoapAttributeOverrides>и что <xref:System.Xml.Serialization.XmlTypeMapping> используется для создания <xref:System.Xml.Serialization.XmlSerializer> , переопределяющий сериализацию по умолчанию.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает объект, представляющий коллекцию переопределяемых атрибутов SOAP.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapAttributes this[Type type] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapAttributes Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type) As SoapAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapAttributes ^ default[Type ^] { System::Xml::Serialization::SoapAttributes ^ get(Type ^ type); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type) : System.Xml.Serialization.SoapAttributes" Usage="System.Xml.Serialization.SoapAttributeOverrides.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapAttributes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Базовый класс <see cref="T:System.Type" />, связанный с коллекцией извлекаемых атрибутов.</param>
        <summary>Получает объект, связанный с указанным типом (базового класса).</summary>
        <value><see cref="T:System.Xml.Serialization.SoapAttributes" />, который представляет коллекцию переопределяемых атрибутов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот перегруженный метод для возврата <xref:System.Xml.Serialization.SoapAttributes> , содержащий атрибуты для <xref:System.Xml.Serialization.SoapTypeAttribute>.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.Serialization.SoapAttributeOverrides> , используемый для переопределения сериализации экземпляра `Group` класса. В примере также используется <xref:System.Xml.Serialization.SoapAttributeOverrides.Item%2A> извлекаемого свойства <xref:System.Xml.Serialization.SoapAttributes> , используемый для указания того, каким образом переопределяется сериализации.  
  
 [!code-cpp[SoapAttributeOverrides.Item property 2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 2/CPP/attadd2.cpp#1)]
 [!code-csharp[SoapAttributeOverrides.Item property 2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 2/CS/attadd2.cs#1)]
 [!code-vb[SoapAttributeOverrides.Item property 2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 2/VB/attadd2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapAttributes this[Type type, string member] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapAttributes Item(class System.Type, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type, member As String) As SoapAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapAttributes ^ default[Type ^, System::String ^] { System::Xml::Serialization::SoapAttributes ^ get(Type ^ type, System::String ^ member); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type * string) : System.Xml.Serialization.SoapAttributes" Usage="System.Xml.Serialization.SoapAttributeOverrides.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapAttributes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="member" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Базовый класс <see cref="T:System.Type" />, связанный с коллекцией атрибутов, которые требуется переопределить.</param>
        <param name="member">Имя переопределяемого члена, указывающего <see cref="T:System.Xml.Serialization.SoapAttributes" />, который необходимо вернуть.</param>
        <summary>Получает объект, связанный с указанным типом (базового класса). Параметр <paramref name="member" /> указывает переопределенный член базового класса.</summary>
        <value><see cref="T:System.Xml.Serialization.SoapAttributes" />, который представляет коллекцию переопределяемых атрибутов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот перегруженный метод для возврата <xref:System.Xml.Serialization.SoapAttributes> , содержащий атрибуты, которые переопределяют <xref:System.Xml.Serialization.SoapAttributeAttribute>, <xref:System.Xml.Serialization.SoapElementAttribute>, <xref:System.Xml.Serialization.SoapIgnoreAttribute>, или <xref:System.Xml.Serialization.SoapEnumAttribute>. Можно также вернуть <xref:System.Xml.Serialization.SoapAttributes> , содержащий переопределения значения по умолчанию, которое использует <xref:System.ComponentModel.DefaultValueAttribute>.  
  
 Если <xref:System.Xml.Serialization.SoapAttributes> содержит <xref:System.Xml.Serialization.SoapTypeAttribute>, необходимо использовать перегрузку, задающую только переопределяемый тип.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.Serialization.SoapAttributeOverrides> используется для переопределения сериализации экземпляра `Group` класса. В примере также используется <xref:System.Xml.Serialization.SoapAttributeOverrides.Item%2A> извлекаемого свойства <xref:System.Xml.Serialization.SoapAttributes> , используемый для указания того, каким образом переопределяется сериализации.  
  
 [!code-cpp[SoapAttributeOverrides.Item property 1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 1/CPP/attadd.cpp#1)]
 [!code-csharp[SoapAttributeOverrides.Item property 1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 1/CS/attadd.cs#1)]
 [!code-vb[SoapAttributeOverrides.Item property 1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 1/VB/attadd.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>