<Type Name="XmlAttributeEventHandler" FullName="System.Xml.Serialization.XmlAttributeEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="175edc5877a71ec6e4165f8c2bb342f2c36f1e40" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46632324" /></Metadata><TypeSignature Language="C#" Value="public delegate void XmlAttributeEventHandler(object sender, XmlAttributeEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlAttributeEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributeEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub XmlAttributeEventHandler(sender As Object, e As XmlAttributeEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void XmlAttributeEventHandler(System::Object ^ sender, XmlAttributeEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type XmlAttributeEventHandler = delegate of obj * XmlAttributeEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Xml.Serialization.XmlAttributeEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Источник события.</param>
    <param name="e">Объект класса <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" />, содержащий данные события.</param>
    <summary>Представляет метод, обрабатывающий <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании <xref:System.Xml.Serialization.XmlAttributeEventHandler> укажите метод, обрабатывающий событие. Чтобы связать событие с обработчиком событий, нужно добавить в событие экземпляр делегата. Обработчик событий вызывается всякий раз, когда происходит событие, если делегат не удален. Дополнительные сведения о делегатов обработчиков событий, см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> Событие возникает, только когда объект был десериализован с <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> метод.  
  
   
  
## Examples  
 В следующем примере десериализуется класс с именем `Group` из файла с именем UnknownAttributes.xml. Каждый раз, когда элемент находится в файле, который не имеет соответствующего члена в классе <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> событием. Чтобы выполнить этот пример, вставьте следующий код XML в файл с именем UnknownAttributes.xml.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" GroupType = 'Technical' GroupNumber = '42' GroupBase = 'Red'>  
  <GroupName>MyGroup</GroupName>  
</Group>  
```  
  
 [!code-cpp[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlNodeEventHandler" />
    <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Введение в сериализацию XML</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Практическое руководство. Указание имени альтернативного элемента для потока XML</related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Управление сериализацией XML с использованием атрибутов</related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Примеры сериализации XML</related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition Tool (Xsd.exe)</related>
  </Docs>
</Type>