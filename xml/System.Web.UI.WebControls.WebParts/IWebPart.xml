<Type Name="IWebPart" FullName="System.Web.UI.WebControls.WebParts.IWebPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eae5ad29fef4608f06ca8172b3de1c88266951da" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51903285" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPart" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPart" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPart" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPart" />
  <TypeSignature Language="F#" Value="type IWebPart = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет общие свойства пользовательского интерфейса, используемые элементами управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart> Интерфейс предоставляет несколько свойств пользовательского интерфейса, которые повышают удобство работы с <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления. При создании элементов управления, производных от базового <xref:System.Web.UI.WebControls.WebParts.WebPart> класс, вы получаете реализацию всех свойств в <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейс, так как <xref:System.Web.UI.WebControls.WebParts.WebPart> базовый класс реализует этот интерфейс.  
  
 Можно использовать существующие пользовательские элементы управления, элементов управления ASP.NET или пользовательских серверных элементов управления, которые не наследуют от <xref:System.Web.UI.WebControls.WebParts.WebPart> класс как часть приложения веб-частей, и они также могут использовать эти свойства пользовательского интерфейса, объявленные <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейс. При наличии существующих серверных элементов управления в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> зоны, во время выполнения, они упаковываются с <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> объекта. Так как <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> класс наследует от <xref:System.Web.UI.WebControls.WebParts.WebPart> базового класса, он позволяет имеющихся серверных элементов управления для работы как true <xref:System.Web.UI.WebControls.WebParts.WebPart> элементы управления и он добавляет к ним свойства <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейс.  
  
 Если поместить серверных элементов управления, которые не являются <xref:System.Web.UI.WebControls.WebParts.WebPart> элементы управления в зонах, которые они могут использовать <xref:System.Web.UI.WebControls.WebParts.IWebPart> свойства во время выполнения и можно также объявить значения этих свойств серверных элементов управления в разметке страницы (в формате сохранения страницы). Тем не менее, поскольку эти свойства доступны только для серверных элементов управления во время выполнения, написания кода во время разработки таких компонентов, как IntelliSense не распознают <xref:System.Web.UI.WebControls.WebParts.IWebPart> свойства, объявленные на серверных элементов управления. Объявленные свойства этих элементов управления по-прежнему работать, когда страница загружается, но Microsoft Visual Studio не распознает свойства как допустимым во время разработки. Если вы хотите добавить <xref:System.Web.UI.WebControls.WebParts.IWebPart> свойства для существующего сервера и пользовательские элементы управления, чтобы повысить удобство работы пользователей во время разработки, можно реализовать <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейс в серверном элементе управления.  
  
 Возможно, основная причина для реализации <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейс предназначен для элементов управления, которые не поддерживают использование свойств expando (настраиваемая). Expando свойства являются строками, которые могут быть добавлены к классу динамически как свойство, с помощью параметра <xref:System.Web.UI.IAttributeAccessor> интерфейс. Элементы управления, реализующие этот интерфейс, включая <xref:System.Web.UI.WebControls.WebControl> класса и его дочерние элементы, можно использовать пользовательские свойства. Таким образом, все серверные элементы управления ASP.NET, пользовательских элементов управления, производных от них, веб-элементы управления пользователя, и <xref:System.Web.UI.WebControls.WebParts.WebPart> элементы управления поддерживают использование свойств expando. Но пользовательские элементы управления, которые наследуют непосредственно от базового <xref:System.Web.UI.Control> класса не поддерживают свойств expando. Таким образом Если объявить эти элементы управления в пределах <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, вы не сможете объявлять распространенные <xref:System.Web.UI.WebControls.WebParts.IWebPart> свойства элементов управления, свойства, такие как <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> и <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>. Если вы хотите использовать эти свойства с такими элементами управления, необходимо реализовать <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейс.  
  
   
  
## Examples  
 В следующем примере кода показано, как реализовать <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейса в пользовательском элементе управления. Это простая реализация, которая как минимум показан способ реализации свойства.  
  
 Первая часть в примере кода показан пользовательский элемент управления. Пользовательский элемент управления реализует все свойства <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейс, а также два дополнительных общих свойства привязаны к элементам управления в пользовательском интерфейсе. Использовать два настраиваемых свойства каждого `Personalizable` атрибутом, который предоставляет значения этих свойств, чтобы сохраняться между сеансами браузера. Обратите внимание, что в базовом <xref:System.Web.UI.WebControls.WebParts.WebPart> реализации класса, все свойства <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейса реализуются как настраиваемые, хотя это не в этом примере кода.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#2)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#2)]  
  
 Вторая часть в примере кода показан веб-страницы, на котором размещается пользовательский элемент управления. На странице имеется <xref:System.Web.UI.WebControls.WebParts.WebPartZone> управления, в которой указывается пользовательский элемент управления. Обратите внимание, что некоторые из <xref:System.Web.UI.WebControls.WebParts.IWebPart> значения свойств интерфейса заданы декларативно в разметке для пользовательского элемента управления, позволяющий выполнить выглядеть и вести себя <xref:System.Web.UI.WebControls.WebParts.WebPart> управления во время разработки и во время выполнения. Если загрузить страницу в браузере, можно использовать пользовательский Интерфейс на странице для демонстрации возможности для программного изменения значений реализованный интерфейс <xref:System.Web.UI.WebControls.WebParts.IWebPart> свойства во время выполнения. При изменении некоторых значений свойств, изменения этих данных не указаны на странице, но видны в исходный код страницы ( <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> свойство), или хранятся данные состояния приложения ( <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> свойство).  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Обычно не нужно реализовать <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> интерфейс, либо на пользовательских <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> элементов управления или сервер управляет, так как базовый <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> класс уже реализует интерфейс. Custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> и других серверных элементов управления, которые помещаются в <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> зоны, можно использовать все <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> свойства.  
  
Основная причина для реализации <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> интерфейс самостоятельно, ли в пользовательской <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> управления или другой серверный элемент управления, если вы хотите изменить реализацию по умолчанию. Например может потребоваться предоставить значения по умолчанию для некоторых свойств. Еще одна причина для реализации интерфейса пользователя или сервер — таким образом, чтобы среда разработки, работы с этими свойствами элемента управления будут расширены.</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Страницы ASP.NET веб-частей</related>
  </Docs>
  <Members>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CatalogIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес для изображения, представляющего элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> в каталоге элементов управления.</summary>
        <value>Строка, представляющая URL-адрес для изображения, которое используется для представления элемента управления в каталоге. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Веб-частей приложения часто предоставляют каталога (или список) элементов управления, которые пользователи могут добавлять на страницу. <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> Свойство элемента управления содержит URL-адрес изображения, которое представляет элемент управления, расположенный в каталоге.  
  
   
  
## Examples  
 В следующем примере кода показано использование декларативные и программные <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> свойство. Полный исходный код для примера находится в разделе "Пример" <xref:System.Web.UI.WebControls.WebParts.IWebPart> Общие сведения о классе.  
  
 В первой части примера кода показывается, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> свойство.  
  
 [!code-csharp[WebParts_IWebPart_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#8)]
 [!code-vb[WebParts_IWebPart_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#8)]  
  
 Вторая часть в примере кода демонстрируется использование метода для пользовательского элемента управления, который программно задает значение <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> свойства, когда пользователь выбирает соответствующее имя свойства с помощью переключателей на странице, задает новое значение в текстовом поле и затем нажимает кнопку **обновления** кнопки.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 В третьей части в примере кода показано, как пользователю контролировать, реализующий <xref:System.Web.UI.WebControls.WebParts.IWebPart> ссылается интерфейс <xref:System.Web.UI.WebControls.WebParts.WebPartZone> элемента управления и как <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> свойству декларативно в элементе управления. Обратите внимание на то, что так как каталог, не входящий в состав примера управления веб-частей, не отображается фактический эффект этого свойства.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Страницы ASP.NET веб-частей</related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает краткий текст, описывающий функции элемента управления для использования в подсказке и в каталогах серверных элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Строка, кратко описывающая функции элемента управления. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> Значение свойства обычно используется как строку описания для элемента управления в каталоги, которые приведены списки <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления и в качестве всплывающей подсказки в заголовке окна элемента управления. Содержимое свойства отображается во всплывающей подсказке при наведении указателя мыши на текст заголовка в заголовке окна элемента управления.  
  
   
  
## Examples  
 В следующем примере кода показано использование декларативные и программные <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> свойство. Полный исходный код для примера находится в разделе "Пример" <xref:System.Web.UI.WebControls.WebParts.IWebPart> Общие сведения о классе.  
  
 В первой части примера кода показывается, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> свойство.  
  
 [!code-csharp[WebParts_IWebPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#3)]
 [!code-vb[WebParts_IWebPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#3)]  
  
 Вторая часть в примере кода демонстрируется использование метода для пользовательского элемента управления, который программно задает значение <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> свойства, когда пользователь выбирает соответствующее имя свойства с помощью переключателей на странице, задает новое значение в текстовом поле и затем нажимает кнопку **обновления** кнопки.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 В третьей части в примере кода показано, как пользователю контролировать, реализующий <xref:System.Web.UI.WebControls.WebParts.IWebPart> ссылается интерфейс <xref:System.Web.UI.WebControls.WebParts.WebPartZone> элемента управления и как <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> свойству декларативно в элементе управления. Обратите внимание на то, что значение этого свойства можно увидеть, наведя указатель мыши на текст заголовка в заголовке окна элемента управления, после загрузки страницы в браузере. Также можно поэкспериментировать с изменением значения свойства программным образом во время выполнения путем загрузки веб-страницы и с помощью предоставленного пользовательского интерфейса (UI), чтобы изменить значение свойства.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Страницы ASP.NET веб-частей</related>
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Subtitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subtitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Subtitle : string" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает строку, которая объединены со значением свойства <see cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" /> для формирования полного заголовка для элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Строка, служащая подзаголовком для элемента управления. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> Свойство используется для возврата строки по умолчанию подзаголовок для <xref:System.Web.UI.WebControls.WebParts.WebPart> элемент управления, который добавляется в заголовок элемента управления в строке заголовка.  
  
 Если указать значение по умолчанию для <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> свойства в элементе управления, который реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейса, веб-частей, набор элементов управления автоматически добавляет его к значению <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> свойство элемента управления во время выполнения.  
  
   
  
## Examples  
 В следующем примере кода показано использование декларативные и программные <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> свойство. Полный исходный код для примера находится в разделе "Пример" <xref:System.Web.UI.WebControls.WebParts.IWebPart> Общие сведения о классе.  
  
 В первой части примера кода показывается, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> свойство. Обратите внимание, что свойство только для чтения и должен использоваться для предоставления подзаголовка, который добавляется к основному заголовку элемента управления.  
  
 [!code-csharp[WebParts_IWebPart_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#5)]
 [!code-vb[WebParts_IWebPart_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#5)]  
  
 Вторая часть в примере кода показано, как пользователю контролировать, реализующий <xref:System.Web.UI.WebControls.WebParts.IWebPart> ссылается интерфейс <xref:System.Web.UI.WebControls.WebParts.WebPartZone> элемента управления и как доступные для записи свойства из <xref:System.Web.UI.WebControls.WebParts.IWebPart> заданы декларативно в элементе управления. После загрузки страницы в браузере, обратите внимание, что значение по умолчанию <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> свойство, которое было задано в коде реализации пользовательского элемента управления, добавляется к заголовку в заголовке окна элемента управления.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Страницы ASP.NET веб-частей</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает название элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Строка, содержащая заголовок элемента управления. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Видимый заголовок текста в заголовке окна элемента управления задается <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> свойство.  
  
 Если не указать заголовок для элемента управления, элемент управления веб-частей, автоматически вычисляет строку по умолчанию для использования в качестве заголовка. Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>. Кроме того существует возможность предоставления подзаголовка, который добавляется в строку заголовка. Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано использование декларативные и программные <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> свойство. Полный исходный код для примера находится в разделе "Пример" <xref:System.Web.UI.WebControls.WebParts.IWebPart> Общие сведения о классе.  
  
 В первой части примера кода показывается, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> свойство.  
  
 [!code-csharp[WebParts_IWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#4)]
 [!code-vb[WebParts_IWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#4)]  
  
 Вторая часть в примере кода демонстрируется использование метода для пользовательского элемента управления, который программно задает значение <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> свойства, когда пользователь выбирает соответствующее имя свойства с помощью переключателей на странице, задает новое значение в текстовом поле и затем нажимает кнопку **обновления** кнопки.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 В третьей части в примере кода показано, как пользователю контролировать, реализующий <xref:System.Web.UI.WebControls.WebParts.IWebPart> ссылается интерфейс <xref:System.Web.UI.WebControls.WebParts.WebPartZone> элемента управления и как <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> свойству декларативно в элементе управления.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Страницы ASP.NET веб-частей</related>
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес изображения, которое используется для представления элемента управления веб-частей в собственном заголовке окна элемента управления.</summary>
        <value>Строка, представляющая URL-адрес изображения. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> Свойство предоставляет способ связать значок с <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления. Значок отображается в собственном заголовке окна элемента управления. Для обеспечения согласованности тематической разработчикам приложений может потребоваться сделать этот значок, как показано на рисунке, представляющий элемент управления в каталоге элементов управления веб-частей (изображение, на которые ссылается <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> свойство).  
  
 Так как она реализована в наборе элементов управления веб-частей, <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> свойство является настраиваемым пользователями, чтобы изменить изображение или значок, отображаемый в заголовке окна элемента управления.  
  
   
  
## Examples  
 В следующем примере кода показано использование декларативные и программные <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> свойство. Полный исходный код для примера находится в разделе "Пример" <xref:System.Web.UI.WebControls.WebParts.IWebPart> Общие сведения о классе.  
  
 В первой части примера кода показывается, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> свойство.  
  
 [!code-csharp[WebParts_IWebPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#6)]
 [!code-vb[WebParts_IWebPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#6)]  
  
 Вторая часть в примере кода демонстрируется использование метода для пользовательского элемента управления, который программно задает значение <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> свойства, когда пользователь выбирает соответствующее имя свойства с помощью переключателей на странице, задает новое значение в текстовом поле и затем нажимает кнопку **обновления** кнопки.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 В третьей части в примере кода показано, как пользователю контролировать, реализующий <xref:System.Web.UI.WebControls.WebParts.IWebPart> ссылается интерфейс <xref:System.Web.UI.WebControls.WebParts.WebPartZone> элемента управления и как <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> свойству декларативно в элементе управления. Обратите внимание, что если вы не укажете URL-адрес для реального изображения, заполнитель для значка отображается в заголовке окна.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Страницы ASP.NET веб-частей</related>
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес для дополнительных сведений об элементе управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Строка, представляющая URL-адреса для дополнительных сведений об элементе управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При назначении URL-адрес <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойство, заголовок элемента управления становится ссылку. Это свойство предназначено для того, предоставляет удобный способ для конечных пользователей получить дополнительные сведения об элементе управления. Дополнительные сведения может предоставить об авторском праве, контактные данные, сведения об авторе элемента управления, или только краткую сводку назначения элемента управления.  
  
> [!NOTE]
>  Как правило, нет смысла использовать <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойство для связывания содержимого справки. Лучший способ предоставить ссылку справки для элемента управления является использование <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано использование декларативные и программные <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойство. Полный исходный код для примера находится в разделе "Пример" <xref:System.Web.UI.WebControls.WebParts.IWebPart> Общие сведения о классе.  
  
 В первой части примера кода показывается, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойство.  
  
 [!code-csharp[WebParts_IWebPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#7)]
 [!code-vb[WebParts_IWebPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#7)]  
  
 Вторая часть в примере кода демонстрируется использование метода для пользовательского элемента управления, который программно задает значение <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойства, когда пользователь выбирает соответствующее имя свойства с помощью переключателей на странице, задает новое значение в текстовом поле и затем нажимает кнопку **обновления** кнопки.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 В третьей части в примере кода показано, как пользователю контролировать, реализующий <xref:System.Web.UI.WebControls.WebParts.IWebPart> ссылается интерфейс <xref:System.Web.UI.WebControls.WebParts.WebPartZone> элемента управления и как <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойству декларативно в элементе управления. Обратите внимание, что если вы не укажете URL-адрес для реальной страницы, а затем пользователь щелкает ссылку в заголовке окна, появится сообщение об ошибке.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Страницы ASP.NET веб-частей</related>
      </Docs>
    </Member>
  </Members>
</Type>