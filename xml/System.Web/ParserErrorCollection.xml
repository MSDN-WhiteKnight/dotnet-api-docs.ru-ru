<Type Name="ParserErrorCollection" FullName="System.Web.ParserErrorCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b1f3ca0c008fe22cc5070ba06baebc00f1782b6e" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55422371" /></Metadata><TypeSignature Language="C#" Value="public sealed class ParserErrorCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ParserErrorCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.ParserErrorCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParserErrorCollection&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParserErrorCollection sealed : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type ParserErrorCollection = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Управляет набором ошибок средства синтаксического анализа, обнаруживаемых в процессе анализа. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ParserErrorCollection> Класс предоставляет методы и свойства, которые можно использовать для управления коллекцией <xref:System.Web.ParserError> объектов. Например, можно добавить набор ошибок синтаксического анализатора для в коллекцию при использовании пользовательского <xref:System.Web.Compilation.BuildProvider> объект к отчету, все проанализировать исключения, перехватываемые во время синтаксического анализа.  
  
 Чтобы добавить ошибки средства синтаксического анализа к их удалению из или найдите их в коллекции, используйте следующее:  
  
-   <xref:System.Web.ParserErrorCollection.Add%2A> Метод для добавления одного <xref:System.Web.ParserError> в коллекцию.  
  
-   <xref:System.Web.ParserErrorCollection.AddRange%2A> Методы, чтобы добавить несколько <xref:System.Web.ParserError> объекты в коллекцию.  
  
-   Оба <xref:System.Web.ParserErrorCollection.Insert%2A> метод и <xref:System.Web.ParserErrorCollection.Item%2A> свойство, являющееся <xref:System.Web.ParserErrorCollection> индексатора, для добавления одного <xref:System.Web.ParserError> в коллекцию по указанному индексу.  
  
 Кроме того, можно использовать <xref:System.Web.ParserErrorCollection> класс для следующих целей:  
  
-   Удалить <xref:System.Web.ParserError> объекты с <xref:System.Web.ParserErrorCollection.Remove%2A> метод.  
  
-   Проверьте ли конкретный <xref:System.Web.ParserError> находится в коллекции с помощью <xref:System.Web.ParserErrorCollection.Contains%2A> метод.  
  
-   Найти область <xref:System.Web.ParserError> объект находится в коллекции с помощью <xref:System.Web.ParserErrorCollection.IndexOf%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.ParserErrorCollection> методы.  
  
 [!code-csharp[System.Web.ParserErrorCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#1)]
 [!code-vb[System.Web.ParserErrorCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.HttpException" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.ParserErrorCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserErrorCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParserErrorCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.ParserErrorCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как инициализировать экземпляр <xref:System.Web.ParserErrorCollection> класса.  
  
 [!code-csharp[System.Web.ParserErrorCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#2)]
 [!code-vb[System.Web.ParserErrorCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserErrorCollection (System.Web.ParserError[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.ParserError[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.#ctor(System.Web.ParserError[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ParserError())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParserErrorCollection(cli::array &lt;System::Web::ParserError ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.ParserErrorCollection : System.Web.ParserError[] -&gt; System.Web.ParserErrorCollection" Usage="new System.Web.ParserErrorCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError[]" />
      </Parameters>
      <Docs>
        <param name="value">Массив типа <see cref="T:System.Web.ParserError" />, который указывает ошибки, добавляемые в коллекцию.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.ParserErrorCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ParserErrorCollection.%23ctor%2A?displayProperty=nameWithType> Конструктор добавляет массив <xref:System.Web.ParserError> объекты в коллекцию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Add(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As ParserError) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.ParserError -&gt; int" Usage="parserErrorCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value">Добавляемое в коллекцию значение <see cref="T:System.Web.ParserError" />.</param>
        <summary>Добавляет значение в коллекцию.</summary>
        <returns>Индекс значения в коллекции, в противном случае — число -1, если значение уже имеется в коллекции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.ParserErrorCollection.Add%2A> метод для добавления существующего <xref:System.Web.ParserError> в коллекцию. Не удается добавить эту же <xref:System.Web.ParserError> объект в коллекцию несколько раз. При вызове <xref:System.Web.ParserErrorCollection.Add%2A> с помощью метода <xref:System.Web.ParserError> возвращается объект, который уже находится в коллекции, то добавление завершается ошибкой и -1.  
  
 Чтобы добавить несколько объектов в коллекцию, используйте <xref:System.Web.ParserErrorCollection.AddRange%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода показано, как добавить <xref:System.Web.ParserError> объект <xref:System.Web.ParserErrorCollection> объекта.  
  
 [!code-csharp[System.Web.ParserErrorCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#3)]
 [!code-vb[System.Web.ParserErrorCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет объекты <see cref="T:System.Web.ParserError" /> в коллекцию.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Web.ParserError[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Web.ParserError[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.AddRange(System.Web.ParserError[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ParserError())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Web::ParserError ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Web.ParserError[] -&gt; unit" Usage="parserErrorCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError[]" />
      </Parameters>
      <Docs>
        <param name="value">Массив типа <see cref="T:System.Web.ParserError" />, который указывает значения, добавляемые в коллекцию.</param>
        <summary>Добавляет в коллекцию массив объектов <see cref="T:System.Web.ParserError" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.ParserErrorCollection.AddRange%2A> метод, чтобы добавить массив <xref:System.Web.ParserError> объекты в коллекцию. <xref:System.Web.ParserErrorCollection.AddRange%2A> Метод полезен при создании нескольких <xref:System.Web.ParserError> объектов и добавить их в коллекцию с помощью одного вызова метода. Чтобы добавить отдельные <xref:System.Web.ParserError> объекты в коллекцию, используют <xref:System.Web.ParserErrorCollection.Add%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода показано, как добавить диапазон <xref:System.Web.ParserError> объектов <xref:System.Web.ParserErrorCollection> объекта.  
  
 [!code-csharp[System.Web.ParserErrorCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#4)]
 [!code-vb[System.Web.ParserErrorCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Web.ParserErrorCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Web.ParserErrorCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.AddRange(System.Web.ParserErrorCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ParserErrorCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Web::ParserErrorCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Web.ParserErrorCollection -&gt; unit" Usage="parserErrorCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserErrorCollection" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Web.ParserErrorCollection" />, содержащий объекты <see cref="T:System.Web.ParserError" />, для добавления в коллекцию.</param>
        <summary>Добавляет объекты из существующего объекта <see cref="T:System.Web.ParserErrorCollection" /> в коллекцию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В отличие от <xref:System.Web.ParserErrorCollection.Add%2A> метод, <xref:System.Web.ParserErrorCollection.AddRange%2A> метод не имеет возвращаемое значение, которое может использоваться для определения ли <xref:System.Web.ParserError> добавляемый объект уже присутствует в коллекции. Если вам требуются эти сведения, используйте <xref:System.Web.ParserErrorCollection.Contains%2A> метод перед использованием <xref:System.Web.ParserErrorCollection.AddRange%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как добавить диапазон <xref:System.Web.ParserError> объектов <xref:System.Web.ParserErrorCollection> объекта.  
  
 [!code-csharp[System.Web.ParserErrorCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#4)]
 [!code-vb[System.Web.ParserErrorCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение <see cref="T:System.Web.ParserError" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Contains(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ParserError) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.ParserError -&gt; bool" Usage="parserErrorCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Web.ParserError" /> для поиска в коллекции.</param>
        <summary>Определяет, присутствует ли в коллекции объект <see cref="T:System.Web.ParserError" />.</summary>
        <returns>Значение <see langword="true" />, если <see cref="T:System.Web.ParserError" /> входит в коллекцию; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Не удается добавить эту же <xref:System.Web.ParserError> объект в коллекцию несколько раз. Тем не менее, при попытке добавить <xref:System.Web.ParserError> объекта более одного раза не вызовет исключение. Вместо этого Добавление объекта завершится ошибкой. В этом случае <xref:System.Web.ParserErrorCollection.Add%2A> метод возвращает значение -1. Тем не менее <xref:System.Web.ParserErrorCollection.AddRange%2A> и <xref:System.Web.ParserErrorCollection.Insert%2A> методы не имеют возвращаемых значений. При добавлении <xref:System.Web.ParserError> объекты с помощью одного из этих методов, используют <xref:System.Web.ParserErrorCollection.Contains%2A> метод, чтобы определить, является ли определенный <xref:System.Web.ParserError> объект уже находится в коллекции.  
  
   
  
## Examples  
 В следующем примере кода показано, как для поиска экземпляра указанного <xref:System.Web.ParserError> объекта в <xref:System.Web.ParserErrorCollection> объекта.  
  
 [!code-csharp[System.Web.ParserErrorCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#5)]
 [!code-vb[System.Web.ParserErrorCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.ParserError[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.ParserError[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.CopyTo(System.Web.ParserError[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ParserError(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::ParserError ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.ParserError[] * int -&gt; unit" Usage="parserErrorCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.ParserError[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Массив типа <see cref="T:System.Web.ParserError" />, в который копируются ошибки логического анализатора из коллекции.</param>
        <param name="index">Начальный индекс в массиве для копирования объектов <see cref="T:System.Web.ParserError" />.</param>
        <summary>Копирует объекты <see cref="T:System.Web.ParserError" /> из коллекции в совместимый одномерный массив, начиная с указанного индекса в массиве назначения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.ParserErrorCollection.CopyTo%2A> метод копирования <xref:System.Web.ParserError> объектов в коллекции (включая ссылки на элемент, они содержат) в совместимый массив, начиная с указанного индекса. Это полезно, если необходимо отсортировать <xref:System.Web.ParserError> объектов в коллекции с помощью <xref:System.Array.Sort%2A> метод. Для этого выполните следующие действия.  
  
1.  Копировать <xref:System.Web.ParserError> объекты в совместимый массив.  
  
2.  Сортировка массива.  
  
3.  Используйте <xref:System.Web.ParserErrorCollection.Remove%2A> метод для удаления всех <xref:System.Web.ParserError> объекты из коллекции.  
  
4.  Используйте <xref:System.Web.ParserErrorCollection.AddRange%2A> метод для добавления отсортированного массива в коллекцию.  
  
   
  
## Examples  
 В следующем примере кода показано, как скопировать содержимое <xref:System.Web.ParserErrorCollection> объекта в указанный <xref:System.Web.ParserError> массива.  
  
 [!code-csharp[System.Web.ParserErrorCollection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#6)]
 [!code-vb[System.Web.ParserErrorCollection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.IndexOf(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ParserError) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.ParserError -&gt; int" Usage="parserErrorCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Web.ParserError" /> для поиска в коллекции.</param>
        <summary>Получает индекс указанного объекта <see cref="T:System.Web.ParserError" /> в коллекции.</summary>
        <returns>Отсчитываемый от нуля индекс объекта <see cref="T:System.Web.ParserError" /> в коллекции, в противном случае — значение –1, если объект <see cref="T:System.Web.ParserError" /> не входит в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.ParserErrorCollection.IndexOf%2A> метод для определения индекса <xref:System.Web.ParserError> объекта в коллекции. Это полезно для определения индекса каждого <xref:System.Web.ParserError> при итерации по коллекции с помощью <xref:System.Collections.IEnumerator> объект, возвращаемый <xref:System.Collections.CollectionBase.GetEnumerator%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода показано, как найти индекс <xref:System.Web.ParserError> объект по указанному индексу в <xref:System.Web.ParserErrorCollection> коллекции.  
  
 [!code-csharp[System.Web.ParserErrorCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#5)]
 [!code-vb[System.Web.ParserErrorCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Insert(System.Int32,System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As ParserError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.ParserError -&gt; unit" Usage="parserErrorCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="index">Индекс в коллекции, по которому следует вставить объект <see cref="T:System.Web.ParserError" />.</param>
        <param name="value">Объект <see cref="T:System.Web.ParserError" />, который нужно вставить в коллекцию.</param>
        <summary>Вставляет указанный объект <see cref="T:System.Web.ParserError" /> в коллекцию по указанному индексу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.ParserErrorCollection.Insert%2A> способ вставить существующий <xref:System.Web.ParserError> объект с заданным индексом в коллекции.  
  
 Не удается добавить эту же <xref:System.Web.ParserError> объект в коллекцию несколько раз. При вызове <xref:System.Web.ParserErrorCollection.Insert%2A> метод с помощью <xref:System.Web.ParserError> , уже присутствует в коллекции, вставка завершается неудачно. Используйте <xref:System.Web.ParserErrorCollection.Contains%2A> метод до вставки, чтобы определить, является ли определенный <xref:System.Web.ParserError> уже присутствует в коллекции. Для изменения положения <xref:System.Web.ParserError> в коллекции, необходимо сначала удалить его с помощью <xref:System.Web.ParserErrorCollection.Remove%2A> метода и затем вставить его в нужный индекс с помощью <xref:System.Web.ParserErrorCollection.Insert%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вставить <xref:System.Web.ParserError> объект по указанному индексу в <xref:System.Web.ParserErrorCollection> коллекции.  
  
 [!code-csharp[System.Web.ParserErrorCollection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#8)]
 [!code-vb[System.Web.ParserErrorCollection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.ParserError this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ParserError Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.ParserErrorCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ParserError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ParserError ^ default[int] { System::Web::ParserError ^ get(int index); void set(int index, System::Web::ParserError ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.ParserError with get, set" Usage="System.Web.ParserErrorCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ParserError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс возвращаемого или задаваемого объекта <see cref="T:System.Web.ParserError" /> в коллекции.</param>
        <summary>Получает или задает объект <see cref="T:System.Web.ParserError" /> по указанному индексу в коллекции.</summary>
        <value>Объект <see cref="T:System.Web.ParserError" />, содержащийся в коллекции по указанному индексу.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.ParserErrorCollection.Item%2A> извлекаемого свойства <xref:System.Web.ParserError> объект по указанному индексу в коллекции. При наличии ссылку <xref:System.Web.ParserError> объекта и индекса, необходимость использовать <xref:System.Web.ParserErrorCollection.IndexOf%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Remove(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As ParserError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.ParserError -&gt; unit" Usage="parserErrorCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Web.ParserError" />, который требуется удалить из коллекции.</param>
        <summary>Удаляет указанный объект <see cref="T:System.Web.ParserError" /> из коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.ParserErrorCollection.Remove%2A> способ удаления <xref:System.Web.ParserError> из коллекции при наличии ссылку на объект <xref:System.Web.ParserError>.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется удаление <xref:System.Web.ParserError> из указанного индекса в <xref:System.Web.ParserErrorCollection> объекта.  
  
 [!code-csharp[System.Web.ParserErrorCollection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#8)]
 [!code-vb[System.Web.ParserErrorCollection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>