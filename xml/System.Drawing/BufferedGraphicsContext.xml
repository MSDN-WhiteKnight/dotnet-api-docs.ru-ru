<Type Name="BufferedGraphicsContext" FullName="System.Drawing.BufferedGraphicsContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6b73d9b8336c688dfdf0cd71df400a5168fb8699" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56786900" /></Metadata><TypeSignature Language="C#" Value="public sealed class BufferedGraphicsContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphicsContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphicsContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphicsContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphicsContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphicsContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Предоставляет методы создания графических буферов, которые могут использоваться для двойной буферизации.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.BufferedGraphicsContext> Класс позволяет реализовать пользовательские двойную буферизацию для рисунков. Графики, использование двойной буферизации можно сократить или устранить мерцание, вызываемое перерисовкой поверхность отображения.  
  
> [!NOTE]
>  Самый простой способ использования двойной буферизации — присвоить <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> управления флагом стиля в элемент управления с помощью <xref:System.Windows.Forms.Control.SetStyle%2A> метод. Параметр <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> флаг стили элемента управления для элемента управления перенаправляет все рисования в элементе управления через графический буфер по умолчанию, не требуя никакого дополнительного кода. Этот флаг установлен `true` по умолчанию.  
  
 <xref:System.Drawing.BufferedGraphicsContext> Класс предоставляет методы для создания и настройки графический буфер. <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> Метод создает <xref:System.Drawing.BufferedGraphics>, который является оболочкой для графический буфер, который также предоставляет методы, которые можно использовать для записи в буфер и отображения его содержимого на устройство вывода.  
  
 Вы можете получить <xref:System.Drawing.BufferedGraphicsContext> для текущего домена приложения из статического <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> свойство. Для насыщенных графикой приложений, таких как анимации, можно создать специальный <xref:System.Drawing.BufferedGraphicsContext> с помощью конструктора, но для большинства приложений <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> свойство будет достаточно.  
  
 Дополнительные сведения о рисовании буферизированной графики и настраиваемые реализации буферизации см. в разделе [двойная буферизация графики](~/docs/framework/winforms/advanced/double-buffered-graphics.md) и [как: Управление буферизацией графики](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как получить <xref:System.Drawing.BufferedGraphicsContext> для текущего домена приложения. Этот код является частью большего примера для <xref:System.Drawing.BufferedGraphics> класса.  
  
 [!code-cpp[BufferingExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#1)]
 [!code-csharp[BufferingExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#1)]
 [!code-vb[BufferingExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.BufferedGraphics" />
    <altmember cref="T:System.Drawing.BufferedGraphicsManager" />
    <altmember cref="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
    <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Двойная буферизация графики</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferedGraphicsContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.BufferedGraphicsContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для насыщенных графикой приложений, таких как анимации, может иногда повысить производительность с помощью специальной <xref:System.Drawing.BufferedGraphicsContext> вместо экземпляра по умолчанию, предоставляемые <xref:System.Drawing.BufferedGraphicsManager>. Это позволяет создавать и управлять ими буферы графики по отдельности.  
  
> [!NOTE]
>  Следует всегда вызывать <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> после завершения с помощью выделенного <xref:System.Drawing.BufferedGraphicsContext>.  
  
 Дополнительные сведения о выделенном графических буферов, см. в разделе [как: Управление буферизацией графики](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Двойная буферизация графики</related>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md">Практическое руководство. Управление буферизацией графики</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Allocate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает графический буфер.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(class System.Drawing.Graphics targetGraphics, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetGraphics As Graphics, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(System::Drawing::Graphics ^ targetGraphics, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetGraphics, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetGraphics" Type="System.Drawing.Graphics" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetGraphics">Объект <see cref="T:System.Drawing.Graphics" /> для сопоставления формата пикселей для нового буфера.</param>
        <param name="targetRectangle">Объект <see cref="T:System.Drawing.Rectangle" />, показывающий размер создаваемого буфера.</param>
        <summary>Создает графический буфер заданного размера, используя формат пикселей заданного объекта <see cref="T:System.Drawing.Graphics" />.</summary>
        <returns>Объект <see cref="T:System.Drawing.BufferedGraphics" />, который может использоваться для рисования буфера заданных размеров.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> метод прямоугольником, размер которых превышает значение из <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> свойство, временный <xref:System.Drawing.BufferedGraphicsContext> создается для выделения буфера и предоставить временный контекст для буфера. Новый <xref:System.Drawing.BufferedGraphicsContext> отличается от <xref:System.Drawing.BufferedGraphicsContext> приложения домене и освобождается автоматически при <xref:System.Drawing.BufferedGraphics> возвращаемые <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> метод удаляется.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется создание буфера графики с помощью <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> метод. Этот код является частью большего примера для <xref:System.Drawing.BufferedGraphics> класса.  
  
 [!code-cpp[BufferingExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#3)]
 [!code-csharp[BufferingExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#3)]
 [!code-vb[BufferingExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Двойная буферизация графики</related>
      </Docs>
    </Member>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(native int targetDC, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetDC As IntPtr, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(IntPtr targetDC, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : nativeint * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetDC, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetDC">Указатель <see cref="T:System.IntPtr" /> на контекст устройства для соответствия формату пикселей нового буфера.</param>
        <param name="targetRectangle">Объект <see cref="T:System.Drawing.Rectangle" />, показывающий размер создаваемого буфера.</param>
        <summary>Создает графический буфер заданного размера, используя формат пикселей заданного объекта <see cref="T:System.Drawing.Graphics" />.</summary>
        <returns>Объект <see cref="T:System.Drawing.BufferedGraphics" />, который может использоваться для рисования буфера заданных размеров.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> метод прямоугольником, размер которых превышает значение из <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> свойство, временный <xref:System.Drawing.BufferedGraphicsContext> создается для выделения буфера и предоставить временный контекст для буфера. Новый <xref:System.Drawing.BufferedGraphicsContext> отличается от <xref:System.Drawing.BufferedGraphicsContext> приложения домене и освобождается автоматически при <xref:System.Drawing.BufferedGraphics> возвращаемые <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> метод удаляется.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется создание буфера графики с помощью <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> метод. Этот код является частью большего примера для <xref:System.Drawing.BufferedGraphics> класса.  
  
 [!code-cpp[BufferingExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#4)]
 [!code-csharp[BufferingExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#4)]
 [!code-vb[BufferingExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для доступа к неуправляемому коду. Связанные перечисления: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.IntPtr" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Двойная буферизация графики</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphicsContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, занятые модулем <see cref="T:System.Drawing.BufferedGraphicsContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите метод <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> по окончании использования класса <xref:System.Drawing.BufferedGraphicsContext>. Метод <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> оставляет класс <xref:System.Drawing.BufferedGraphicsContext> в непригодном для использования состоянии. После вызова метода <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Drawing.BufferedGraphicsContext> , сборщик мусора мог освободить память, <xref:System.Drawing.BufferedGraphicsContext> занимаемую. Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Всегда вызывайте метод <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.Drawing.BufferedGraphicsContext>. В противном случае оно использует ресурсы не будут освобождены пока сборщик мусора не вызовет <xref:System.Object.Finalize%2A> метод <xref:System.Drawing.BufferedGraphicsContext>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Двойная буферизация графики</related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphicsContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphicsContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, перед тем как он будет уничтожен во время сборки мусора.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="bufferedGraphicsContext.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет текущий графический буфер, если буфер был выделен и еще не был распределен.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если буфер уже используется, он будет помечен для реализации, как только он будет освобожден. в противном случае она удаляется немедленно.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Двойная буферизация графики</related>
      </Docs>
    </Member>
    <Member MemberName="MaximumBuffer">
      <MemberSignature Language="C#" Value="public System.Drawing.Size MaximumBuffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumBuffer As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size MaximumBuffer { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumBuffer : System.Drawing.Size with get, set" Usage="System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает максимальный размер используемого буфера.</summary>
        <value>Объект <see cref="T:System.Drawing.Size" />, показывающий максимальный размер буфера.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет получить или задать максимальные размеры буфера, который должны сохраняться в памяти. Вы можете выделить буфер любого размера, однако любой буфера с измерениями, больше, чем <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> размер будет временно используемые, а затем удаляется, когда <xref:System.Drawing.BufferedGraphics> объект освобождается.  
  
   
  
## Examples  
 В следующем примере показано задание максимального размера буфера для <xref:System.Drawing.BufferedGraphicsContext>. Этот код является частью большего примера для <xref:System.Drawing.BufferedGraphics> класса.  
  
 [!code-cpp[BufferingExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#2)]
 [!code-csharp[BufferingExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#2)]
 [!code-vb[BufferingExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение высоты или ширины размера меньше или равно нулю.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для предоставления пользователю доступа ко всем окнам. Связанные перечисления: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Двойная буферизация графики</related>
      </Docs>
    </Member>
  </Members>
</Type>