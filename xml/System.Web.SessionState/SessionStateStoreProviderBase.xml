<Type Name="SessionStateStoreProviderBase" FullName="System.Web.SessionState.SessionStateStoreProviderBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1841436a6479c0b1c33c26794c28ee86cb78e78f" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51936019" /></Metadata><TypeSignature Language="C#" Value="public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SessionStateStoreProviderBase extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionStateStoreProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SessionStateStoreProviderBase&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateStoreProviderBase abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SessionStateStoreProviderBase = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Задает необходимых членов поставщика состояния сеанса для хранилища данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Состояние сеанса ASP.NET считывает и записывает, что поставщик хранилища данных сеанса в хранилище данных, с помощью состояния сеанса. Поставщик хранилища состояния сеанса — класс, наследующий <xref:System.Web.SessionState.SessionStateStoreProviderBase> абстрактный класс и переопределения его члены с реализациями в зависимости от данных магазина. Поставщик хранилищ состояния сеансов вызывается <xref:System.Web.SessionState.SessionStateModule> класса во время обработки страницы ASP.NET для обмена данными с хранилищем данных для хранения и извлечения переменные сеанса и сведения о связанных сеанса, например значение времени ожидания.  
  
 Данные сеанса в каждое приложение ASP.NET хранятся отдельно для каждого <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> свойство. Данные сеанса не предназначена для приложений ASP.NET.  
  
 Можно указать пользовательский <xref:System.Web.SessionState.SessionStateStoreProviderBase> реализацию для приложения ASP.NET, задав `mode` атрибут `sessionState` элемент конфигурации, <xref:System.Web.SessionState.SessionStateMode.Custom> и `customProvider` атрибуту имя пользовательского поставщика, как показано в примере этого раздела.  
  
## <a name="locking-session-store-data"></a>Блокирование данных Store сеанса  
 Поскольку приложения ASP.NET являются многопоточными для поддержки ответов на параллельные запросы, вполне возможно, что параллельные запросы могут попытаться получить доступ к тем же данным сеанса. Рассмотрим ситуацию, где рамки из набора рамок к того же приложения. Отдельные запросы каждого фрейма в наборе могут быть выполнены на веб-сервере одновременно в разных потоках. Если страницы ASP.NET для каждого источника кадра, получить доступ к переменным состояния сеанса, можно создать несколько потоков, одновременно обращающихся к хранилище сеанса.  
  
 Чтобы избежать конфликтов данных в хранилище сеанса и непредвиденное поведение состояния сеанса, <xref:System.Web.SessionState.SessionStateModule> и <xref:System.Web.SessionState.SessionStateStoreProviderBase> классы включают функции блокировки монопольной блокировки элемент хранилища сеанса для определенного сеанса в течение выполнения страницы ASP.NET. Обратите внимание, что даже если <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> атрибут помечен как `ReadOnly`, может быть возможность записи в хранилище сеанса, поэтому запрос сеанса только для чтения данных из хранилища по-прежнему может оказаться ожидание блокировки данных других страниц ASP.NET в одном приложении освобождены.  
  
 Блокировка устанавливается на данных в хранилище сеанса в начале запроса, в вызове <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> метод. После выполнения запроса, блокировка снимается при вызове <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> метод.  
  
 Если <xref:System.Web.SessionState.SessionStateModule> объекта обнаруживает заблокированные данные сеанса при вызове либо <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> или <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> метод, он будет повторно запросить данные сеанса интервалы полсекунды до снятия блокировки или время, данных сеанса оставался заблокированным превышает значение <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> свойства. При превышении времени ожидания выполнения <xref:System.Web.SessionState.SessionStateModule> объект вызовет <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> метод, чтобы освободить данные хранилища сеанса и запроса данных в хранилище сеанса в этот момент.  
  
 Из-за блокировки хранилища сеанса данные можно освободить путем вызова <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> метод в отдельном потоке до вызова <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> метод для текущего ответа может быть предпринята попытка и выпуска данные хранилища состояния сеанса уже были освобождены и изменены другим сеансом. Чтобы избежать такой ситуации <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> и <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> методы возвращают идентификатор блокировки. Этот идентификатор блокировки должен быть включен с каждым запросом для изменения данных заблокированные хранилища сеанса. Хранилище сеанса данные изменяются только в том случае, если идентификатор блокировки в хранилище данных совпадает с идентификатором блокировки, предоставляемые <xref:System.Web.SessionState.SessionStateModule>.  
  
## <a name="deleting-expired-session-store-data"></a>Удаление данных с истекшим сроком действия сеанса Store  
 Когда <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> был вызван для конкретного сеанса, данные для этого сеанса, будут удалены из хранилища данных с помощью <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> метода; в противном случае данные будут оставаться в хранилище данных сеанса на будущие запросы сервера для сеанса. О <xref:System.Web.SessionState.SessionStateStoreProviderBase> реализации для удаления данных истекших сеансов.  
  
   
  
## Examples  
 Пример реализации поставщика хранилища состояния сеанса, см. в разделе [реализация поставщика состояния сеанса Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 В следующем примере кода показан файл Web.config для приложения ASP.NET, который настроен для использования пользовательского состояния сеанса поставщика хранилища.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="OdbcSessionServices" connectionString="DSN=SessionState;" />  
  </connectionStrings>  
  
  <system.web>  
    <sessionState   
      mode="Custom"  
      customProvider="OdbcSessionProvider">  
      <providers>  
        <add name="OdbcSessionProvider"  
             type="Samples.AspNet.Session.OdbcSessionStateStore"  
             connectionStringName="OdbcSessionServices" />  
      </providers>  
    </sessionState>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionStateStoreProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionStateStoreProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Не требуется реализовывать конструктор для класса, который наследует <xref:System.Web.SessionState.SessionStateStoreProviderBase> абстрактного класса. Инициализация значений в параметре <xref:System.Web.SessionState.SessionStateStoreProviderBase> передаются реализации <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> реализацию метода.  
  
   
  
## Examples  
 Пример реализации поставщика хранилища состояния сеанса, см. в разделе [реализация поставщика состояния сеанса Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateNewStoreData">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData CreateNewStoreData(class System.Web.HttpContext context, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateNewStoreData (context As HttpContext, timeout As Integer) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ CreateNewStoreData(System::Web::HttpContext ^ context, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateNewStoreData : System.Web.HttpContext * int -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.CreateNewStoreData (context, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Web.HttpContext" /> для текущего запроса.</param>
        <param name="timeout">Значение <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> для состояния сеанса, заданное для нового объекта <see cref="T:System.Web.SessionState.SessionStateStoreData" />.</param>
        <summary>Создает новый объект <see cref="T:System.Web.SessionState.SessionStateStoreData" />, который необходимо использовать для текущего запроса.</summary>
        <returns>Новый объект <see cref="T:System.Web.SessionState.SessionStateStoreData" /> для текущего запроса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> метод в начале запроса к странице ASP.NET во время <xref:System.Web.HttpApplication.AcquireRequestState> событий. <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> Метод вызывается в том случае, если:  
  
-   входящий запрос имеет не идентификатор сеанса, или  
  
-   входящий запрос имеет идентификатор сеанса, но сеанс не найден в хранилище данных.  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> Метод создает новый <xref:System.Web.SessionState.SessionStateStoreData> объекта с пустым <xref:System.Web.SessionState.ISessionStateItemCollection> объекта, <xref:System.Web.HttpStaticObjectsCollection> коллекции и заданного `timeout` значение. <xref:System.Web.HttpStaticObjectsCollection> Коллекции для приложения ASP.NET могут быть получены с помощью <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> метод.  
  
   
  
## Examples  
 Пример реализации поставщика хранилища состояния сеанса, см. в разделе [реализация поставщика состояния сеанса Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUninitializedItem">
      <MemberSignature Language="C#" Value="public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateUninitializedItem(class System.Web.HttpContext context, string id, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateUninitializedItem (context As HttpContext, id As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateUninitializedItem(System::Web::HttpContext ^ context, System::String ^ id, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateUninitializedItem : System.Web.HttpContext * string * int -&gt; unit" Usage="sessionStateStoreProviderBase.CreateUninitializedItem (context, id, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Web.HttpContext" /> для текущего запроса.</param>
        <param name="id">Объект <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> для текущего запроса.</param>
        <param name="timeout">Свойство <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> сеанса для текущего запроса.</param>
        <summary>Добавляет новый элемент состояния сеанса в хранилище данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Метод используется с сеансами при `cookieless` и `regenerateExpiredSessionId` оба являются атрибуты `true`. Наличие `regenerateExpiredSessionId attribute` присвоено `true` вызывает <xref:System.Web.SessionState.SessionStateModule> объект, чтобы создать новый <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> значение после истечения срока действия <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> встретится значение.  
  
 Процесс создания нового <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> значение требует перенаправления браузера на URL-адрес, который содержит только что созданный <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> значение. <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Метод вызывается во время начального запроса, содержащего просроченным <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> значение. После <xref:System.Web.SessionState.SessionStateModule> получает новый <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> значение для замены значения истекшим сроком действия, он вызывает метод <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> метод, чтобы добавить неинициализированную запись в хранилище данных состояния сеанса. Затем браузер перенаправляется на URL-адрес, содержащий вновь созданным <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> значение. Наличие неинициализированной записи в хранилище данных сеанса гарантирует, что перенаправленный запрос, включающий вновь созданным <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> значение не будет по ошибке запроса для просроченного сеанса и вместо этого рассматривается как новый сеанс.  
  
 Неинициализированная запись в хранилище данных сеанса, связанного с созданным <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> значение и содержит только значения по умолчанию, включая дату окончания срока действия и время и значение, соответствующее `actionFlags` параметр <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>и <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> методы. Неинициализированная запись в хранилище состояния сеанса должен включать `actionFlags` значением, равным <xref:System.Web.SessionState.SessionStateActions.InitializeItem> значение перечисления. Это значение передается <xref:System.Web.SessionState.SessionStateModule> объекты, <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> и <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> методов и уведомляет <xref:System.Web.SessionState.SessionStateModule> объекта, но новый текущий сеанс неинициализированным сеанса. <xref:System.Web.SessionState.SessionStateModule> Объект затем инициализировать новый сеанс и вызывать `Session_OnStart` событий.  
  
 Дополнительные сведения о сеансах без файлов cookie, см. в разделе <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> свойство.  
  
   
  
## Examples  
 Пример реализации поставщика хранилища состояния сеанса, см. в разделе [реализация поставщика состояния сеанса Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit" Usage="sessionStateStoreProviderBase.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, используемые реализацией <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=nameWithType> Метод вызывается, когда <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=nameWithType> метод выполняется в закрывающем домена приложения. Классы, наследующие <xref:System.Web.SessionState.SessionStateStoreProviderBase> класс может использовать этот метод для освобождения всех ресурсов больше не используется.  
  
   
  
## Examples  
 Пример реализации поставщика хранилища состояния сеанса, см. в разделе [реализация поставщика состояния сеанса Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public abstract void EndRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member EndRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.EndRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Web.HttpContext" /> для текущего запроса.</param>
        <summary>Вызывается объектом <see cref="T:System.Web.SessionState.SessionStateModule" /> в конце запроса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> метод в конце запроса к странице ASP.NET во время <xref:System.Web.HttpApplication.EndRequest> событий. Можно использовать <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> метод, чтобы выполнить очистку для каждого запроса, требуемую поставщиком хранилища состояния сеанса.  
  
   
  
## Examples  
 Пример реализации поставщика хранилища состояния сеанса, см. в разделе [реализация поставщика состояния сеанса Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItem(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItem (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItem(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : System.Web.HttpContext * string *  *  *  *  -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItem (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Web.HttpContext" /> для текущего запроса.</param>
        <param name="id">Объект <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> для текущего запроса.</param>
        <param name="locked">При возврате этим методом, содержит значение логического типа, равное <see langword="true" />, если запрашиваемый элемент сеанса заблокирован в хранилище данных сеанса, или значение <see langword="false" /> в противном случае.</param>
        <param name="lockAge">При возврате этим методом содержит объект <see cref="T:System.TimeSpan" /> со значением, равным количеству времени, в течение которого элемент в хранилище данных сеанса оставался заблокированным.</param>
        <param name="lockId">При возврате этим методом содержит объект, значение которого равно идентификатору блокировки для текущего запроса. Дополнительные данные об идентификаторе блокировки см. в разделе "Блокирование данных в хранилище сеанса" в кратком обзоре класса <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />.</param>
        <param name="actions">При возврате этим методом содержит одно из значений <see cref="T:System.Web.SessionState.SessionStateActions" />, позволяющее определить, является ли текущий сеанс неинициализированным сеансом без поддержки файлов Cookie.</param>
        <summary>Возвращает доступные только для чтения данные о состоянии сеанса из хранилища данных сеанса.</summary>
        <returns>Объект <see cref="T:System.Web.SessionState.SessionStateStoreData" />, заполненный значениями сеанса и данными из хранилища данных сеанса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> метод в начале запроса, во время <xref:System.Web.HttpApplication.AcquireRequestState> событие, когда <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> атрибут имеет значение `ReadOnly`. Если <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> атрибуту присваивается `true`, <xref:System.Web.SessionState.SessionStateModule> объектов вместо этого вызывают <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> метод.  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> Возвращает метод <xref:System.Web.SessionState.SessionStateStoreData> объекта со сведениями сеанса из хранилища данных и обновляет дату истечения срока действия данных сеанса. Если элемент сеанса данные не найдены в хранилище данных <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> метода задает `locked` `out` параметр `false` и возвращает `null`. В результате <xref:System.Web.SessionState.SessionStateModule> объект для вызова <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> метод для создания нового сеанса элемента в хранилище данных.  
  
 Если элемент сеанса данных находится в хранилище данных, но данные заблокирован, <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> метода задает `locked` `out` параметр `true`, задает `lockAge` `out` параметр текущей даты и времени, за вычетом даты и время, когда блокировки элемента (которого извлекается из хранилища данных), задает `lockId` `out` параметр идентификатор блокировки, полученные из хранилища данных и возвращает `null`. В результате <xref:System.Web.SessionState.SessionStateModule> объект для вызова <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> метод снова после интервала полсекунды попытаться получить сведения об элементе сеанса.  
  
 Если значение, `lockAge` `out` параметр имеет значение превысит <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> значение, то <xref:System.Web.SessionState.SessionStateModule> вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> метод, чтобы удалить блокировку данных элемента сеанса, а затем вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> метод снова.  
  
 `actionFlags` Параметр используется при как `cookieless` и `regenerateExpiredSessionId` атрибуты имеют значения `true`. `actionFlags` Значение <xref:System.Web.SessionState.SessionStateActions.InitializeItem> указывает, что запись в хранилище данных сеанса новый сеанс, требующему инициализации. Неинициализированные записи в хранилище данных сеанса создаются путем вызова <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> метод. Если элемент из хранилища данных сеанса не является неинициализированным `actionFlags` устанавливается равным нулю.  
  
 Исполнители пользовательское хранилище состояния сеанса, которые поддерживают сеансы без поддержки файлов cookie должны задать `actionFlags` `out` значения, возвращаемые из хранилища данных сеанса для текущего элемента. Если `actionFlags` элемента имеет значение параметра для запрошенного хранилище сеанса <xref:System.Web.SessionState.SessionStateActions.InitializeItem> значение перечисления, то <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> метод следует задать значение в хранилище данных после присвоения `actionFlags` `out` параметра.  
  
   
  
## Examples  
 Пример реализации поставщика хранилища состояния сеанса, см. в разделе [реализация поставщика состояния сеанса Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetItemExclusive">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItemExclusive(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemExclusive (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItemExclusive : System.Web.HttpContext * string *  *  *  *  -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItemExclusive (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Web.HttpContext" /> для текущего запроса.</param>
        <param name="id">Объект <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> для текущего запроса.</param>
        <param name="locked">При возврате этим методом содержит логическое значение, равное <see langword="true" /> в случае успешного получения блокировки, или значение <see langword="false" /> в противном случае.</param>
        <param name="lockAge">При возврате этим методом содержит объект <see cref="T:System.TimeSpan" /> со значением, равным количеству времени, в течение которого элемент в хранилище данных сеанса оставался заблокированным.</param>
        <param name="lockId">При возврате этим методом содержит объект, значение которого равно идентификатору блокировки для текущего запроса. Дополнительные данные об идентификаторе блокировки см. в разделе "Блокирование данных в хранилище сеанса" в кратком обзоре класса <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />.</param>
        <param name="actions">При возврате этим методом содержит одно из значений <see cref="T:System.Web.SessionState.SessionStateActions" />, позволяющее определить, является ли текущий сеанс неинициализированным сеансом без поддержки файлов Cookie.</param>
        <summary>Возвращает доступные только для чтения данные о состоянии сеанса из хранилища данных сеанса.</summary>
        <returns>Объект <see cref="T:System.Web.SessionState.SessionStateStoreData" />, заполненный значениями сеанса и данными из хранилища данных сеанса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> метод в начале запроса, во время <xref:System.Web.HttpApplication.AcquireRequestState> событие, когда <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> атрибут имеет значение `true`, который используется по умолчанию. Если <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> атрибуту присваивается `ReadOnly`, <xref:System.Web.SessionState.SessionStateModule> объектов вместо этого вызывают <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> метод.  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Возвращает метод <xref:System.Web.SessionState.SessionStateStoreData> со сведениями сеанса из хранилища данных, обновляет дату истечения срока действия сохраненных данных и блокирует элемент сеанса данных в хранилище данных на время запроса. Если элемент сеанса данные не найдены в хранилище данных <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> метода задает `locked` `out` параметр `false` и возвращает `null`. В результате <xref:System.Web.SessionState.SessionStateModule> объект для вызова <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> метод для создания нового сеанса элемента в хранилище данных. Если элемент сеанса данных находится в хранилище данных, но данные заблокирован, <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> метода задает `locked` `out` параметр `true`, задает `lockAge` `out` параметр текущей даты и времени, за вычетом даты и время, когда блокировки элемента (которого извлекается из хранилища данных), задает `lockId` `out` параметр идентификатор блокировки, полученные из хранилища данных и возвращает `null`. В результате <xref:System.Web.SessionState.SessionStateModule> объект для вызова <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> метод снова после интервала полсекунды попытаться извлечь сведения об элементе сеанса и заблокировать данные. Если значение, `lockAge` `out` параметр имеет значение превышает <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> значение, то <xref:System.Web.SessionState.SessionStateModule> вызовы <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> метод, чтобы удалить блокировку данных элемента сеанса, а затем вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> метод снова.  
  
 `actionFlags` Параметр используется при `cookieless` и `regenerateExpiredSessionId` атрибуты имеют оба значения `true`. `actionFlags` Значение <xref:System.Web.SessionState.SessionStateActions.InitializeItem> указывает, что запись в хранилище данных сеанса новый сеанс, требующему инициализации. Неинициализированные записи в хранилище данных сеанса создаются путем вызова <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> метод. Если элемент из хранилища данных сеанса не является неинициализированным `actionFlags` устанавливается равным нулю.  
  
 Исполнители пользовательское хранилище состояния сеанса, которые поддерживают сеансы без поддержки файлов cookie должны задать `actionFlags` `out` значения, возвращаемые из хранилища данных сеанса для текущего элемента. Если `actionFlags` элемента имеет значение параметра для запрошенного хранилище сеанса <xref:System.Web.SessionState.SessionStateActions.InitializeItem> значение перечисления, то <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> метод следует задать значение в хранилище данных после присвоения `actionFlags` `out` параметра.  
  
   
  
## Examples  
 Пример реализации поставщика хранилища состояния сеанса, см. в разделе [реализация поставщика состояния сеанса Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public abstract void InitializeRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InitializeRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InitializeRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.InitializeRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Web.HttpContext" /> для текущего запроса.</param>
        <summary>Вызывается объектом <see cref="T:System.Web.SessionState.SessionStateModule" /> для инициализации по запросу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> метод перед вызовом любого другого <xref:System.Web.SessionState.SessionStateStoreProviderBase> метод. Можно использовать <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> метод для выполнения любой инициализации по запросу, необходимых поставщику хранилища состояния сеанса.  
  
   
  
## Examples  
 Пример реализации поставщика хранилища состояния сеанса, см. в разделе [реализация поставщика состояния сеанса Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseItemExclusive(class System.Web.HttpContext context, string id, object lockId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReleaseItemExclusive (context As HttpContext, id As String, lockId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseItemExclusive : System.Web.HttpContext * string * obj -&gt; unit" Usage="sessionStateStoreProviderBase.ReleaseItemExclusive (context, id, lockId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Web.HttpContext" /> для текущего запроса.</param>
        <param name="id">Идентификатор сеанса для текущего запроса.</param>
        <param name="lockId">Идентификатор блокировки для текущего запроса.</param>
        <summary>Снимает блокировку элемента в хранилище данных сеанса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> чтобы обновить дату истечения срока действия и освободить блокировку элемента в хранилище данных сеанса. Она вызывается в конце запроса, во время <xref:System.Web.HttpApplication.ReleaseRequestState> событие, если значения сеанса не изменились. Если были изменены значения сеанса, <xref:System.Web.SessionState.SessionStateModule> объектов вместо этого вызывают <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> метод.  
  
 <xref:System.Web.SessionState.SessionStateModule> Объекта также вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> метод при блокировку элемента в хранилище данных сеанса превысил <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> значение. Дополнительные сведения о блокировках и сведения об идентификаторе блокировки, см. в разделе «Блокировки сеанса Store данных» в <xref:System.Web.SessionState.SessionStateStoreProviderBase> Общие сведения о классе.  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Метод только снимает блокировку элемента в хранилище данных сеанса для текущего приложения, соответствующий предоставленный сеанс `id` и `lockId` значения. Если `lockId` совпадает с идентификатором в хранилище данных <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> метод не выполняет никаких действий.  
  
   
  
## Examples  
 Пример реализации поставщика хранилища состояния сеанса, см. в разделе [реализация поставщика состояния сеанса Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveItem(class System.Web.HttpContext context, string id, object lockId, class System.Web.SessionState.SessionStateStoreData item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveItem (context As HttpContext, id As String, lockId As Object, item As SessionStateStoreData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveItem(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId, System::Web::SessionState::SessionStateStoreData ^ item);" />
      <MemberSignature Language="F#" Value="abstract member RemoveItem : System.Web.HttpContext * string * obj * System.Web.SessionState.SessionStateStoreData -&gt; unit" Usage="sessionStateStoreProviderBase.RemoveItem (context, id, lockId, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Web.HttpContext" /> для текущего запроса.</param>
        <param name="id">Идентификатор сеанса для текущего запроса.</param>
        <param name="lockId">Идентификатор блокировки для текущего запроса.</param>
        <param name="item">Объект <see cref="T:System.Web.SessionState.SessionStateStoreData" />, представляющий элемент, который необходимо удалить из хранилища данных.</param>
        <summary>Удаляет данные об элементе из хранилища данных сеанса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> метод в конце запроса, во время <xref:System.Web.HttpApplication.ReleaseRequestState> событий, чтобы удалить данные для элемент сеанса из хранилища данных сеанса, если <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> был вызван метод. Только данные сеанса для текущего приложения, соответствующий предоставленный сеанс `id` и `lockId` значения удалены. Дополнительные сведения о блокировках и сведения об идентификаторе блокировки, см. в разделе «Блокировки сеанса Store данных» в <xref:System.Web.SessionState.SessionStateStoreProviderBase> Общие сведения о классе.  
  
   
  
## Examples  
 Пример реализации поставщика хранилища состояния сеанса, см. в разделе [реализация поставщика состояния сеанса Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ResetItemTimeout">
      <MemberSignature Language="C#" Value="public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetItemTimeout(class System.Web.HttpContext context, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetItemTimeout (context As HttpContext, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetItemTimeout(System::Web::HttpContext ^ context, System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResetItemTimeout : System.Web.HttpContext * string -&gt; unit" Usage="sessionStateStoreProviderBase.ResetItemTimeout (context, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Web.HttpContext" /> для текущего запроса.</param>
        <param name="id">Идентификатор сеанса для текущего запроса.</param>
        <summary>Обновляет дату и время истечения срока действия элемента в хранилище данных сеанса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> метода, чтобы обновить дату окончания срока действия и время сеанса для текущей даты и времени, а также сеанс <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> значения при любом:  
  
-   <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> атрибут `true`, или  
  
-   запрос не выдавал <xref:System.Web.HttpApplication.AcquireRequestState> и <xref:System.Web.HttpApplication.ReleaseRequestState> события, так как произошла ошибка.  
  
 При запросе страницы ASP.NET и <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> атрибуту присваивается `false`, <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> Обновить дату окончания срока действия и время данных в хранилище данных сеанса по-прежнему вызывается метод.  
  
   
  
## Examples  
 Пример реализации поставщика хранилища состояния сеанса, см. в разделе [реализация поставщика состояния сеанса Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetAndReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAndReleaseItemExclusive(class System.Web.HttpContext context, string id, class System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetAndReleaseItemExclusive (context As HttpContext, id As String, item As SessionStateStoreData, lockId As Object, newItem As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetAndReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Web::SessionState::SessionStateStoreData ^ item, System::Object ^ lockId, bool newItem);" />
      <MemberSignature Language="F#" Value="abstract member SetAndReleaseItemExclusive : System.Web.HttpContext * string * System.Web.SessionState.SessionStateStoreData * obj * bool -&gt; unit" Usage="sessionStateStoreProviderBase.SetAndReleaseItemExclusive (context, id, item, lockId, newItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="newItem" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Web.HttpContext" /> для текущего запроса.</param>
        <param name="id">Идентификатор сеанса для текущего запроса.</param>
        <param name="item">Объект <see cref="T:System.Web.SessionState.SessionStateStoreData" />, содержащий текущие значения сеанса для сохранения.</param>
        <param name="lockId">Идентификатор блокировки для текущего запроса.</param>
        <param name="newItem">Значение <see langword="true" />, чтобы обозначить элемент сеанса как новый; значение <see langword="false" /> чтобы обозначить элемент сеанса как существующий.</param>
        <summary>Обновляет данные об элементе сеанса в хранилище данных состояния сеанса значениями из текущего запроса, а также снимает блокировку данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> метод в конце запроса, во время <xref:System.Web.HttpApplication.ReleaseRequestState> событий, вставить информацию о текущем элементе сеанса в хранилище данных или обновить сведения о существующем элементе сеанса в хранилище данных с текущего значения Чтобы обновить время окончания срока действия элемента и для снятия блокировки данных. Только данные сеанса для текущего приложения, соответствующий предоставленный сеанс `id` и `lockId` значения обновляется. Дополнительные сведения о блокировках см. в разделе «Блокировки данных Store сеанса» в <xref:System.Web.SessionState.SessionStateStoreProviderBase> Общие сведения о классе.  
  
 Если не были изменены значения сеанса для текущего запроса, <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> метод не вызывается. Вместо этого <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> вызывается метод.  
  
 Если <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> будет вызван метод <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> метод не вызывается. Вместо этого <xref:System.Web.SessionState.SessionStateModule> вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> метод для удаления данных элемент сеанса из источника данных.  
  
   
  
## Examples  
 Пример реализации поставщика хранилища состояния сеанса, см. в разделе [реализация поставщика состояния сеанса Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetItemExpireCallback">
      <MemberSignature Language="C#" Value="public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetItemExpireCallback(class System.Web.SessionState.SessionStateItemExpireCallback expireCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SetItemExpireCallback (expireCallback As SessionStateItemExpireCallback) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool SetItemExpireCallback(System::Web::SessionState::SessionStateItemExpireCallback ^ expireCallback);" />
      <MemberSignature Language="F#" Value="abstract member SetItemExpireCallback : System.Web.SessionState.SessionStateItemExpireCallback -&gt; bool" Usage="sessionStateStoreProviderBase.SetItemExpireCallback expireCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expireCallback" Type="System.Web.SessionState.SessionStateItemExpireCallback" />
      </Parameters>
      <Docs>
        <param name="expireCallback">Делегат <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> для события <see langword="Session_OnEnd" />, заданного в файле Global.asax.</param>
        <summary>Задает ссылку на делегата <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> для события <see langword="Session_OnEnd" />, заданного в файле Global.asax.</summary>
        <returns>Если поставщик хранилищ состояния сеанса поддерживает вызов события <see langword="true" />, значение <see langword="Session_OnEnd" />, если нет, значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> метод при инициализации модуля для определения ли вызовы `Session_OnEnd` событий поддерживаются <xref:System.Web.SessionState.SessionStateStoreProviderBase> реализации и свяжите <xref:System.Web.SessionState.SessionStateItemExpireCallback> делегат со `Session_OnEnd` событий.  
  
 Пользовательское хранилище состояния сеанса поставщика следует использовать <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> метод для информирования <xref:System.Web.SessionState.SessionStateModule> объект ли вызовы `Session_OnEnd` событий поддерживаются и установлена локальная ссылка в <xref:System.Web.SessionState.SessionStateItemExpireCallback> делегат, предоставляемый `expireCallback` параметра. Пользовательская реализация необходимо решить, когда локальный <xref:System.Web.SessionState.SessionStateItemExpireCallback> делегат будет вызван. Например, делегат может вызываться во время вызова <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> метод, который вызывается, когда завершается сеанс.  
  
   
  
## Examples  
 Пример реализации поставщика хранилища состояния сеанса, см. в разделе [реализация поставщика состояния сеанса Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>