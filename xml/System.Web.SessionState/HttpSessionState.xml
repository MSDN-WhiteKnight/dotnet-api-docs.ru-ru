<Type Name="HttpSessionState" FullName="System.Web.SessionState.HttpSessionState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="62158b5fb59aa3b2ab2dd80a470f10b4aa71febc" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58553779" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpSessionState : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpSessionState extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.HttpSessionState" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpSessionState&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSessionState sealed : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type HttpSessionState = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Предоставляет доступ к значениям состояния сеанса, а также к параметрам уровня сеанса и методам управления длительностью сеанса.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET предоставляет управление состоянием сеанса, чтобы можно было хранить сведения, связанные с сеансом браузера уникальный нескольких запросов. Вы можете хранить коллекции значений, указанных по имени ключа или по числовому индексу. Доступ к значениям сеанса и функциональные возможности используется <xref:System.Web.SessionState.HttpSessionState> класс, который можно получить с помощью <xref:System.Web.HttpContext.Session%2A> текущего элемента <xref:System.Web.HttpContext>, или <xref:System.Web.UI.Page.Session%2A> свойство <xref:System.Web.UI.Page>.  
  
 Данные сеанса, связанный с сеансом конкретного браузера, с использованием уникального идентификатора. По умолчанию этот идентификатор хранится в файле cookie сеанса не истекает в браузере, но можно также настроить приложения для хранения идентификатора сеанса в URL-адрес, задав `cookieless` атрибут `true` или <xref:System.Web.HttpCookieMode.UseUri> в [sessionState](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v%3dvs.100)) элемент конфигурации приложения. Вы можете определить, поддерживаются ли файлы cookie с помощью браузера, указав значение ASP.NET <xref:System.Web.HttpCookieMode.UseDeviceProfile> для `cookieless` атрибута. Вы также можете определить, включены ли файлы cookie для браузера, указав значение ASP.NET <xref:System.Web.HttpCookieMode.AutoDetect> для `cookieless` атрибута. Если файлы cookie, поддерживаются при <xref:System.Web.HttpCookieMode.UseDeviceProfile> указан, или когда включен <xref:System.Web.HttpCookieMode.AutoDetect> указан, то сеанс будет иметь идентификатор, хранимые в файле cookie; в противном случае будет храниться идентификатор сеанса в URL-адрес.  
  
 Сеансы запускаются во время первого запроса и значения сеанса будет сохраняться до тех пор, пока выполняется новый запрос браузером перед количество минут, определенных в <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> pass свойство. При начале нового сеанса, согласованность сеанса <xref:System.Web.SessionState.SessionStateModule.Start> события. Это событие можно использовать для выполнения дополнительных операций в начале сеанса, например, установка по умолчанию значения сеанса. При превышении времени ожидания, <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> вызывается метод, или приложения ASP.NET выключен, сеанс <xref:System.Web.SessionState.SessionStateModule.End> события. Это событие можно использовать, чтобы выполнить необходимые операции очистки. <xref:System.Web.SessionState.SessionStateModule.End> Событие возникает только тогда, когда состояние сеанса `mode` присваивается <xref:System.Web.SessionState.SessionStateMode.InProc>.  
  
 Чтобы повысить производительность, сеансы, которые используют файлы cookie не будет выделено хранилища сеанса пока не будет в действительности данные хранятся в <xref:System.Web.UI.Page.Session%2A> объекта. Дополнительные сведения см. в описании свойства <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  
  
 Состояние сеанса не сохраняется за пределами границ приложения ASP.NET. Если браузер переходит в другое приложение, сведения о сеансе для нового приложения недоступен.  
  
 Значения сеанса хранятся в памяти на веб-сервере, по умолчанию. Можно также хранить значения сеанса в базе данных SQL Server, на сервере состояний ASP.NET или пользовательский сервер. Это позволяет сохранить значения сеанса, в случаях, где перезапускает процесс ASP.NET или IIS или приложения ASP.NET и сделать доступными значения сеанса на всех серверах в веб-ферме. Это поведение, настроить, задав `mode` атрибут является допустимым <xref:System.Web.SessionState.SessionStateMode> значение в [sessionState](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v%3dvs.100)) элемент конфигурации приложения. Дополнительные сведения см. в разделе [режимы состояния сеанса](https://msdn.microsoft.com/library/0bb0a3a3-650f-4c47-a0c5-b08b9b591bb4).  
  
 Альтернативы состоянию сеанса включают состояние приложения (см. в разделе <xref:System.Web.HttpApplication.Application%2A> свойства) и кэш ASP.NET (см. в разделе <xref:System.Web.Caching> пространство имен), какие переменные хранилища, которые может осуществляться всеми пользователями приложения ASP.NET; профиля ASP.NET (см. в разделе <xref:System.Web.Profile> пространство имен), хранящего значения пользователя в хранилище данных без истечение срока действия их с помощью времени ожидания; ASP.NET <xref:System.Web.UI.WebControls?displayProperty=nameWithType>, который сохранения значений элементов управления в <xref:System.Web.UI.Control.ViewState%2A>; <xref:System.Web.HttpResponse.Cookies%2A>; <xref:System.Web.HttpRequest.QueryString%2A> свойство; и поля в HTML-формы, которые доступны из HTTP `POST` с помощью <xref:System.Web.HttpRequest.Form%2A> коллекции. Дополнительные сведения о различиях между состоянием сеанса и другие альтернативные элементы управления состоянием см. в разделе [управления состоянием](https://msdn.microsoft.com/library/af79fa0d-4bc8-47a6-9915-d8e355bfb732).  
  
   
  
## Examples  
 В следующем примере кода задает и получает значения из состояния сеанса.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[HttpSessionState#30](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/session2cs.aspx#30)]
 [!code-aspx-vb[HttpSessionState#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/session2vb.aspx#30)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Web.Profile" />
    <altmember cref="N:System.Web.Caching" />
    <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
    <related type="Article" href="https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07">Общие сведения об использовании скрипта</related>
  </Docs>
  <Members>
    <Member MemberName="Abandon">
      <MemberSignature Language="C#" Value="public void Abandon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abandon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Abandon" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abandon ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abandon();" />
      <MemberSignature Language="F#" Value="member this.Abandon : unit -&gt; unit" Usage="httpSessionState.Abandon " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отменяет текущий сеанс.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Один раз <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> вызывается метод, текущий сеанс больше не является допустимым, и запускается новый сеанс. <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> вызывает <xref:System.Web.SessionState.SessionStateModule.End> возникает событие. Новый <xref:System.Web.SessionState.SessionStateModule.Start> событие будет вызываться при следующем запросе.  
  
 По умолчанию уничтожен идентификаторы сеансов для сеансов отказов или просрочен. То есть если выполняется запрос, включающий идентификатор сеанса для сеанса истекшим сроком действия или отмены, новый сеанс запускается через один и тот же идентификатор сеанса. Вы можете отключить, задав `regenerateExpiredSessionId` атрибут [sessionState](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v%3dvs.100)) элемент конфигурации, `true`. Дополнительные сведения см. в разделе [идентификаторы сеансов](https://msdn.microsoft.com/library/146ca206-d151-4f2e-a548-bcca05ccf0cb).  
  
 <xref:System.Web.SessionState.SessionStateModule.End> Событий поддерживается только тогда, когда <xref:System.Web.SessionState.HttpSessionState.Mode%2A> свойству <xref:System.Web.SessionState.SessionStateMode.InProc>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj -&gt; unit" Usage="httpSessionState.Add (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Имя элемента, добавляемого в коллекцию состояний сеанса.</param>
        <param name="value">Значение элемента, добавляемого в коллекцию состояний сеанса.</param>
        <summary>Добавляет новый элемент в коллекцию состояния сеанса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `name` параметр ссылается на существующий элемент состояния сеанса, существующий элемент будет перезаписан с указанным `value`.  
  
   
  
## Examples  
 В следующем примере показано, как для хранения значений в состоянии сеанса с помощью <xref:System.Web.SessionState.HttpSessionState.Add%2A> метод. Также показано, как для удаления значений в состоянии сеанса с помощью <xref:System.Web.SessionState.HttpSessionState.Remove%2A> метод. Объект <xref:System.Web.UI.WebControls.Repeater> управления используется для отображения состояния сеанса содержимое на веб-странице. <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> Метод используется для прохода по коллекции состояния сеанса и заполнить <xref:System.Web.UI.WebControls.Repeater> элемента управления.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
        <related type="Article" href="https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07">Общие сведения об использовании скрипта</related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="httpSessionState.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет из коллекции состояния сеанса все ключи и значения.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public int CodePage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CodePage { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CodePage : int with get, set" Usage="System.Web.SessionState.HttpSessionState.CodePage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает идентификатор кодировки для текущего сеанса.</summary>
        <value>Идентификатор кодировки для текущего сеанса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Набор символов (кодовая страница) используется для интерпретации данных многобайтовой кодировкой символов, определения значения символа и таким образом, порядок сортировки. Кодовая страница параметров применяются только к многобайтовой кодировкой символов данных символьные данные в Юникоде.  
  
 Это <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> свойство предоставляется для обеспечения совместимости с предыдущими версиями ASP только. Если вам не нужно обеспечить обратную совместимость с ASP-страницах, используйте <xref:System.Web.HttpResponse.ContentEncoding%2A> свойство вместо этого.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Contents" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Contents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contents As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Contents { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contents : System.Web.SessionState.HttpSessionState" Usage="System.Web.SessionState.HttpSessionState.Contents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает ссылку на текущий объект состояния сеанса.</summary>
        <value>Текущий контекст <see cref="T:System.Web.SessionState.HttpSessionState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.Contents%2A> Свойство предоставляется для обеспечения совместимости с предыдущими версиями ASP.  
  
   
  
## Examples  
 В следующем примере кода перечисляются имена элементов и значений в <xref:System.Web.SessionState.HttpSessionState.Contents%2A> свойство.  
  
 [!code-csharp[HttpSessionState#9](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/snippetscs.aspx#9)]
 [!code-vb[HttpSessionState#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/snippetsvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.CookieMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookieMode As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieMode CookieMode { System::Web::HttpCookieMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieMode : System.Web.HttpCookieMode" Usage="System.Web.SessionState.HttpSessionState.CookieMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, позволяющее определить, настроено ли приложение для сеансов без поддержки файлов Cookie.</summary>
        <value>Одно из значений <see cref="T:System.Web.HttpCookieMode" />, позволяющее определить, настроено ли приложение для сеансов без поддержки файлов Cookie. Значение по умолчанию — <see cref="F:System.Web.HttpCookieMode.UseCookies" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> — `true`, <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> возвращает <xref:System.Web.HttpCookieMode.UseUri>; в противном случае <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> возвращает <xref:System.Web.HttpCookieMode.UseCookies>.  
  
   
  
## Examples  
 В следующем примере кода `cookieless` сеанса атрибута `true` в файле Web.config. Для примера конфигурации приложения <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> возвратит <xref:System.Web.HttpCookieMode.UseUri>.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="httpSessionState.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Массив <see cref="T:System.Array" />, в который записываются значения сеанса.</param>
        <param name="index">Значение индекса в массиве <paramref name="array" /> (индексация с нуля), с которого начинается копирование.</param>
        <summary>Копирует коллекцию значений состояния сеанса в одномерный массив, начиная с заданного индекса массива.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.SessionState.HttpSessionState.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает число элементов в коллекции состояний сеанса.</summary>
        <value>Количество элементов в коллекции.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="httpSessionState.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечислитель, который можно использовать для считывания всех имен переменных состояния сеанса в текущем сеансе.</summary>
        <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации по именам переменных в коллекции состояния сеанса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как для хранения значений в состоянии сеанса с помощью <xref:System.Web.SessionState.HttpSessionState.Add%2A> метод. Также показано, как для удаления значений в состоянии сеанса с помощью <xref:System.Web.SessionState.HttpSessionState.Remove%2A> метод. Объект <xref:System.Web.UI.WebControls.Repeater> элемент управления используется для отображения содержимого состояния сеанса на веб-странице. <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> Метод используется для прохода по коллекции состояния сеанса и заполнить <xref:System.Web.UI.WebControls.Repeater> элемента управления.  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="IsCookieless">
      <MemberSignature Language="C#" Value="public bool IsCookieless { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCookieless" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsCookieless" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCookieless As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCookieless { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCookieless : bool" Usage="System.Web.SessionState.HttpSessionState.IsCookieless" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, позволяющее определить, был ли идентификатор сеанса внедрен в URL-адрес или сохранен в HTTP-файле Cookie.</summary>
        <value>Если сеанс был внедрен в URL-адрес, значение <see langword="true" />, если нет, значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET однозначно определяет сеансы с каждым браузером. По умолчанию уникальный идентификатор для сеанса хранится в файле cookie сеанса не истекает в браузере. Можно указать, что идентификаторы сеанса не сохраняются в файле cookie, задав `cookieless` атрибут `true` в [sessionState](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v%3dvs.100)) элемента конфигурации.  
  
> [!NOTE]
>  Для повышения безопасности приложения, приложения пользователи должны иметь возможность выполнять выход, после чего он должен вызывать <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> метод. Это уменьшает вероятность получения с помощью уникального идентификатора в URL-АДРЕСЕ для извлечения личных данных, хранимых в сеансе пользователя.  
  
 ASP.NET поддерживает состояние сеанса без файлов cookie, автоматически вставляя уникальный идентификатор сеанса в URL-адрес страницы. Например следующий URL-адрес был изменен с ASP.NET для сеанса уникальный идентификатор lit3py55t21z5v55vlm25s55:  
  
```  
http://www.example.com/(S(4danlfat035muve4g0mvgfrr))/orderform.aspx  
```  
  
 ASP.NET изменяет ссылки, содержащиеся во всех запрошенных страницах, встраивая идентификатор сеанса в ссылки перед отправкой каждой страницы в браузер. Состояние сеанса сохраняется до тех пор, пока пользователь переходит по ссылкам, сайт. Тем не менее если агент пользователя перезаписывает URL-адрес, экземпляр состояния сеанса будет потеряно.  
  
 Идентификатор сеанса внедрен в URL-адрес после косой черты, который следует за именем приложения и перед любой оставшиеся идентификатор файла или виртуального каталога. Это позволяет ASP.NET обрабатывать имя приложения до включения <xref:System.Web.SessionState.SessionStateModule> в запросе.  
  
 По умолчанию перезапускаются идентификаторы сеанса, используемые в сеансах без файлов cookie. То есть если выполняется запрос с Идентификатором сеанса с истекшим сроком действия, запускается новый сеанс с помощью идентификатора сеанса, содержащимся в запросе. Такое поведение может привести к нежелательному раскрытию данных сеанса, если ссылку, которая содержит идентификатор сеанса без файлов cookie совместно используется несколькими обозревателями, возможно через поисковую систему или другую программу. Можно уменьшить вероятность данные сеанса совместно с несколькими клиентами, отключив повторное использование идентификаторов сеансов. Чтобы сделать это, установите `regenerateExpiredSessionId` атрибут [sessionState](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v%3dvs.100)) элемент конфигурации, `true`. Таким образом новый идентификатор сеанса создается при запросе без поддержки файлов cookie сеанса с идентификатором сеанса с истекшим сроком действия. Обратите внимание, что если запроса, выполняемого с истекший идентификатор сеанса используется протокол HTTP `POST` метод, то все переданные данные будут потеряны `regenerateExpiredSessionId` является `true`, как ASP.NET выполняет перенаправление, чтобы гарантировать, что браузер имеет идентификатор сеанса в URL-адрес.  
  
> [!NOTE]
>  Хотя параметр `regenerateExpiredSessionId` атрибут `true` снижает вероятность нежелательных совместного использования данных сеанса, он не защищает от получения получения доступа к сеансу другого пользователя путем получения <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> значение и включив его в запросы к серверу. При сохранении личных или конфиденциальных сведений в состоянии сеанса, рекомендуется использовать SSL для шифрования любое взаимодействие между браузером и сервером, который включает в себя <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  
  
   
  
## Examples  
 В следующем примере кода `cookieless` сеанса атрибута в значение true в файле Web.config.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      regenerateExpiredSessionId="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="IsNewSession">
      <MemberSignature Language="C#" Value="public bool IsNewSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNewSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsNewSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNewSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNewSession { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNewSession : bool" Usage="System.Web.SessionState.HttpSessionState.IsNewSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, позволяющее определить, был ли создан сеанс с текущим запросом.</summary>
        <value>Если сеанс был создан с текущим запросом, значение <see langword="true" />, если нет, значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.SessionState.HttpSessionState.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, позволяющее определить, доступен ли сеанс только для чтения.</summary>
        <value>Если сеанс доступен только для чтения, значение <see langword="true" />, если нет, значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.SessionState.HttpSessionState.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, позволяющее определить, синхронизирован ли доступ к коллекции значений состояния сеанса (потокобезопасный доступ).</summary>
        <value>Значение <see langword="true" />, если доступ к коллекции синхронизирован (потокобезопасен); в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает или задает индивидуальные значения сеанса.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Web.SessionState.HttpSessionState.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Числовой индекс значения сеанса.</param>
        <summary>Возвращает или задает значение сеанса по числовому индексу.</summary>
        <value>Значение состояния сеанса, сохраненное по указанному индексу или значение <see langword="null" />, если элемент не существует.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.SessionState.HttpSessionState.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя ключа значения сеанса.</param>
        <summary>Возвращает или задает значение сеанса по имени.</summary>
        <value>Значение состояния сеанса с указанным именем или значение <see langword="null" />, если элемент не существует.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As NameObjectCollectionBase.KeysCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ Keys { System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" Usage="System.Web.SessionState.HttpSessionState.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию ключей для всех значений, хранящихся в коллекции состояния сеанса.</summary>
        <value>Объект <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />, в котором содержатся все сеансовые ключи.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int with get, set" Usage="System.Web.SessionState.HttpSessionState.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает код языка текущего сеанса.</summary>
        <value>Экземпляр <see cref="T:System.Globalization.CultureInfo" />, который задает язык и региональные параметры текущего сеанса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.LCID%2A> Свойство предоставляется для обеспечения совместимости с предыдущими версиями ASP только. Если вам не нужно обеспечить обратную совместимость с ASP-страницах, используйте <xref:System.Globalization.CultureInfo.LCID%2A> свойство вместо этого.  
  
 В состоянии сеанса ASP.NET не хранит идентификатор языкового стандарта. <xref:System.Web.SessionState.HttpSessionState.LCID%2A> Обращается к свойству <xref:System.Globalization.CultureInfo.LCID%2A> свойство для получения и задания идентификатора.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.SessionStateMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SessionState.SessionStateMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Mode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mode As SessionStateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::SessionStateMode Mode { System::Web::SessionState::SessionStateMode get(); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Web.SessionState.SessionStateMode" Usage="System.Web.SessionState.HttpSessionState.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает текущий режим состояния сеанса.</summary>
        <value>Одно из значений <see cref="T:System.Web.SessionState.SessionStateMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сведения о том, как настроить сервер для <xref:System.Web.SessionState.SessionStateMode.StateServer> или <xref:System.Web.SessionState.SessionStateMode.SQLServer> хранения состояния сеанса см. в разделе [ASP.NET Session State Overview](https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc).  
  
   
  
## Examples  
 В следующем примере кода `mode` сеанса атрибута <xref:System.Web.SessionState.SessionStateMode.SQLServer> в файле Web.config. Для режима сеанса SQL Server `sqlConnectionString` атрибут также является обязательным.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="SQLServer"  
      sqlConnectionString="Data Source=localhost;Integrated Security=SSPI"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="httpSessionState.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя элемента, который необходимо удалить из коллекции состояния сеанса.</param>
        <summary>Удаляет элемент из коллекции состояния сеанса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если в коллекции состояния сеанса не содержит элемент с указанным `name`, коллекция остается неизменной. Исключение не возникает.  
  
   
  
## Examples  
 В следующем примере показано, как для хранения значений в состоянии сеанса с помощью <xref:System.Web.SessionState.HttpSessionState.Add%2A> метод. Также показано, как для удаления значений в состоянии сеанса с помощью <xref:System.Web.SessionState.HttpSessionState.Remove%2A> метод. Объект <xref:System.Web.UI.WebControls.Repeater> элемент управления используется для отображения содержимого состояния сеанса на веб-странице. <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> Метод используется для прохода по коллекции состояния сеанса и заполнить <xref:System.Web.UI.WebControls.Repeater> элемента управления.  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : unit -&gt; unit" Usage="httpSessionState.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет из коллекции состояния сеанса все ключи и значения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.RemoveAll%2A> выполняет ту же функцию, что <xref:System.Web.SessionState.HttpSessionState.Clear%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="httpSessionState.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс элемента, который необходимо удалить из коллекции состояния сеанса.</param>
        <summary>Удаляет элемент по заданному индексу из коллекции состояния сеанса.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  
  
-или- 
 Значение параметра <paramref name="index" /> больше или равно значению свойства <see cref="P:System.Web.SessionState.HttpSessionState.Count" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="SessionID">
      <MemberSignature Language="C#" Value="public string SessionID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.SessionID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SessionID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionID : string" Usage="System.Web.SessionState.HttpSessionState.SessionID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает для сеанса уникальный идентификатор.</summary>
        <value>Уникальный идентификатор сеанса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Свойство используется для уникальной идентификации браузера с помощью данных сеанса на сервере. <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Значение случайным образом созданный ASP.NET и сохраняется в файле cookie сеанса не истекает в браузере. <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Значение затем отправляется в файле cookie при каждом запросе к приложению ASP.NET.  
  
 Если вы хотите отключить использование файлов cookie в приложении ASP.NET и все еще используют состояние сеанса, можно настроить приложение для хранения идентификатора сеанса в URL-адрес вместо файла cookie, задав `cookieless` атрибут [ sessionState](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v%3dvs.100)) элемент конфигурации, `true`, или <xref:System.Web.HttpCookieMode.UseUri>, в файле Web.config для приложения. Вы можете определить, поддерживаются ли файлы cookie с помощью браузера, указав значение ASP.NET <xref:System.Web.HttpCookieMode.UseDeviceProfile> для `cookieless` атрибута. Вы также можете определить, включены ли файлы cookie для браузера, указав значение ASP.NET <xref:System.Web.HttpCookieMode.AutoDetect> для `cookieless` атрибута. Если файлы cookie, поддерживаются при <xref:System.Web.HttpCookieMode.UseDeviceProfile> указан, или когда включен <xref:System.Web.HttpCookieMode.AutoDetect> указан, то сеанс будет иметь идентификатор, хранимые в файле cookie; в противном случае будет храниться идентификатор сеанса в URL-адрес. Дополнительные сведения см. в описании свойства <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>.  
  
 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Передаются между сервером и обозревателем в виде открытого текста, либо в файле cookie, либо в URL-адрес. В результате получения может получить доступ к сеансу другого пользователя путем получения <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> значение и включив его в запросы к серверу. При сохранении личных или конфиденциальных сведений в состоянии сеанса, рекомендуется использовать SSL для шифрования любое взаимодействие между браузером и сервером, который включает в себя <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  
  
 При использовании состояния сеанса на основе файлов cookie, ASP.NET выделяет пространство для хранения данных сеанса до <xref:System.Web.UI.Page.Session%2A> объект используется. В результате новый идентификатор сеанса создается для каждого запроса страницы, пока не будет доступа к объекту сеанса. Если приложению требуется статичный ИД для всего сеанса, можно либо реализовать `Session_Start` метод в файле Global.asax приложения и сохранение данных в <xref:System.Web.UI.Page.Session%2A> объекта исправить идентификатор сеанса, или можно использовать код в другой части приложения явным образом сохранить данные в <xref:System.Web.UI.Page.Session%2A> объекта.  
  
 Если приложение использует состояние сеанса без файлов cookie, идентификатор сеанса создается при первом просмотре страницы и сохраняется для всего сеанса.  
  
   
  
## Examples  
 В следующем примере кода показан файл Web.config, который настраивает состояния сеанса для использования идентификаторов сеансов без поддержки файлов cookie. Дополнительные сведения см. в описании свойства <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      cookieless="true"  
      regenerateExpiredSessionId="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public System.Web.HttpStaticObjectsCollection StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollection StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticObjects As HttpStaticObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpStaticObjectsCollection ^ StaticObjects { System::Web::HttpStaticObjectsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticObjects : System.Web.HttpStaticObjectsCollection" Usage="System.Web.SessionState.HttpSessionState.StaticObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию объектов, объявленных в файле Global.asax приложения ASP.NET тегами <see langword="&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;" />.</summary>
        <value>Коллекция <see cref="T:System.Web.HttpStaticObjectsCollection" />, содержащая объекты, объявленные в файле Global.asax.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если объект, на странице не поддерживает сериализацию и <xref:System.Web.SessionState.HttpSessionState.Mode%2A> находится вне процесса (<xref:System.Web.SessionState.SessionStateMode.SQLServer> или <xref:System.Web.SessionState.SessionStateMode.StateServer>), объект не будет создан и не будет добавлен в эту коллекцию.  
  
 <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> Свойство предоставляется для обеспечения совместимости с предыдущими версиями ASP.  
  
   
  
## Examples  
 В следующем примере кода списки `id` и тип объекта объектов в <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> коллекции.  
  
 [!code-csharp[HttpSessionState#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/snippetscs.aspx#10)]
 [!code-vb[HttpSessionState#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/snippetsvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.SessionState.HttpSessionState.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который можно использовать для синхронизации доступа к коллекции значений состояния сеанса.</summary>
        <value>Объект, который можно использовать для синхронизации доступа к коллекции.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Web.SessionState.HttpSessionState.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает количество времени (в минутах), которое проходит между запросами, прежде чем поставщик состояния сеанса завершает сеанс.</summary>
        <value>Время ожидания в минутах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> Свойство можно задать в файле Web.config для приложения с помощью `timeout` атрибут [sessionState](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v%3dvs.100)) элемент конфигурации, либо задать <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> напрямую, используя значение свойства код приложения.  
  
 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> Свойство не может быть присвоено значение больше, чем 525,600 минут (1 год). Значение по умолчанию — 20 минут.  
  
   
  
## Examples  
 В следующем примере кода `timeout` атрибут сеанса до 30 минут в файле Web.config.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Общие сведения о состоянии сеанса</related>
      </Docs>
    </Member>
  </Members>
</Type>