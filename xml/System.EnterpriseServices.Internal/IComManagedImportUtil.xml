<Type Name="IComManagedImportUtil" FullName="System.EnterpriseServices.Internal.IComManagedImportUtil">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c8ea5674dfee13b0d38b00c76e304ac8f1efa06d" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55408110" /></Metadata><TypeSignature Language="C#" Value="public interface IComManagedImportUtil" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComManagedImportUtil" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.IComManagedImportUtil" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComManagedImportUtil" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComManagedImportUtil" />
  <TypeSignature Language="F#" Value="type IComManagedImportUtil = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("c3f8f66b-91be-4c99-a94f-ce3b0a951039")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Определяет компоненты и устанавливает их в каталог COM+.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 См. в разделе <xref:System.EnterpriseServices.Internal.ComManagedImportUtil> для реализации по умолчанию <xref:System.EnterpriseServices.Internal.IComManagedImportUtil>.  
  
 <xref:System.EnterpriseServices.Internal.IComManagedImportUtil> используется внутренне платформой .NET Framework. Необходимо использовать их непосредственно в коде.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetComponentInfo">
      <MemberSignature Language="C#" Value="public void GetComponentInfo (string assemblyPath, out string numComponents, out string componentInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetComponentInfo(string assemblyPath, [out] string&amp; numComponents, [out] string&amp; componentInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetComponentInfo (assemblyPath As String, ByRef numComponents As String, ByRef componentInfo As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetComponentInfo(System::String ^ assemblyPath, [Runtime::InteropServices::Out] System::String ^ % numComponents, [Runtime::InteropServices::Out] System::String ^ % componentInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetComponentInfo : string *  *  -&gt; unit" Usage="iComManagedImportUtil.GetComponentInfo (assemblyPath, numComponents, componentInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="numComponents" Type="System.String" RefType="out" />
        <Parameter Name="componentInfo" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="assemblyPath">Путь к сборке.</param>
        <param name="numComponents">Когда этот метод возвращает управление, данный параметр содержит количество компонентов в сборке.</param>
        <param name="componentInfo">Когда этот метод возвращает управление, данный параметр содержит информацию о компонентах.</param>
        <summary>Получает из сборки информацию о компонентах.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается в каталоге COM + для определения идентификаторов класса (CLSID) и идентификаторы ProgID компонентов в библиотеке DLL до его регистрации.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="assemblyPath" /> — пустая строка (""), содержащая только пробел либо один или несколько недопустимых знаков, указанных в <see cref="F:System.IO.Path.InvalidPathChars" />.  
  
-или- 
Система не может извлечь абсолютный путь.</exception>
        <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствуют необходимые разрешения.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyPath" /> — <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="assemblyPath" /> содержит двоеточие (":").</exception>
        <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      </Docs>
    </Member>
    <Member MemberName="InstallAssembly">
      <MemberSignature Language="C#" Value="public void InstallAssembly (string filename, string parname, string appname);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InstallAssembly(string filename, string parname, string appname) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssembly (filename As String, parname As String, appname As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstallAssembly(System::String ^ filename, System::String ^ parname, System::String ^ appname);" />
      <MemberSignature Language="F#" Value="abstract member InstallAssembly : string * string * string -&gt; unit" Usage="iComManagedImportUtil.InstallAssembly (filename, parname, appname)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="parname" Type="System.String" />
        <Parameter Name="appname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Путь к сборке.</param>
        <param name="parname">Имя раздела COM+.</param>
        <param name="appname">Имя приложения COM+.</param>
        <summary>Устанавливает сборку в приложение COM+.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 См. в разделе <xref:System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly%2A> Дополнительные сведения о реализации этого метода.  
  
 Этот метод вызывающая программа должна обладать правами администратора на локальном компьютере.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Вызывающий код в цепочке вызовов не имеет необходимого разрешения на доступ к неуправляемому коду.</exception>
        <exception cref="T:System.EnterpriseServices.RegistrationException">Входная сборка не имеет строгого имени.</exception>
      </Docs>
    </Member>
  </Members>
</Type>