<Type Name="VirtualPathProvider" FullName="System.Web.Hosting.VirtualPathProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="be6c402049d377b680d7bbe7ee3ed7974d42238b" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52905634" /></Metadata><TypeSignature Language="C#" Value="public abstract class VirtualPathProvider : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualPathProvider extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualPathProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualPathProvider&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathProvider abstract : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type VirtualPathProvider = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет набор методов, позволяющих веб-приложению извлекать ресурсы из виртуальной файловой системы.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider> Класс предоставляет набор методов для реализации виртуальной файловой системы веб-приложения. В виртуальной файловой системы файлы и каталоги управляет хранилищем данных, отличных от файловой системы, предоставляемые операционной системой сервера. Например можно использовать виртуальную файловую систему для хранения содержимого в базе данных SQL Server.  
  
 Любой файл, который обрабатывается по запросу можно хранить в виртуальной файловой системы. В том числе следующее:  
  
-   Страницы ASP.NET, главные страницы, пользовательские элементы управления и других объектов.  
  
-   Стандартные веб-страницы с расширениями .htm и .jpg.  
  
-   Сопоставляется любой пользовательский модуль <xref:System.Web.Compilation.BuildProvider> экземпляра.  
  
-   Любой именованной темы в `App_Theme` папку.  
  
 Не удается сохранить файлы, которые создают сборки уровня приложений в виртуальной файловой системы или папки приложения ASP.NET. В том числе следующее:  
  
-   Файл Global.asax.  
  
-   Файлы Web.config.  
  
-   Узел карты файлов данных, используемых <xref:System.Web.XmlSiteMapProvider>.  
  
-   Каталоги, содержащие сборки приложений или создают сборки приложения: `Bin`, `App_Code`, `App_GlobalResources`любые `App_LocalResources`.  
  
-   Папке данных приложения `App_Data`.  
  
> [!NOTE]
>  Если веб-сайт предварительно компилируется для развертывания, предоставляемые содержимое <xref:System.Web.Hosting.VirtualPathProvider> экземпляра не компилируется и не <xref:System.Web.Hosting.VirtualPathProvider> экземпляров используются предварительно скомпилированного сайта.  
  
## <a name="registering-a-virtualpathprovider"></a>Регистрация VirtualPathProvider  
 Пользовательский <xref:System.Web.Hosting.VirtualPathProvider> экземпляр должен быть зарегистрирован в системе компиляции ASP.NET с помощью <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=nameWithType> метод перед выполнением любой синтаксическом анализе страницы или компиляции веб-приложением.  
  
 Как правило <xref:System.Web.Hosting.VirtualPathProvider> экземпляр регистрируется в `AppInitialize` метода, определенного в `App_Code` каталог, или во время `Application_Start` событие в `Global.asax` файл. Например, регистрация <xref:System.Web.Hosting.VirtualPathProvider> в экземпляре `AppInitialize` метод, см. в разделе "Пример".  
  
 Вы можете зарегистрировать <xref:System.Web.Hosting.VirtualPathProvider> экземпляр во время других событий, но страницы компилируются и кэшируются перед <xref:System.Web.Hosting.VirtualPathProvider> регистрации экземпляра не станут недействительными, даже в том случае, если новый <xref:System.Web.Hosting.VirtualPathProvider> экземпляр теперь будет указать источник для ранее скомпилированной страницы.  
  
   
  
## Examples  
 В следующем примере кода — <xref:System.Web.Hosting.VirtualPathProvider> реализации класса, который создает виртуальную файловую систему, используя сведения, хранящиеся в <xref:System.Data.DataSet> объекта. В примере кода работает с примерами кода для <xref:System.Web.Hosting.VirtualFile> и <xref:System.Web.Hosting.VirtualDirectory> классам предоставлять виртуальные ресурсы из данных в хранилище, в котором загружается в <xref:System.Data.DataSet> объекта.  
  
 В этом примере состоит из четырех частей: <xref:System.Web.Hosting.VirtualPathProvider> реализации класса, файл данных XML, используемый для заполнения <xref:System.Data.DataSet> объекта, `AppStart` , содержащий `AppInitialize` метод, используемый для регистрации <xref:System.Web.Hosting.VirtualPathProvider> класса компиляции система и страницы ASP.NET, которая содержит ссылки на виртуальных файлов.  
  
 Чтобы использовать этот пример кода в приложении, выполните следующие действия.  
  
1.  Создайте пример приложения на веб-сервере.  
  
2.  Скопируйте исходный код для настраиваемого <xref:System.Web.Hosting.VirtualPathProvider> объекта (см. ниже) в файл в приложении `App_Code` каталога.  
  
3.  Скопируйте исходный код для настраиваемого <xref:System.Web.Hosting.VirtualDirectory> объекта (см. в разделе "Пример" <xref:System.Web.Hosting.VirtualDirectory> обзорной статье класс) в файл в приложении `App_Code` каталога.  
  
4.  Скопируйте исходный код для настраиваемого <xref:System.Web.Hosting.VirtualFile> объекта (см. в разделе "Пример" <xref:System.Web.Hosting.VirtualFile> обзорной статье класс) в файл в приложении `App_Code` каталога.  
  
5.  Скопируйте исходный код для `AppStart` объекта (см. ниже) в файл в приложении `App_Code` каталога.  
  
6.  Скопируйте XML-данные (см. ниже) в файл с именем `XMLData.xml` в файл в приложении `App_Data` каталога.  
  
7.  Копировать `default.aspx` файл (см. ниже) в корневой каталог примера приложения. Использовать веб-браузер, чтобы открыть `default.aspx` файла и нажмите кнопку ссылки на страницы, чтобы просмотреть содержимое виртуальных файлов.  
  
 Первый пример является пользовательским <xref:System.Web.Hosting.VirtualPathProvider> класса. <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> И <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> методы переопределяются для указания того, присутствует ли запрошенный каталог в виртуальной файловой системе. <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> И <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> методы переопределяются для возвращения пользовательских <xref:System.Web.Hosting.VirtualDirectory> и <xref:System.Web.Hosting.VirtualFile> экземпляров, содержащий сведения из виртуальной файловой системе.  
  
 Этот класс также предоставляет `GetVirtualData` метод, используемый <xref:System.Web.Hosting.VirtualDirectory> и <xref:System.Web.Hosting.VirtualFile> классы для доступа к <xref:System.Data.DataSet> объект, содержащий данные о виртуальной файловой системы. В производственной реализации этот метод обычно будет реализовываться в бизнес-объект, ответственность за взаимодействие с хранилищем данных.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#20)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#20)]  
  
 Во втором примере — это XML-файл данных, используемый для заполнения <xref:System.Data.DataSet> объекта, возвращаемого настраиваемым средством <xref:System.Web.Hosting.VirtualPathProvider> объекта. Эти данные XML используется для демонстрации <xref:System.Web.Hosting.VirtualPathProvider>, <xref:System.Web.Hosting.VirtualDirectory>, и <xref:System.Web.Hosting.VirtualFile> объекты для извлечения данных из внешних данных и не предназначен для представления в хранилище данных промышленного качества.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
  <resource type="dir"   
    path="/vrDir"   
    parentPath=""   
    content="">  
    <resource type="file"   
      path="/vrDir/Level1FileA.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level1FileB.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileB.">  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirA"   
      parentPath="/vrDir"   
      content="">  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
  <resource type="dir"   
    path="/vrDir/Level2DirB"   
    parentPath="/vrDir"   
    content="">  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
</resource>  
```  
  
 Третий пример предоставляет `AppStart` , содержащий `AppInitialize` метод. Этот метод вызывается во время инициализации приложения ASP.NET для выполнения требуемой пользовательской инициализации. В этом случае он регистрирует пользовательский <xref:System.Web.Hosting.VirtualPathProvider> система сборки объекта с помощью ASP.NET.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/AppStart.cs#10)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/AppStart.vb#10)]  
  
 Последний пример является страницей ASP.NET, который содержит ссылки на виртуальные файлы в виртуальной файловой системе.  
  
 [!code-aspx-csharp[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.Hosting.VirtualPathProvider" />, необходимо переопределить следующие члены: 
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />  
  
Если пользовательский <see cref="T:System.Web.Hosting.VirtualPathProvider" /> класс поддерживает каталоги в виртуальной файловой системе, необходимо переопределить следующие члены.  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" /><block subset="none" type="note"><para>  
      Если виртуальная файловая система будет содержать темы для веб-сайта (путем создания виртуального <c>App_Themes</c> directory), пользовательских <see cref="T:System.Web.Hosting.VirtualPathProvider" /> класс должен поддерживать каталоги.
    </para></block>  
  
    Пользовательский <see cref="T:System.Web.Hosting.VirtualPathProvider" /> класс работает с классами, производными <see cref="T:System.Web.Hosting.VirtualFile" /> и <see cref="T:System.Web.Hosting.VirtualDirectory" /> классы. Необходимо реализовать производные классы от этих типов файлов и каталогов информацию из виртуальной файловой системы. Пример настраиваемого <see cref="T:System.Web.Hosting.VirtualFile" /> реализации, см. в разделе "Пример" <see cref="T:System.Web.Hosting.VirtualFile" /> класс обзорной статье. Пример настраиваемого <see cref="T:System.Web.Hosting.VirtualDirectory" /> реализации, см. в разделе "Пример" <see cref="T:System.Web.Hosting.VirtualDirectory" /> класс обзорной статье.</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualPathProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualPathProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует класс для использования экземпляром унаследованного класса. Этот конструктор может быть вызван только унаследованным классом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При переопределении метода <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> конструктор, отложить инициализацию, которое должно выполняться после <xref:System.Web.Hosting.VirtualPathProvider> зарегистрирован объект <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода является реализацией <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> конструктор, который инициализирует пользовательский <xref:System.Web.Hosting.VirtualPathProvider> класса. Полный код, необходимый для выполнения этого примера, см в разделе "Пример" <xref:System.Web.Hosting.VirtualPathProvider> класс обзорной статье.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#25)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineVirtualPaths">
      <MemberSignature Language="C#" Value="public virtual string CombineVirtualPaths (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CombineVirtualPaths(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CombineVirtualPaths (basePath As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CombineVirtualPaths(System::String ^ basePath, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="abstract member CombineVirtualPaths : string * string -&gt; string&#xA;override this.CombineVirtualPaths : string * string -&gt; string" Usage="virtualPathProvider.CombineVirtualPaths (basePath, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">Базовый путь к приложению.</param>
        <param name="relativePath">Путь к виртуальному ресурсу относительно базового пути.</param>
        <summary>Объединяет базовый и относительный путь для возврата полного пути к виртуальному ресурсу.</summary>
        <returns>Полный путь к виртуальному ресурсу.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths%2A> метод для проверки содержимого относительный путь к виртуальному ресурсу и выполните необходимые изменения.  
  
 Реализация по умолчанию объединяет `basePath` и `relativePath` параметры в соответствии с обычной обработке путь ASP.NET.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Если переопределить реализацию по умолчанию <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> метод, вы должны преобразовать с помощью специального синтаксиса <paramref name="relativePath" /> параметр является допустимым виртуальным путем. Вы несете ответственность за синтаксис проверку, утверждение пути и обработка некорректные входные данные, а также крайних случаев для правильного ввода.  
  
В большинстве случаев его не потребуется переопределить значение по умолчанию <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> метод. Тем не менее, если необходимо изменить путь, мы рекомендуем ограничить вашей <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> реализации изменения для конкретного виртуального пути поставщика в токены <paramref name="relativeUrl" /> параметра, а затем вызывать базовую реализацию для выполнения обычных Путь обработки ASP.NET</para></block>
      </Docs>
    </Member>
    <Member MemberName="DirectoryExists">
      <MemberSignature Language="C#" Value="public virtual bool DirectoryExists (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DirectoryExists(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DirectoryExists (virtualDir As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DirectoryExists(System::String ^ virtualDir);" />
      <MemberSignature Language="F#" Value="abstract member DirectoryExists : string -&gt; bool&#xA;override this.DirectoryExists : string -&gt; bool" Usage="virtualPathProvider.DirectoryExists virtualDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir">Путь к виртуальному каталогу.</param>
        <summary>Получает значение, указывающее, существует ли каталог в виртуальной файловой системе.</summary>
        <returns><see langword="true" />, если каталог существует в виртуальной файловой системе; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Переопределить <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> методу, чтобы показать системе компиляции, представленный ресурса `virtualDir` существует в виртуальной файловой системы, предоставляемые этим <xref:System.Web.Hosting.VirtualPathProvider> экземпляра.  
  
 Если пользовательский <xref:System.Web.Hosting.VirtualPathProvider> класс не поддерживает каталоги, <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> метод должен возвращать `false`.  
  
> [!NOTE]
>  Если виртуальная файловая система будет содержать темы для веб-сайта (путем создания виртуального `App_Themes` directory), пользовательских <xref:System.Web.Hosting.VirtualPathProvider> класс должен поддерживать каталоги.  
  
   
  
## Examples  
 В следующем примере кода является реализацией <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> метод в настраиваемом <xref:System.Web.Hosting.VirtualPathProvider> класса. Полный код, необходимый для выполнения этого примера, см в разделе "Пример" <xref:System.Web.Hosting.VirtualPathProvider> класс обзорной статье.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#22)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public virtual bool FileExists (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FileExists(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FileExists (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool FileExists(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member FileExists : string -&gt; bool&#xA;override this.FileExists : string -&gt; bool" Usage="virtualPathProvider.FileExists virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Путь виртуального файла.</param>
        <summary>Получает значение, указывающее, существует ли файл в виртуальной файловой системе.</summary>
        <returns><see langword="true" />, если файл существует в виртуальной файловой системе; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Переопределить <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> методу, чтобы показать системе компиляции, представленный ресурса `virtualPath` существует в виртуальной файловой системы, предоставляемые этим <xref:System.Web.Hosting.VirtualPathProvider> экземпляра.  
  
   
  
## Examples  
 В следующем примере кода является реализацией <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> метод в настраиваемом <xref:System.Web.Hosting.VirtualPathProvider> класса. Полный код, необходимый для выполнения этого примера, см в разделе "Пример" <xref:System.Web.Hosting.VirtualPathProvider> класс обзорной статье.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#21)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheDependency">
      <MemberSignature Language="C#" Value="public virtual System.Web.Caching.CacheDependency GetCacheDependency (string virtualPath, System.Collections.IEnumerable virtualPathDependencies, DateTime utcStart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Caching.CacheDependency GetCacheDependency(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies, valuetype System.DateTime utcStart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheDependency (virtualPath As String, virtualPathDependencies As IEnumerable, utcStart As DateTime) As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Caching::CacheDependency ^ GetCacheDependency(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies, DateTime utcStart);" />
      <MemberSignature Language="F#" Value="abstract member GetCacheDependency : string * System.Collections.IEnumerable * DateTime -&gt; System.Web.Caching.CacheDependency&#xA;override this.GetCacheDependency : string * System.Collections.IEnumerable * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="virtualPathProvider.GetCacheDependency (virtualPath, virtualPathDependencies, utcStart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
        <Parameter Name="utcStart" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Путь к основному виртуальному ресурсу.</param>
        <param name="virtualPathDependencies">Массив путей к другим ресурсам, необходимым для основного виртуального ресурса.</param>
        <param name="utcStart">Время в формате UTC, когда были прочитаны виртуальные ресурсы.</param>
        <summary>Создает зависимость кэша на основе указанных виртуальных путей.</summary>
        <returns>Объект <see cref="T:System.Web.Caching.CacheDependency" /> для указанных виртуальных ресурсов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация по умолчанию <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> возвращает метод `null`. К виртуальным ресурсам кэш для дальнейшего использования необходимо переопределить <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> метод или <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> метод.  
  
   
  
## Examples  
 В следующем коде реализуется пример <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> метод для пользовательского <xref:System.Web.Hosting.VirtualPathProvider> класса. Полный код, необходимый для выполнения этого примера, см в разделе "Пример" <xref:System.Web.Hosting.VirtualPathProvider> класс обзорной статье.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#28)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheKey">
      <MemberSignature Language="C#" Value="public virtual string GetCacheKey (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCacheKey(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheKey (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCacheKey(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member GetCacheKey : string -&gt; string&#xA;override this.GetCacheKey : string -&gt; string" Usage="virtualPathProvider.GetCacheKey virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Путь к виртуальному ресурсу.</param>
        <summary>Возвращает ключ кэша, используемый для указанного виртуального пути.</summary>
        <returns>Ключ кэша для указанных виртуальных ресурсов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> метод, чтобы предоставить ключ пользовательского кэша виртуальных ресурсов. Если не переопределить <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> метод, виртуальный путь используется для ключа кэша.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Только переопределить значение по умолчанию <see cref="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" /> метод, если создание ключа кэша на основе виртуального пути, не будет работать для вашего приложения.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualDirectory GetDirectory (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualDirectory GetDirectory(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDirectory (virtualDir As String) As VirtualDirectory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualDirectory ^ GetDirectory(System::String ^ virtualDir);" />
      <MemberSignature Language="F#" Value="abstract member GetDirectory : string -&gt; System.Web.Hosting.VirtualDirectory&#xA;override this.GetDirectory : string -&gt; System.Web.Hosting.VirtualDirectory" Usage="virtualPathProvider.GetDirectory virtualDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualDirectory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir">Путь к виртуальному каталогу.</param>
        <summary>Получает виртуальный каталог из виртуальной файловой системы.</summary>
        <returns>Потомок класса <see cref="T:System.Web.Hosting.VirtualDirectory" />, представляющий каталог в виртуальной файловой системе.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> Метод возвращает потомок <xref:System.Web.Hosting.VirtualDirectory> класс, содержащий файлов и каталогов, содержащихся в каталоге, указанном в `virtualDir` параметра.  
  
 Если пользовательский <xref:System.Web.Hosting.VirtualPathProvider> класс не поддерживает каталоги, <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> метод должен возвращать `null`.  
  
> [!NOTE]
>  Если виртуальная файловая система будет содержать темы для веб-сайта (путем создания виртуального `App_Themes` directory), пользовательских <xref:System.Web.Hosting.VirtualPathProvider> класс должен поддерживать каталоги.  
  
   
  
## Examples  
 В следующем примере кода является реализацией <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> метод в настраиваемом <xref:System.Web.Hosting.VirtualPathProvider> класса. Полный код, необходимый для выполнения этого примера, см в разделе "Пример" <xref:System.Web.Hosting.VirtualPathProvider> класс обзорной статье.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#24)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualFile GetFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualFile GetFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFile (virtualPath As String) As VirtualFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualFile ^ GetFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member GetFile : string -&gt; System.Web.Hosting.VirtualFile&#xA;override this.GetFile : string -&gt; System.Web.Hosting.VirtualFile" Usage="virtualPathProvider.GetFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Путь виртуального файла.</param>
        <summary>Получает виртуальный файл из виртуальной файловой системы.</summary>
        <returns>Потомок класса <see cref="T:System.Web.Hosting.VirtualFile" />, представляющий файл в виртуальной файловой системе.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> Метод возвращает потомок <xref:System.Web.Hosting.VirtualFile> класс, представляющий файл, указанный параметром `virtualPath` параметр.  
  
   
  
## Examples  
 В следующем примере кода является реализацией <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> метод в настраиваемом <xref:System.Web.Hosting.VirtualPathProvider> класса. Полный код, необходимый для выполнения этого примера, см в разделе "Пример" <xref:System.Web.Hosting.VirtualPathProvider> класс обзорной статье.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileHash">
      <MemberSignature Language="C#" Value="public virtual string GetFileHash (string virtualPath, System.Collections.IEnumerable virtualPathDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFileHash(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileHash (virtualPath As String, virtualPathDependencies As IEnumerable) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFileHash(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies);" />
      <MemberSignature Language="F#" Value="abstract member GetFileHash : string * System.Collections.IEnumerable -&gt; string&#xA;override this.GetFileHash : string * System.Collections.IEnumerable -&gt; string" Usage="virtualPathProvider.GetFileHash (virtualPath, virtualPathDependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Путь к основному виртуальному ресурсу.</param>
        <param name="virtualPathDependencies">Массив путей к другим виртуальным ресурсам, необходимым для основного виртуального ресурса.</param>
        <summary>Возвращает хэш указанных виртуальных путей.</summary>
        <returns>Хэш указанных виртуальных путей.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> метод, чтобы предоставить хэш зависимости для ресурса виртуальной файловой системы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="virtualPathProvider.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Инициализирует экземпляр <see cref="T:System.Web.Hosting.VirtualPathProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> Метод вызывается после поставщик регистрируется в системе компиляции ASP.NET. <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> Метод используется для предоставления любой инициализацию, требуемую после <xref:System.Web.Hosting.VirtualPathProvider> экземпляр помещается в среду, занимаемом приложением.  
  
   
  
## Examples  
 В следующем примере кода является реализацией <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> метод, который задает путь к файлу данных из приложения <xref:System.Web.Hosting.HostingEnvironment> экземпляра. Полный код, необходимый для выполнения этого примера, см в разделе "Пример" <xref:System.Web.Hosting.VirtualPathProvider> класс обзорной статье.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#26)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="virtualPathProvider.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Предоставляет объекту <see cref="T:System.Web.Hosting.VirtualPathProvider" /> неограниченное время жизни, препятствуя созданию аренды.</summary>
        <returns>Всегда <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> метод в базовом классе. Он всегда возвращает `null` , предотвращая создание аренды, ограничивающей <xref:System.Web.Hosting.VirtualPathProvider> время существования объекта.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenFile (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member OpenFile : string -&gt; System.IO.Stream" Usage="System.Web.Hosting.VirtualPathProvider.OpenFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Путь виртуального файла.</param>
        <summary>Возвращает поток из виртуального файла.</summary>
        <returns>Доступный только для чтения объект <see cref="T:System.IO.Stream" /> для указанного виртуального файла или ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.OpenFile%2A> Метод — это удобный метод, который позволяет получить поток из виртуального файла без создания <xref:System.Web.Hosting.VirtualPathProvider> экземпляра.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="protected internal System.Web.Hosting.VirtualPathProvider Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Hosting.VirtualPathProvider Previous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualPathProvider.Previous" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Previous As VirtualPathProvider" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::Hosting::VirtualPathProvider ^ Previous { System::Web::Hosting::VirtualPathProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Previous : System.Web.Hosting.VirtualPathProvider" Usage="System.Web.Hosting.VirtualPathProvider.Previous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualPathProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает ссылку на ранее зарегистрированный в системе компиляции объект <see cref="T:System.Web.Hosting.VirtualPathProvider" />.</summary>
        <value>Следующий объект <see cref="T:System.Web.Hosting.VirtualPathProvider" /> в системе компиляции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Web.Hosting.VirtualPathProvider> объект зарегистрирован в системе компиляции ASP.NET, он добавляется к цепочке поставщиков. Используйте <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> свойства для обработки вручную отключить к предыдущему <xref:System.Web.Hosting.VirtualPathProvider> объекта в цепочке, если запрошенный путь не указан, это <xref:System.Web.Hosting.VirtualPathProvider> экземпляра.  
  
 Цепи поставщиков путь всегда завершается с поставщиком ASP.NET по умолчанию, который обслуживает файлы из файловой системы.  
  
   
  
## Examples  
 В следующем примере кода является реализацией <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> метод. Если запрошенный виртуальный каталог не начинается строкой `"/vrdir"`, данный метод использует <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> свойство передать запрос к следующему <xref:System.Web.Hosting.VirtualPathProvider> объекта в цепочке. Полный код, необходимый для выполнения этого примера, см в разделе "Пример" <xref:System.Web.Hosting.VirtualPathProvider> класс обзорной статье.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>