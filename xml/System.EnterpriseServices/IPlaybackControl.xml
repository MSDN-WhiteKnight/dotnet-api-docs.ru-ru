<Type Name="IPlaybackControl" FullName="System.EnterpriseServices.IPlaybackControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9110597651512178c67edfe7320178c083861fad" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55344917" /></Metadata><TypeSignature Language="C#" Value="public interface IPlaybackControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPlaybackControl" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IPlaybackControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPlaybackControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPlaybackControl" />
  <TypeSignature Language="F#" Value="type IPlaybackControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Работает в очередях компонентов при неправильной обработке серверных ошибок воспроизведения и ошибок клиентов в механизме доставки очереди сообщений.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс исключений, определенные для компонента в каталоге COM +, реализует интерфейс <xref:System.EnterpriseServices.IPlaybackControl> и интерфейс для исходного класса. Реализации методов интерфейса исходного класса используются для выполнения обработки для неудачных методов в самом классе исключений. Они будут вызываться после <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> или <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> для обработки исключений для метода, который изначально назывался.  
  
 Проигрыватель очередей компонентов вызывает методы <xref:System.EnterpriseServices.IPlaybackControl> для информирования объекта обработчик исключений, что сообщение будет помещено в очередь окончательного хранения или недоставленных сообщений. Затем проигрыватель очередей компонентов вызывает тот же метод в объекте обработчика исключений, которого возникла ошибка в исходном вызове метода. Объект обработчика исключений можно реализовать другой вариант — например, собирать сведения диагностики проблем или создавать объект или сообщение, которое информирует клиента о проблеме. Если приложение не реализует <xref:System.EnterpriseServices.IPlaybackControl>, подозрительное сообщение помещается в конечную очередь хранения или недоставленных сообщений, когда проигрыватель очередей компонентов выполнит все повторы.  
  
 Подозрительное сообщение представляет собой сообщение, исключающий по какой-либо причине, возможно из-за проблемы с сервером или система очередей. Откат транзакции, и подозрительное сообщение переходит в начало очереди. При повторном выводе сообщения из очереди происходит то же условие. Это сообщение может повторяться бесконечно, пока предпринимаются действия для устранения проблемы. Служба очередей компонентов обрабатывает подозрительного сообщения с помощью ряда повторов. После нескольких неудачных попыток сообщение перемещается в очередь для окончательного хранения. Подозрительные сообщения остаются в очереди на хранение до вручную перемещены с помощью средства переноса кортежей сообщения в очереди компонентов.  
  
 Ситуация подозрительных сообщений можно также разрешить программно, с помощью <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> метод, который информирует о том, автор серверный компонент, завершившихся ошибкой все попытки воспроизведения отложенной активации.  
  
 Если вы обнаружили опасное сообщение, можно быстро выяснить основную причину проблемы. Например если сервер находился в автономном режиме для какой-либо причине, можно перевести сервер обратно в оперативный режим. Если быстро решить проблему невозможно, можно автоматически создать другую транзакцию, которая уведомляет запрашивающую сторону, транзакции не было. Запрашивающая сторона может внести компенсирующую транзакцию, которая отменяет эффект зафиксированной транзакции.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FinalClientRetry">
      <MemberSignature Language="C#" Value="public void FinalClientRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalClientRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalClientRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalClientRetry();" />
      <MemberSignature Language="F#" Value="abstract member FinalClientRetry : unit -&gt; unit" Usage="iPlaybackControl.FinalClientRetry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Оповещает компонент обработчика исключений клиента о том, что все попытки очереди сообщений по доставке сообщения на сервер были отклонены, и сообщение оборвалось в очереди недоставленных сообщений об активных транзакциях клиента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При поступлении сообщения в очереди недоставленных сообщений Xact, COM + пытается вызвать обработчик исключений на стороне клиента, связанный с классом сервера для доставки уведомления. Это достигается путем вызова метода <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, то при вызове версию сбой метода обработки исключений в объекте обработчика исключений. Метод исключений может предпринять действие исключения, например запись о сбое, отправить администратору сообщение электронной почты или выполнить компенсирующее действие на стороне клиента (Отмена эффекта более ранней транзакции). Если метод исключения не был выполнен успешно, сообщение остается в очереди недоставленных транзакций.  
  
 Очереди недоставленных сообщений Xact можно просмотреть в обозревателе очереди сообщений (Майкрософт).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalServerRetry">
      <MemberSignature Language="C#" Value="public void FinalServerRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalServerRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalServerRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalServerRetry();" />
      <MemberSignature Language="F#" Value="abstract member FinalServerRetry : unit -&gt; unit" Usage="iPlaybackControl.FinalServerRetry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Оповещает реализацию класса исключений сервера о том, что все попытки воспроизведения отложенной активации для сервера не были выполнены, и сообщение будет перемещено в очередь для окончательного хранения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При поступлении сообщения в очередь недоставленных сообщений Xact, COM + пытается вызвать обработчик исключений на стороне сервера, связанный с классом сервера для доставки уведомления. Это достигается путем вызова метода <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>, то при вызове версии сбой метода в объект обработчика исключений обработки исключений. Метод исключений может предпринять действие исключения, например запись о сбое, отправить администратору сообщение электронной почты или выполнить компенсирующее действие на стороне клиента (Отмена эффекта более ранней транзакции). Объект сервера следует сделать все возможное для успешного завершения этой транзакции. В противном случае для повторной обработки сообщения требуется ручное вмешательство. Если метод исключения не был выполнен успешно, сообщение перемещается в очередь для окончательного хранения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>