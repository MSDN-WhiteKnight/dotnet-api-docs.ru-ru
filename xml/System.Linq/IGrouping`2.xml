<Type Name="IGrouping&lt;TKey,TElement&gt;" FullName="System.Linq.IGrouping&lt;TKey,TElement&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="437dfcb6e83ef51b61ada590d84a404bfdbf3010" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51316986" /></Metadata><TypeSignature Language="C#" Value="public interface IGrouping&lt;out TKey,out TElement&gt; : System.Collections.Generic.IEnumerable&lt;out TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGrouping`2&lt;+ TKey, + TElement&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IGrouping`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IGrouping(Of Out TKey, Out TElement)&#xA;Implements IEnumerable(Of Out TElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TElement&gt;&#xA;public interface class IGrouping : System::Collections::Generic::IEnumerable&lt;TElement&gt;" />
  <TypeSignature Language="F#" Value="type IGrouping&lt;'Key, 'Element&gt; = interface&#xA;    interface seq&lt;'Element&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TElement">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">Тип ключа объекта <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
    <typeparam name="TElement">Тип значений объекта <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
    <summary>Представляет коллекцию объектов с общим ключом.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Linq.IGrouping%602> Является <xref:System.Collections.Generic.IEnumerable%601> Кроме того, имеет ключ. Ключ представляет атрибут, который является общим для каждого значения в <xref:System.Linq.IGrouping%602>.  
  
 Значения <xref:System.Linq.IGrouping%602> осуществляется во многом как элементы <xref:System.Collections.Generic.IEnumerable%601> осуществляется. Например, можно обращаться к значениям с помощью `foreach` в Visual C# или `For Each` in Visual Basic для перебора <xref:System.Linq.IGrouping%602> объекта. Ниже приводится пример кода, в котором показано, как получить доступ к ключа и значения <xref:System.Linq.IGrouping%602> объекта.  
  
 <xref:System.Linq.IGrouping%602> Тип используется <xref:System.Linq.Enumerable.GroupBy%2A> методы стандартных операторов запросов, которые возвращают последовательность элементов типа <xref:System.Linq.IGrouping%602>.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как работать с <xref:System.Linq.IGrouping%602> объекта.  
  
 В этом примере <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> вызывается для массива <xref:System.Reflection.MemberInfo> объектов, возвращенных <xref:System.Type.GetMembers%2A>. <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> Группирует объекты на основе значения из их <xref:System.Reflection.MemberInfo.MemberType%2A> свойство. Каждое уникальное значение для <xref:System.Reflection.MemberInfo.MemberType%2A> в массиве <xref:System.Reflection.MemberInfo> объектов становится ключом для нового <xref:System.Linq.IGrouping%602> объекта и <xref:System.Reflection.MemberInfo> объектов, имеющих форму ключа <xref:System.Linq.IGrouping%602> объекта последовательности значений.  
  
 Наконец <xref:System.Linq.Enumerable.First%2A> последовательность вызывается метод <xref:System.Linq.IGrouping%602> объектов для получения только первых <xref:System.Linq.IGrouping%602> объекта.  
  
 Затем выводится ключ <xref:System.Linq.IGrouping%602> объекта и <xref:System.Reflection.MemberInfo.Name%2A> свойство для каждого значения в <xref:System.Linq.IGrouping%602> объекта последовательности значений. Обратите внимание, что для доступа к <xref:System.Linq.IGrouping%602> объекта последовательность значений, можно просто использовать <xref:System.Linq.IGrouping%602> сама переменная.  
  
 [!code-csharp[System.Linq.IGrouping#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#1)]
 [!code-vb[System.Linq.IGrouping#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public TKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IGrouping`2.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As TKey" />
      <MemberSignature Language="F#" Value="member this.Key : 'Key" Usage="System.Linq.IGrouping&lt;'Key, 'Element&gt;.Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TKey Key { TKey get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ключ объекта <see cref="T:System.Linq.IGrouping`2" />.</summary>
        <value>Ключ объекта <see cref="T:System.Linq.IGrouping`2" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ключ <xref:System.Linq.IGrouping%602> представляет атрибут, который является общим для каждого значения в <xref:System.Linq.IGrouping%602>.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как использовать <xref:System.Linq.IGrouping%602.Key%2A> свойства для обозначения каждого <xref:System.Linq.IGrouping%602> объект в последовательность <xref:System.Linq.IGrouping%602> объектов. <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> Метод используется для получения последовательности <xref:System.Linq.IGrouping%602> объектов. `foreach` В Visual C# или `For Each` в Visual Basic цикл перебирает каждый <xref:System.Linq.IGrouping%602> объекта, вывод ключом и число значений, которые он содержит.  
  
 [!code-csharp[System.Linq.IGrouping#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#2)]
 [!code-vb[System.Linq.IGrouping#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>