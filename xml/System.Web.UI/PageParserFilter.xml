<Type Name="PageParserFilter" FullName="System.Web.UI.PageParserFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38331c03f40ebbc4de659f604fcf9c909788f6e0" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53394038" /></Metadata><TypeSignature Language="C#" Value="public abstract class PageParserFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageParserFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageParserFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageParserFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageParserFilter abstract" />
  <TypeSignature Language="F#" Value="type PageParserFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Обеспечивает абстрактный базовый класс для фильтра синтаксического анализатора страниц, используемого во время синтаксического анализа анализатором ASP.NET, для определения того, является ли элемент допустимым на странице.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как можно создать класс, производный от <xref:System.Web.UI.PageParserFilter> класс для управления поведением анализатор страниц ASP.NET. `CustomPageParserFilter` Средство синтаксического анализа фильтр, явным образом отклоняет код на странице. Это делается путем переопределения <xref:System.Web.UI.PageParserFilter.AllowCode%2A> свойство.  
  
 [!code-csharp[System.Web.UI.PageParserFilter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageParserFilter/CS/CustomPageParserFilter.cs#2)]
 [!code-vb[System.Web.UI.PageParserFilter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageParserFilter/VB/CustomPageParserFilter.vb#2)]  
  
 Чтобы использовать `CustomPageParserFilter` пример, поместить класс в каталоге App_Code. Необходимо настроить синтаксические анализаторы ASP.NET для использования в фильтре `pages` раздел файла конфигурации Web.config веб сайта. В следующем примере файла конфигурации показана конфигурация для `CustomPageParserFilter`. Когда настроена на использование фильтром синтаксического анализатора, анализатор ASP.NET создает исключение во время сборки, при обнаружении кода на странице.  
  
 `<?xml version="1.0" ?>`  
  
 `<configuration xmlns="http://schemas.microsoft.com/.NetConfiguration/v2.0">`  
  
 `<system.web>`  
  
 `<pages`  
  
 `pageParserFilterType="Samples.AspNet.CS.CustomPageParserFilter">`  
  
 `</pages>`  
  
 `</system.web>`  
  
 `</configuration>`  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.Configuration.PagesSection.PageParserFilterType" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageParserFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageParserFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.PageParserFilter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddControl">
      <MemberSignature Language="C#" Value="protected void AddControl (Type type, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddControl(class System.Type type, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AddControl(System.Type,System.Collections.IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddControl(Type ^ type, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.AddControl : Type * System.Collections.IDictionary -&gt; unit" Usage="pageParserFilter.AddControl (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="type">Тип элемента управления, представленный объектом <see cref="T:System.Web.UI.ControlBuilder" />.</param>
        <param name="attributes">Объект <see cref="T:System.Collections.IDictionary" />, хранящий все атрибуты указанного тега.</param>
        <summary>Добавляет объект <see cref="T:System.Web.UI.ControlBuilder" /> в дерево элементов управления страницей при текущем положении синтаксического анализатора страниц.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PageParserFilter.AddControl%2A> впервые появился в .NET Framework версии 3.5.  Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowBaseType">
      <MemberSignature Language="C#" Value="public virtual bool AllowBaseType (Type baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowBaseType(class System.Type baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AllowBaseType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowBaseType (baseType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowBaseType(Type ^ baseType);" />
      <MemberSignature Language="F#" Value="abstract member AllowBaseType : Type -&gt; bool&#xA;override this.AllowBaseType : Type -&gt; bool" Usage="pageParserFilter.AllowBaseType baseType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseType">Класс <see cref="T:System.Type" /> представляет потенциальный базовый класс текущей страницы.</param>
        <summary>Определяет, может ли страница являться производной от указанного класса <see cref="T:System.Type" />.</summary>
        <returns><see langword="true" />, если страница может быть наследована из указанного типа; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.TemplateParser> Класс определяет, разрешен ли базовый тип.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCode">
      <MemberSignature Language="C#" Value="public virtual bool AllowCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.AllowCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowCode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowCode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowCode : bool" Usage="System.Web.UI.PageParserFilter.AllowCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее разрешает ли фильтр синтаксического анализатора ASP.NET использовать код на странице.</summary>
        <value><see langword="true" />, если фильтром синтаксического анализатора разрешен код; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.TemplateParser> Класс проверяет все связанные <xref:System.Web.UI.PageParserFilter> экземпляр, чтобы определить, является ли страница может содержать код, который можно скомпилировать.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowControl">
      <MemberSignature Language="C#" Value="public virtual bool AllowControl (Type controlType, System.Web.UI.ControlBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowControl(class System.Type controlType, class System.Web.UI.ControlBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AllowControl(System.Type,System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowControl (controlType As Type, builder As ControlBuilder) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowControl(Type ^ controlType, System::Web::UI::ControlBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="abstract member AllowControl : Type * System.Web.UI.ControlBuilder -&gt; bool&#xA;override this.AllowControl : Type * System.Web.UI.ControlBuilder -&gt; bool" Usage="pageParserFilter.AllowControl (controlType, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlType" Type="System.Type" />
        <Parameter Name="builder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="controlType">Экземпляр <see cref="T:System.Type" />, предоставляющий тип добавляемого элемента управления.</param>
        <param name="builder">Объект <see cref="T:System.Web.UI.ControlBuilder" /> используется для построения указанного типа элемента управления.</param>
        <summary>Возвращает значение, указывающее разрешен ли указанный тип элемента управления на данной странице.</summary>
        <returns><see langword="true" />, если элемент управления может быть использован текущей страницей; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.TemplateParser> Класса проверяет, разрешены ли элементы управления на странице во время синтаксического анализа. Переопределить <xref:System.Web.UI.PageParserFilter.AllowControl%2A> метод, чтобы отклонить или разрешить определенные элементы управления на страницах.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowServerSideInclude">
      <MemberSignature Language="C#" Value="public virtual bool AllowServerSideInclude (string includeVirtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowServerSideInclude(string includeVirtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AllowServerSideInclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowServerSideInclude (includeVirtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowServerSideInclude(System::String ^ includeVirtualPath);" />
      <MemberSignature Language="F#" Value="abstract member AllowServerSideInclude : string -&gt; bool&#xA;override this.AllowServerSideInclude : string -&gt; bool" Usage="pageParserFilter.AllowServerSideInclude includeVirtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeVirtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="includeVirtualPath">Виртуальный путь к включенному файлу.</param>
        <summary>Определяет, разрешает ли синтаксический анализатор определенные включения в страницу со стороны сервера.</summary>
        <returns><see langword="true" />, если синтаксический анализатор разрешает определенные включения со стороны сервера; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Переопределить <xref:System.Web.UI.PageParserFilter.AllowServerSideInclude%2A> метод отклонении всех или определенных-включения на стороне сервера. Дополнительные сведения о серверных включить синтаксис, см. в разделе [синтаксис директивы включения на стороне сервера](https://msdn.microsoft.com/library/42a6925a-f68c-4690-a9c4-d710358886a9).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowVirtualReference">
      <MemberSignature Language="C#" Value="public virtual bool AllowVirtualReference (string referenceVirtualPath, System.Web.UI.VirtualReferenceType referenceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowVirtualReference(string referenceVirtualPath, valuetype System.Web.UI.VirtualReferenceType referenceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AllowVirtualReference(System.String,System.Web.UI.VirtualReferenceType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowVirtualReference (referenceVirtualPath As String, referenceType As VirtualReferenceType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowVirtualReference(System::String ^ referenceVirtualPath, System::Web::UI::VirtualReferenceType referenceType);" />
      <MemberSignature Language="F#" Value="abstract member AllowVirtualReference : string * System.Web.UI.VirtualReferenceType -&gt; bool&#xA;override this.AllowVirtualReference : string * System.Web.UI.VirtualReferenceType -&gt; bool" Usage="pageParserFilter.AllowVirtualReference (referenceVirtualPath, referenceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referenceVirtualPath" Type="System.String" />
        <Parameter Name="referenceType" Type="System.Web.UI.VirtualReferenceType" />
      </Parameters>
      <Docs>
        <param name="referenceVirtualPath">Виртуальный путь к ресурсу, такому как файл главной страницы, страница ASP.NET или пользовательский элемент управления.</param>
        <param name="referenceType">Значение <see cref="T:System.Web.UI.VirtualReferenceType" />, идентифицирующее тип ресурса.</param>
        <summary>Определяет, позволяет ли синтаксический анализатор виртуальную ссылку на определенный тип ресурсов на странице.</summary>
        <returns><see langword="true" />, если синтаксический анализатор разрешает ссылку на определенный тип ресурсов; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.TemplateParser> Класс определяет ли определенный тип ресурсов может ссылаться на страницу.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.VirtualReferenceType" />
      </Docs>
    </Member>
    <Member MemberName="CalledFromParseControl">
      <MemberSignature Language="C#" Value="protected bool CalledFromParseControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalledFromParseControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.CalledFromParseControl" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CalledFromParseControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool CalledFromParseControl { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CalledFromParseControl : bool" Usage="System.Web.UI.PageParserFilter.CalledFromParseControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, которое показывает, был ли на странице вызван фильтр анализатора.</summary>
        <value>Значение <see langword="true" />, если фильтр анализатора был вызван на странице; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство имеет значение `true` при реализации <xref:System.Web.UI.PageParserFilter> класса вызывается путем вызова метода `ParseControl` метод <xref:System.Web.UI.Page> класса или путем вызова `ParseControl` метод `TemplateControl` перечень <xref:System.Web.UI.Page>класса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompilationMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.CompilationMode GetCompilationMode (System.Web.UI.CompilationMode current);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.UI.CompilationMode GetCompilationMode(valuetype System.Web.UI.CompilationMode current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.GetCompilationMode(System.Web.UI.CompilationMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCompilationMode (current As CompilationMode) As CompilationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::CompilationMode GetCompilationMode(System::Web::UI::CompilationMode current);" />
      <MemberSignature Language="F#" Value="abstract member GetCompilationMode : System.Web.UI.CompilationMode -&gt; System.Web.UI.CompilationMode&#xA;override this.GetCompilationMode : System.Web.UI.CompilationMode -&gt; System.Web.UI.CompilationMode" Usage="pageParserFilter.GetCompilationMode current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.CompilationMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Web.UI.CompilationMode" />
      </Parameters>
      <Docs>
        <param name="current">Текущий режим компиляции для страницы.</param>
        <summary>Извлекает текущий режим компиляции для страницы.</summary>
        <returns>Одно из значений <see cref="T:System.Web.UI.CompilationMode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.TemplateControlParser> Класс проверяет все связанные <xref:System.Web.UI.PageParserFilter> экземпляр для применения к странице в настоящее время обработанные режим компиляции. Реализация по умолчанию <xref:System.Web.UI.PageParserFilter.GetCompilationMode%2A> метод просто возвращает <xref:System.Web.UI.CompilationMode> значение, передаваемое в текущий параметр. Переопределить <xref:System.Web.UI.PageParserFilter.GetCompilationMode%2A> метод, используемый конкретное или разных <xref:System.Web.UI.CompilationMode> значение.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
      </Docs>
    </Member>
    <Member MemberName="GetNoCompileUserControlType">
      <MemberSignature Language="C#" Value="public virtual Type GetNoCompileUserControlType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetNoCompileUserControlType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.GetNoCompileUserControlType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNoCompileUserControlType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetNoCompileUserControlType();" />
      <MemberSignature Language="F#" Value="abstract member GetNoCompileUserControlType : unit -&gt; Type&#xA;override this.GetNoCompileUserControlType : unit -&gt; Type" Usage="pageParserFilter.GetNoCompileUserControlType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение <see cref="T:System.Type" />, которое следует использовать для страниц или элементов управления, которые не компилируются динамически.</summary>
        <returns>Возвращаемое значение <see cref="T:System.Type" />, которое следует использовать для страниц или элементов управления, которые не компилируются динамически. Значение по умолчанию — <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно переопределить <xref:System.Web.UI.PageParserFilter.GetNoCompileUserControlType%2A> метод, чтобы указать тип возвращаемого значения страниц или элементов управления, которые обрабатываются, как если бы они не компилируются динамически. Значение по умолчанию — `null`.  
  
 <xref:System.Web.UI.PageParserFilter.GetNoCompileUserControlType%2A> впервые появился в .NET Framework версии 3.5.  Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="pageParserFilter.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Инициализирует фильтр, используемый для страницы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Так как <xref:System.Web.UI.PageParserFilter> класс не предоставляет четко определенных открытые конструкторы, она инициализируется по средствам синтаксического анализа страницы, использующие <xref:System.Web.UI.PageParserFilter.Initialize%2A> метод. Переопределить <xref:System.Web.UI.PageParserFilter.Initialize%2A> метод, чтобы добавить собственные настраиваемые инициализации действия при создании экземпляра класса <xref:System.Web.UI.PageParserFilter> создается и используется ASP.NET. `virtualPath` Параметр, передаваемый <xref:System.Web.UI.PageParserFilter.Initialize%2A> метода задает <xref:System.Web.UI.PageParserFilter.VirtualPath%2A> свойство и не может быть `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Line">
      <MemberSignature Language="C#" Value="protected int Line { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Line" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.Line" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Line As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int Line { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Line : int" Usage="System.Web.UI.PageParserFilter.Line" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает номер строки, обрабатываемой в данный момент в файле.</summary>
        <value>Целое число представляет линию в файле, обрабатываемом в данный момент фильтром синтаксического анализатора.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В пользовательском <xref:System.Web.UI.PageParserFilter> реализации, используйте <xref:System.Web.UI.PageParserFilter.Line%2A> свойство к отчету, возникновения ошибок во время синтаксического анализа.  
  
 <xref:System.Web.UI.PageParserFilter.Line%2A> впервые появился в .NET Framework версии 3.5.  Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfControlsAllowed">
      <MemberSignature Language="C#" Value="public virtual int NumberOfControlsAllowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfControlsAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.NumberOfControlsAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfControlsAllowed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfControlsAllowed { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfControlsAllowed : int" Usage="System.Web.UI.PageParserFilter.NumberOfControlsAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает максимальное число элементов управления одной страницы, которые могут быть проанализированы фильтром синтаксического анализатора.</summary>
        <value>Максимальное число элементов управления на странице, которые могут быть проанализированы фильтром синтаксического анализатора.  По умолчанию принимается значение 0, указывающее на то, что не был проанализирован ни один элемент управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Анализатор страниц ASP.NET следит за элементов управления, он анализирует и если это число превышает предельного значения, указываемого <xref:System.Web.UI.PageParserFilter> экземпляр, он выдает <xref:System.Web.HttpException> исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfDirectDependenciesAllowed">
      <MemberSignature Language="C#" Value="public virtual int NumberOfDirectDependenciesAllowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfDirectDependenciesAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.NumberOfDirectDependenciesAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfDirectDependenciesAllowed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfDirectDependenciesAllowed { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfDirectDependenciesAllowed : int" Usage="System.Web.UI.PageParserFilter.NumberOfDirectDependenciesAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает разрешенное синтаксическим анализатором страниц, максимальное число прямых файловых зависимостей одной страницы.</summary>
        <value>Максимальное число прямых зависимостей между файлами одной страницы, разрешенных синтаксическим анализатором страниц. По умолчанию принимается значение 0, указывающее на отсутствие разрешенных зависимостей.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.TemplateParser> Класс отслеживает число прямых и косвенный файл зависимостей, он анализирует и если число превышает предел задается <xref:System.Web.UI.PageParserFilter> экземпляра, создается исключение.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.PageParserFilter.TotalNumberOfDependenciesAllowed" />
      </Docs>
    </Member>
    <Member MemberName="ParseComplete">
      <MemberSignature Language="C#" Value="public virtual void ParseComplete (System.Web.UI.ControlBuilder rootBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParseComplete(class System.Web.UI.ControlBuilder rootBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.ParseComplete(System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ParseComplete (rootBuilder As ControlBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ParseComplete(System::Web::UI::ControlBuilder ^ rootBuilder);" />
      <MemberSignature Language="F#" Value="abstract member ParseComplete : System.Web.UI.ControlBuilder -&gt; unit&#xA;override this.ParseComplete : System.Web.UI.ControlBuilder -&gt; unit" Usage="pageParserFilter.ParseComplete rootBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootBuilder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="rootBuilder">Класс <see cref="T:System.Web.UI.ControlBuilder" /> связан с синтаксическим анализом страниц.</param>
        <summary>Вызывается синтаксическим анализатором страниц ASP.NET для извещения фильтра о моменте окончания синтаксического анализа страницы.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreprocessDirective">
      <MemberSignature Language="C#" Value="public virtual void PreprocessDirective (string directiveName, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreprocessDirective(string directiveName, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.PreprocessDirective(System.String,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PreprocessDirective (directiveName As String, attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PreprocessDirective(System::String ^ directiveName, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreprocessDirective : string * System.Collections.IDictionary -&gt; unit&#xA;override this.PreprocessDirective : string * System.Collections.IDictionary -&gt; unit" Usage="pageParserFilter.PreprocessDirective (directiveName, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directiveName" Type="System.String" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="directiveName">Директива страницы.</param>
        <param name="attributes">Коллекция атрибутов и значений, извлеченных из страницы при синтаксическом анализе.</param>
        <summary>Позволяет синтаксическому анализатору страниц предварительно обрабатывать директивы страниц.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Страница вызывает средство синтаксического анализа <xref:System.Web.UI.PageParserFilter.PreprocessDirective%2A> метод для каждой из директив при синтаксическом анализе произошла.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCodeConstruct">
      <MemberSignature Language="C#" Value="public virtual bool ProcessCodeConstruct (System.Web.UI.CodeConstructType codeType, string code);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ProcessCodeConstruct(valuetype System.Web.UI.CodeConstructType codeType, string code) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.ProcessCodeConstruct(System.Web.UI.CodeConstructType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProcessCodeConstruct (codeType As CodeConstructType, code As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ProcessCodeConstruct(System::Web::UI::CodeConstructType codeType, System::String ^ code);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCodeConstruct : System.Web.UI.CodeConstructType * string -&gt; bool&#xA;override this.ProcessCodeConstruct : System.Web.UI.CodeConstructType * string -&gt; bool" Usage="pageParserFilter.ProcessCodeConstruct (codeType, code)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeType" Type="System.Web.UI.CodeConstructType" />
        <Parameter Name="code" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="codeType">Одно из значений перечисления <see cref="T:System.Web.UI.CodeConstructType" />, указывающее тип конструкции кода.</param>
        <param name="code">Строковый литерал, содержащий код внутри конструкции кода.</param>
        <summary>Возвращает значение, указывающее, следует ли обрабатывать блок кода соответствующими фильтрами синтаксического анализатора.</summary>
        <returns><see langword="true" />, если синтаксическому анализатору следует продолжать анализ конструкции кода далее; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно переопределить <xref:System.Web.UI.PageParserFilter.ProcessCodeConstruct%2A> метода для синтаксического анализа кода, содержащегося в конструкциях кода, при реализации пользовательского <xref:System.Web.UI.PageParserFilter>. После обработки в коде, этот метод возвращает `true` Если анализатору следует продолжать кода далее; в противном случае — значение, он возвращает `false`.  
  
 Тип конструкции кода.: <xref:System.Web.UI.CodeConstructType> значений перечисления.  
  
 <xref:System.Web.UI.PageParserFilter.ProcessCodeConstruct%2A> впервые появился в .NET Framework версии 3.5.  Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CodeConstructType" />
      </Docs>
    </Member>
    <Member MemberName="ProcessDataBindingAttribute">
      <MemberSignature Language="C#" Value="public virtual bool ProcessDataBindingAttribute (string controlId, string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ProcessDataBindingAttribute(string controlId, string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProcessDataBindingAttribute (controlId As String, name As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ProcessDataBindingAttribute(System::String ^ controlId, System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDataBindingAttribute : string * string * string -&gt; bool&#xA;override this.ProcessDataBindingAttribute : string * string * string -&gt; bool" Usage="pageParserFilter.ProcessDataBindingAttribute (controlId, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId">Идентификатор элемента управления, содержащий атрибут привязки данных.</param>
        <param name="name">Имя атрибута с выражением привязки данных.</param>
        <param name="value">Выражение привязки данных.</param>
        <summary>Возвращает значение, показывающее обрабатывает ли фильтр синтаксического анализатора выражение привязки данных в атрибуте.</summary>
        <returns><see langword="true" />, если фильтр синтаксического анализатора обрабатывает атрибуты привязки данных; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно переопределить <xref:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute%2A> метод, чтобы фильтр синтаксического анализатора для обработки выражений привязки данных, при реализации пользовательского <xref:System.Web.UI.PageParserFilter> класса. Например, выражение привязки данных, используемых с атрибутом `<%# expression %>`.  
  
 <xref:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute%2A> впервые появился в .NET Framework версии 3.5.  Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEventHookup">
      <MemberSignature Language="C#" Value="public virtual bool ProcessEventHookup (string controlId, string eventName, string handlerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ProcessEventHookup(string controlId, string eventName, string handlerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.ProcessEventHookup(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProcessEventHookup (controlId As String, eventName As String, handlerName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ProcessEventHookup(System::String ^ controlId, System::String ^ eventName, System::String ^ handlerName);" />
      <MemberSignature Language="F#" Value="abstract member ProcessEventHookup : string * string * string -&gt; bool&#xA;override this.ProcessEventHookup : string * string * string -&gt; bool" Usage="pageParserFilter.ProcessEventHookup (controlId, eventName, handlerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="handlerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId">Идентификатор элемента управления с событием, имеющим обработчик.</param>
        <param name="eventName">Имя события <paramref name="controlId" />, для которого необходимо включить фильтр.</param>
        <param name="handlerName">Обработчик событий <paramref name="eventName" />, для которого необходимо поставить фильтр.</param>
        <summary>Возвращает значение, указывающее, следует ли обрабатывать обработчики событий фильтрами синтаксического анализатора.</summary>
        <returns><see langword="true" />, если синтаксический анализатор обрабатывает обработчики событий; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно переопределить <xref:System.Web.UI.PageParserFilter.ProcessEventHookup%2A> метод, чтобы средство синтаксического анализа для обработки подписки на события, при реализации пользовательского <xref:System.Web.UI.PageParserFilter> класса. Пример обработчика событий предоставляет обработчик для <xref:System.Web.UI.WebControls.Button.Click> событие <xref:System.Web.UI.WebControls.Button> элемента управления.  
  
 <xref:System.Web.UI.PageParserFilter.ProcessEventHookup%2A> впервые появился в .NET Framework версии 3.5.  Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPageProperty">
      <MemberSignature Language="C#" Value="protected void SetPageProperty (string filter, string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPageProperty(string filter, string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.SetPageProperty(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetPageProperty (filter As String, name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetPageProperty(System::String ^ filter, System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetPageProperty : string * string * string -&gt; unit" Usage="pageParserFilter.SetPageProperty (filter, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter">Строка, содержащая значение фильтра на основе выражения. Пример см. в разделе <see cref="T:System.Web.UI.PropertyEntry" />.</param>
        <param name="name">Имя свойства, которому присваивается значение.</param>
        <param name="value">Значение, присваиваемое свойству.</param>
        <summary>Задает свойство элементу управления, наследованному от класса <see cref="T:System.Web.UI.TemplateControl" />, включающего элементы управления <see cref="T:System.Web.UI.Page" />, <see cref="T:System.Web.UI.UserControl" /> и <see cref="T:System.Web.UI.MasterPage" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PageParserFilter.SetPageProperty%2A> впервые появился в .NET Framework версии 3.5.  Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PropertyEntry" />
      </Docs>
    </Member>
    <Member MemberName="TotalNumberOfDependenciesAllowed">
      <MemberSignature Language="C#" Value="public virtual int TotalNumberOfDependenciesAllowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalNumberOfDependenciesAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.TotalNumberOfDependenciesAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TotalNumberOfDependenciesAllowed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TotalNumberOfDependenciesAllowed { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalNumberOfDependenciesAllowed : int" Usage="System.Web.UI.PageParserFilter.TotalNumberOfDependenciesAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает разрешенное синтаксическим анализатором страниц, максимальное число прямых и непрямых файловых зависимостей одной страницы.</summary>
        <value>Максимальное число прямых и непрямых файловых зависимостей одной страницы, разрешенных синтаксическим анализатором страниц. По умолчанию принимается значение 0, указывающее на отсутствие разрешенных зависимостей.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.TemplateParser> Класс отслеживает число прямых и косвенный файл зависимостей, он анализирует и если число превышает предел задается <xref:System.Web.UI.PageParserFilter> экземпляра, создается исключение.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.PageParserFilter.NumberOfDirectDependenciesAllowed" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.UI.PageParserFilter.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает виртуальный путь к странице, анализируемой в данный момент.</summary>
        <value>Виртуальный путь к странице ASP.NET.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PageParserFilter.VirtualPath%2A> Свойство не может `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>