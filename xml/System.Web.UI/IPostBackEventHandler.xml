<Type Name="IPostBackEventHandler" FullName="System.Web.UI.IPostBackEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df268f89cbfa260d54684089e319cd47819b0e79" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51910721" /></Metadata><TypeSignature Language="C#" Value="public interface IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type IPostBackEventHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет метод, который должен быть реализован ASP.NET серверными элементами управления для обработки событий обратной передачи.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы создать серверный элемент управления, который фиксирует сведения об отправке формы из браузера, необходимо реализовать этот интерфейс. Дополнительные сведения о том, как использовать этот интерфейс, см. в разделе [Server, обработка событий в страниц веб-форм ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
   
  
## Examples  
 В следующем примере кода определяется серверного настраиваемой кнопки элемента управления, который вызывает обратную передачу, собирает события обратной передачи с помощью <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> метода и вызывает `Click` событий на сервере.  
  
 [!code-csharp[Classic IPostBackEventHandler Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackEventHandler Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackEventHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackEventHandler Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Обработка событий сервера на веб-страниц ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="public void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit" Usage="iPostBackEventHandler.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Метод <see cref="T:System.String" />, который представляет необязательный аргумент события, передаваемый обработчику событий.</param>
        <summary>При реализации каким-либо классом серверный элемент управления подключается для обработки события, возникающего при передаче формы на сервер.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Страница передает значение `eventArgument` параметр `RaisePostBackEvent` метод элемента управления, который реализует <xref:System.Web.UI.IPostBackEventHandler> интерфейс. Этот элемент управления также предоставляет элемент HTML, который вызывает обратную передачу. Если элемент управления предоставляет клиентский сценарий для обратной передачи, аргумент из скрипта передается в `eventArgument` параметра. Если обратная передача вызвана простой операции, отправки `eventArgument` параметр `null`.  
  
 Этот метод предоставляет функциональные возможности для многих событий, реализуемых элементами управления HTML и веб-сервером.  
  
   
  
## Examples  
 В следующем примере кода определяется серверного настраиваемой кнопки элемента управления, который вызывает обратную передачу, собирает события обратной передачи с помощью <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> метода и вызывает `Click` событий на сервере.  
  
 [!code-csharp[Classic IPostBackEventHandler Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackEventHandler Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackEventHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackEventHandler Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Обработка событий сервера на веб-страниц ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>