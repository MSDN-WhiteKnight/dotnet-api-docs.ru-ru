<Type Name="PageStatePersister" FullName="System.Web.UI.PageStatePersister">
  <Metadata><Meta Name="ms.openlocfilehash" Value="221c40c806b2709ceb47c005e59947a1f6d712ee" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51914257" /></Metadata><TypeSignature Language="C#" Value="public abstract class PageStatePersister" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageStatePersister extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageStatePersister" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageStatePersister" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageStatePersister abstract" />
  <TypeSignature Language="F#" Value="type PageStatePersister = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет базовую функциональность для механизмов сохранения состояния представления ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTTP-запросов и ответов не учитывают состояние. Чтобы сохранить сведения о состоянии между запросами HTTP, можно сохранить серверные страницы ASP.NET <xref:System.Web.UI.Page> состояния. Это состояние, называемое состоянием представления, состоит из страницы и параметры управления и данных, страницы и элементы управления отображаются, как будто они являются теми же самыми элементами, которые пользователь видел и взаимодействовал при их последнего цикла обработки на сервер. Существует несколько механизмов для хранения состояния представления между последовательными запросами к той же странице. Абстрактный <xref:System.Web.UI.PageStatePersister> класс представляет базовый класс для этих механизмов хранения сведения.  
  
 — Это механизм сохранения состояния просмотра по умолчанию в ASP.NET для поддержания актуальности информации состояния как строка в кодировке Base64 в скрытом элементе HTML (элемент с `type` атрибут `"hidden"`) на странице. Страницы ASP.NET использует <xref:System.Web.UI.HiddenFieldPageStatePersister> объекта, чтобы выполнить это работать, используя <xref:System.Web.UI.IStateFormatter> экземпляр для сериализации и десериализации сведения о состоянии объекта. Кроме того, можно хранить состояния представления для страниц в <xref:System.Web.HttpContext.Session%2A> объекта на сервере, используя <xref:System.Web.UI.SessionPageStatePersister> класс для мобильных клиентов с ограниченной пропускной способностью и ресурсы. В некоторых случаях можно полностью отключить сохранение состояния представления. После этого, получается, что иногда страниц и элементов управления, основанные на сохранение состояния, могут работать некорректно. Дополнительные сведения о состоянии управления и представление состояния страницы см. в разделе [управлении](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 При создании элементов управления, можно хранить сведения о состоянии для элементов управления в <xref:System.Web.UI.Control.ViewState%2A> словаря, который является <xref:System.Web.UI.StateBag> объекта. Разработчик может получить состояние элемента управления через <xref:System.Web.UI.PageStatePersister.ControlState%2A> свойство. Назначить ключи и значения для <xref:System.Web.UI.Control.ViewState%2A> свойство и <xref:System.Web.UI.Page> выполняет сериализацию сведений о состоянии между запросами. Чтобы выполнить пользовательское состояние обработки в элементе управления, переопределите <xref:System.Web.UI.Control.LoadViewState%2A> и <xref:System.Web.UI.Control.SaveViewState%2A> методы. Все сведения о состоянии, которые хранятся в данном словаре теряются при отключении состояния представления разработчиком страницы. Чтобы избежать этого, в ASP.NET версии 2.0, важной информации о состоянии можно хранить в отдельном объекте, называемом состояние элемента управления. Состояние просмотра отключено разработчиком страницы не влияет на объект состояния элемента управления. Хранение сведений о состоянии в объекте состояния элемента управления требует, что элемент управления переопределения <xref:System.Web.UI.Control.LoadControlState%2A> и <xref:System.Web.UI.Control.SaveControlState%2A> методы и регистрацию для хранения сведений о состоянии в элемент управления состояние элемента управления каждый раз при инициализации элемента управления. Вы можете зарегистрировать элемент управления для использования состояния элемента управления путем переопределения <xref:System.Web.UI.Control.OnInit%2A> метод и вызвать <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> метод. Дополнительные сведения об использовании <xref:System.Web.UI.Control.ViewState%2A> свойства и состояния элемента управления при разработке элементов управления, см. в разделе [Разработка пользовательских серверных элементов управления ASP.NET](https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  
  
 Для сохранения состояния просмотра на клиенты, не поддерживающие существующий Просмотр механизмов сохранения состояния, вы можете расширить <xref:System.Web.UI.PageStatePersister> класса представить свои собственные методы сохранения состояния представления и адаптеры страницы можно использовать для настройки приложения ASP.NET для использования механизмов сохранения состояния различные представления, в зависимости от типа клиента, к которому предоставлении страницы. Классы, производные от <xref:System.Web.UI.PageStatePersister> класс должен переопределять абстрактного <xref:System.Web.UI.PageStatePersister.Save%2A> метод, чтобы сохранять состояние представления и состояние элемента управления в на постоянном носителе и переопределить <xref:System.Web.UI.PageStatePersister.Load%2A> метод для его извлечения. Если необходимо выполнить сериализацию состояния представления и состояние элемента управления в строку, можно использовать <xref:System.Web.UI.IStateFormatter> объекта, к которому осуществляется с помощью <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> свойство. Эффективно сериализует и десериализует сведения о состоянии объекта в строку в кодировке base 64. Можно также переопределить <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> свойство, которое предоставляет собственный механизм сериализации состояния объекта.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется создание <xref:System.Web.UI.PageStatePersister> объект, который сохраняет состояние представления и управления веб-сервера. `StreamPageStatePersister` Демонстрирует переопределение <xref:System.Web.UI.PageStatePersister.Load%2A> и <xref:System.Web.UI.PageStatePersister.Save%2A> методы для извлечения и сохранение представления информации о состоянии. Поскольку механизмов сохранения состояния связаны с адаптивной отрисовки и возможности клиента `MyPageAdapter` класс предоставляется для активации `StreamPageStatePersister` для приложения ASP.NET. Наконец, файл возможностей (с расширением BROWSER) браузера предоставляется для обеспечения `MyPageAdapter` адаптер для определенного класса клиентов (в данном случае веб-браузер по умолчанию).  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#1)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#1)]  
  
 В следующем примере кода демонстрируется создание <xref:System.Web.UI.Adapters.PageAdapter> класс, который возвращает экземпляр `StreamPageStatePersister`, который используется для сохранения состояния представления и управления для веб-страницу ASP.NET.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/mypageadapter.cs#5)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/mypageadapter.vb#5)]  
  
 Скомпилируйте эти два класса в сборке, можно использовать для запуска образца, используя следующую командную строку компилятора. Убедитесь, что скомпилированная сборка находится в каталоге \Bin в корне приложения ASP.NET.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/mypageadapter.cs#6)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/mypageadapter.vb#6)]  
  
 Наконец Чтобы включить `MyPageAdapter` адаптера, необходимо создать каталог с именем браузеров в корне приложения ASP.NET и включить файл обозревателя с информацией о конфигурации. `<refid>` Элемент в файле конфигурации указывает, что конфигурация переопределяет значения, указанные для браузера по умолчанию в файле конфигурации Default.browser. В этом примере `MyPageAdapter` используется веб-страниц ASP.NET (где обычно адаптер не используется).  
  
```  
<browsers>  
    <browser refid="Default" >  
        <controlAdapters>  
            <adapter   
                controlType="System.Web.UI.Page"                              
                adapterType="Samples.AspNet.CS.MyPageAdapter" />  
        </controlAdapters>  
    </browser>  
</browsers>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ObjectStateFormatter" />
    <altmember cref="T:System.Web.UI.LosFormatter" />
    <altmember cref="T:System.Web.UI.Pair" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageStatePersister (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageStatePersister(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageStatePersister : System.Web.UI.Page -&gt; System.Web.UI.PageStatePersister" Usage="new System.Web.UI.PageStatePersister page" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">Объект <see cref="T:System.Web.UI.Page" />, для которого создается механизм сохранения состояния просмотра.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.PageStatePersister" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="page" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ControlState">
      <MemberSignature Language="C#" Value="public object ControlState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ControlState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.ControlState" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ControlState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlState : obj with get, set" Usage="System.Web.UI.PageStatePersister.ControlState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект, представляющий данные, которые элементы управления, содержащиеся в текущем объекте <see cref="T:System.Web.UI.Page" />, используют для сохранения в HTTP-запросах к веб-серверу.</summary>
        <value>Объект, содержащий данные состояния представления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Состояние элемента управления — это объект, состоящий из критичных данных состояния представления, веб-сервера необходимых для работы, а также содержится в отдельном объекте из данных обычного состояния представления. Данные состояния элемента управления не влияет на состояние просмотра отключено в <xref:System.Web.UI.Page> уровня, но требует дополнительной реализации действия для использования. Дополнительные сведения об использовании <xref:System.Web.UI.Control.ViewState%2A> свойства и состояния элемента управления при разработке элементов управления, см. в разделе [Разработка пользовательских серверных элементов управления ASP.NET](https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  
  
   
  
## Examples  
 В следующем примере кода показано, как класс, производный от <xref:System.Web.UI.PageStatePersister> класса инициализирует <xref:System.Web.UI.PageStatePersister.ControlState%2A> свойство. В этом примере <xref:System.Web.UI.PageStatePersister.ControlState%2A> назначено свойству <xref:System.Web.UI.Pair.Second> поле <xref:System.Web.UI.Pair> объектов и сериализация с использованием <xref:System.Web.UI.ObjectStateFormatter> класса. Когда <xref:System.Web.UI.PageStatePersister.Load%2A> вызывается метод, <xref:System.Web.UI.ObjectStateFormatter> класс используется для десериализации состояния и управления сведения о состоянии представления и <xref:System.Web.UI.PageStatePersister.ControlState%2A> свойство инициализируется из полученных <xref:System.Web.UI.Pair> объекта <xref:System.Web.UI.Pair.Second> поля. Данный пример кода является частью большего примера для <xref:System.Web.UI.PageStatePersister> класса.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.Load" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Load();" />
      <MemberSignature Language="F#" Value="abstract member Load : unit -&gt; unit" Usage="pageStatePersister.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Переопределение производными классами для десериализации и загрузки сохраненной информации о состоянии при инициализации объектом <see cref="T:System.Web.UI.Page" /> собственной иерархии элементов управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от <xref:System.Web.UI.PageStatePersister> Реализуйте класс <xref:System.Web.UI.PageStatePersister.Load%2A> метод для инициализации <xref:System.Web.UI.PageStatePersister.ViewState%2A> и <xref:System.Web.UI.PageStatePersister.ControlState%2A> свойства из некоторых сохраненного формата.  
  
   
  
## Examples  
 В следующем примере кода показано, как класс, производный от <xref:System.Web.UI.PageStatePersister> класс реализует <xref:System.Web.UI.PageStatePersister.Load%2A> метод для загрузки состояния представления из постоянном носителе. `StreamPageStatePersister` Попытка чтения данных из потока. Она использует <xref:System.Web.UI.IStateFormatter> десериализовать данные состояния представления и инициализировать объект <xref:System.Web.UI.PageStatePersister.ViewState%2A> свойство и <xref:System.Web.UI.PageStatePersister.ControlState%2A> свойство, которое использует страницы для инициализации элементов управления. Данный пример кода является частью большего примера для <xref:System.Web.UI.PageStatePersister> класса.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Page">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Page Page { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page Page" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.Page" />
      <MemberSignature Language="VB.NET" Value="Protected Property Page As Page" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Page ^ Page { System::Web::UI::Page ^ get(); void set(System::Web::UI::Page ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Page : System.Web.UI.Page with get, set" Usage="System.Web.UI.PageStatePersister.Page" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект <see cref="T:System.Web.UI.Page" />, для которого создается механизм сохранения состояния представления.</summary>
        <value>Класс T:System.Workflow.ComponentModel.Design.WorkflowTheme	<see cref="T:System.Web.UI.Page" />, связанный с классом <see cref="T:System.Web.UI.PageStatePersister" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Web.UI.PageStatePersister.Page%2A> свойство для доступа к текущим <xref:System.Web.HttpContext> объекта.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public abstract void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.Save" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Save();" />
      <MemberSignature Language="F#" Value="abstract member Save : unit -&gt; unit" Usage="pageStatePersister.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Переопределение производными классами для сериализации сохраненных данных о состоянии при выгрузке из памяти объекта <see cref="T:System.Web.UI.Page" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от <xref:System.Web.UI.PageStatePersister> Реализуйте класс <xref:System.Web.UI.PageStatePersister.Save%2A> метод для сохранения содержимого <xref:System.Web.UI.PageStatePersister.ViewState%2A> и <xref:System.Web.UI.PageStatePersister.ControlState%2A> свойства на постоянном носителе.  
  
   
  
## Examples  
 В следующем примере кода показано, как класс, производный от <xref:System.Web.UI.PageStatePersister> класс реализует <xref:System.Web.UI.PageStatePersister.Save%2A> метод для сохранения состояния представления на постоянном носителе. `StreamPageStatePersister` Использует <xref:System.Web.UI.IStateFormatter> объект для сериализации содержимого <xref:System.Web.UI.PageStatePersister.ViewState%2A> свойство и <xref:System.Web.UI.PageStatePersister.ControlState%2A> свойство. Данный пример кода является частью большего примера для <xref:System.Web.UI.PageStatePersister> класса.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateFormatter">
      <MemberSignature Language="C#" Value="protected System.Web.UI.IStateFormatter StateFormatter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IStateFormatter StateFormatter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.StateFormatter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StateFormatter As IStateFormatter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::IStateFormatter ^ StateFormatter { System::Web::UI::IStateFormatter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StateFormatter : System.Web.UI.IStateFormatter" Usage="System.Web.UI.PageStatePersister.StateFormatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IStateFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.IStateFormatter" />, используемый для сериализации и десериализации данных о состоянии, содержащихся в свойствах <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> и <see cref="P:System.Web.UI.PageStatePersister.ControlState" /> во время вызова методов <see cref="M:System.Web.UI.PageStatePersister.Save" /> и <see cref="M:System.Web.UI.PageStatePersister.Load" />.</summary>
        <value>Экземпляр <see cref="T:System.Web.UI.IStateFormatter" />, используемый для сериализации и десериализации состояния объекта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно переопределить <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> свойство, чтобы предоставить собственное средство форматирования состояния представления.  
  
   
  
## Examples  
 В следующем примере кода показано, как класс, производный от <xref:System.Web.UI.PageStatePersister> класса обращений к <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> извлекаемого свойства <xref:System.Web.UI.ObjectStateFormatter> объект, который является реализацией по умолчанию из <xref:System.Web.UI.IStateFormatter> интерфейс для сериализации представления состояния и состояния элемента управления в поток. Данный пример кода является частью большего примера для <xref:System.Web.UI.PageStatePersister> класса.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="public object ViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.ViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ViewState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewState : obj with get, set" Usage="System.Web.UI.PageStatePersister.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект, представляющий данные, которые элементы управления, содержащиеся в текущем объекте <see cref="T:System.Web.UI.Page" />, используют для сохранения в HTTP-запросах к веб-серверу.</summary>
        <value>Объект, содержащий данные состояния представления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Состояние представления — это словарь данных состояния, веб-сервера управления необходимо собственной работы и визуализации. Обычно разработчики элементов управления к объекту состояния представления с помощью <xref:System.Web.UI.Control.ViewState%2A> свойство. Влияет на состояние при отключении состояния представления на <xref:System.Web.UI.Page> уровень и поэтому могут вести себя правильно в этих сценариях. Дополнительные сведения об использовании <xref:System.Web.UI.Control.ViewState%2A> и состояние элемента управления при разработке элементов управления, см. в разделе [Разработка пользовательских серверных элементов управления ASP.NET](https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  
  
   
  
## Examples  
 В следующем примере кода показано, как класс, производный от <xref:System.Web.UI.PageStatePersister> класса инициализирует <xref:System.Web.UI.PageStatePersister.ViewState%2A> свойство. В этом примере <xref:System.Web.UI.PageStatePersister.ViewState%2A> назначено свойству <xref:System.Web.UI.Pair.First> поле <xref:System.Web.UI.Pair> объектов и сериализация с использованием <xref:System.Web.UI.ObjectStateFormatter> объект, который является экземпляром объекта <xref:System.Web.UI.IStateFormatter> интерфейс. Когда <xref:System.Web.UI.PageStatePersister.Load%2A> вызывается метод, <xref:System.Web.UI.ObjectStateFormatter> интерфейс используется для десериализации сведений о состоянии представления и <xref:System.Web.UI.PageStatePersister.ViewState%2A> свойство инициализируется из полученных <xref:System.Web.UI.Pair> объекта <xref:System.Web.UI.Pair.First> поля. Данный пример кода является частью большего примера для <xref:System.Web.UI.PageStatePersister> класса.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>