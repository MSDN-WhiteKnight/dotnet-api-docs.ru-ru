<Type Name="IBindableTemplate" FullName="System.Web.UI.IBindableTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e671a0a3bc5d5304607355a02154bfbacb8a32e7" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51872072" /></Metadata><TypeSignature Language="C#" Value="public interface IBindableTemplate : System.Web.UI.ITemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindableTemplate implements class System.Web.UI.ITemplate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IBindableTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindableTemplate&#xA;Implements ITemplate" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindableTemplate : System::Web::UI::ITemplate" />
  <TypeSignature Language="F#" Value="type IBindableTemplate = interface&#xA;    interface ITemplate" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITemplate</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Предоставляет способ для ASP.NET элементов управления, связанных с данными, таких как <see cref="T:System.Web.UI.WebControls.DetailsView" /> и <see cref="T:System.Web.UI.WebControls.FormView" />, автоматически привязываться к ASP.NET элементам управления источниками данных внутри разделов шаблонного содержимого.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IBindableTemplate> Интерфейс предоставляет способ для элементов управления с привязкой к данным ASP.NET, такие как <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.GridView>, и <xref:System.Web.UI.WebControls.FormView>, для привязки данных, предоставленных элементом управления источником данных ASP.NET, такие как <xref:System.Web.UI.WebControls.ObjectDataSource> или <xref:System.Web.UI.WebControls.SqlDataSource>, когда элемент управления с привязкой к данным включает в себя шаблонного содержимого.  
  
> [!NOTE]
>  Разработчикам страниц не реализуют <xref:System.Web.UI.IBindableTemplate> интерфейс. Разработчики, создание пользовательских элементов управления с привязкой к данным может управлять <xref:System.Web.UI.IBindableTemplate> объектов в реализации <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> и <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> методы, но не реализуют собственные <xref:System.Web.UI.IBindableTemplate> объектов.  
  
 Элементы управления с привязкой к данным, такие как <xref:System.Web.UI.WebControls.GridView> обычно известно деревьев их дочернего элемента управления и можно таким образом привязки значений к ним, извлекать из них значения и передачи этих значений между элементом управления с привязкой к данным и элементу управления источником данных, каждый раз, когда происходит привязка данных . Тем не менее, если разработчик страницы определяет шаблонного содержимого для элемента управления с привязкой данных, дочерние элементы управления в шаблоне не отображаются для родительского элемента управления с привязкой к данным: родитель может визуализировать дочернего содержимого (так как элементы управления успешно себя визуализируют), но не может извлекать значения этих дочерних элементов управления для передачи управления источника связанных данных, insert, операции обновления или удаления. В сценариях привязки данных шаблонного содержимого является непрозрачным для родительского элемента управления с привязкой к данным. `Bind` Синтаксис делает возможным для элемента управления с привязкой к данным для извлечения значений из элемента управления с привязкой к данным внутри <xref:System.Web.UI.IBindableTemplate> экземпляра.  
  
 Привязка данных может быть односторонним или двусторонним. (Эти направления привязки определяются <xref:System.ComponentModel.BindingDirection> перечисления.) Односторонняя привязка данных — выполнить привязку данных в исходящем направлении, от управления источником данных для элемента управления с привязкой данных; Например любой сценарий считывания данных включает в себя одностороннюю привязку данных. Для односторонней привязки данных, можно использовать синтаксис односторонней привязки (`<%# Eval("fieldname") %>`) внутри шаблонного содержимого и не обязательно должны использовать синтаксиса двухсторонней привязки данных ASP.NET. Двухсторонней привязки данных описывает привязку данных для входящего трафика из элемента управления с привязкой к элементу управления источника данных. Автоматического редактирования, вставки и удаления сценарии, с использованием ASP.NET привязкой к данным и источников данных являются скриптов двусторонней привязки данных. Эти сценарии используют выражения привязки данных (`<%# Bind("fieldname") %>`). <xref:System.Web.UI.IBindableTemplate> Интерфейса и инфраструктура ASP.NET поддерживают автоматическое, декларативный двухстороннюю привязку между ASP.NET элементов управления источниками данных и шаблонного содержимого. Дополнительные сведения о синтаксисе и выражения привязки данных ASP.NET см. в разделе [привязка к базам данных](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742) и [Общие сведения о выражениях привязки данных](https://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 Чаще всего определяется декларативно шаблонного содержимого для элементов управления с привязкой к данным. В следующей таблице описаны процессы, наиболее часто используемые для привязки шаблонных данных к элементам управления с привязкой к данным.  
  
|Элемент управления с привязкой данных|Процесс|  
|-------------------------|-------------|  
|<xref:System.Web.UI.WebControls.DetailsView>|Элемент управления с привязкой к данным привязан к данным с помощью `DataSourceID` свойство элемента управления источником данных и содержимом шаблонов определено в <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> или <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> свойство.|  
|<xref:System.Web.UI.WebControls.GridView>|Элемент управления с привязкой к данным привязан к данным с помощью `DataSourceID` свойство элемента управления источником данных и содержимом шаблонов определено в <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> или <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> свойство. <xref:System.Web.UI.WebControls.GridView> Управления не поддерживает операции вставки.|  
|<xref:System.Web.UI.WebControls.FormView>|Элемент управления с привязкой к данным привязан к данным с помощью `DataSourceID` свойство и шаблонного содержимого определяется в <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>, или <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> свойство, или в <xref:System.Web.UI.WebControls.TemplateField> объекта.|  
  
 <xref:System.Web.UI.WebControls.DataList> И <xref:System.Web.UI.WebControls.Repeater> элементы управления не поддерживают автоматическое скриптов двусторонней привязки данных.  
  
 ASP.NET неявно создает <xref:System.Web.UI.IBindableTemplate> объекта при синтаксическом анализе шаблонного содержимого, который привязывает элемент управления источника данных ASP.NET в шаблоне. В частности, анализатор ASP.NET создает экземпляр класса <xref:System.Web.UI.CompiledBindableTemplateBuilder> класса при синтаксическом анализе шаблонного содержимого, которое использует синтаксис привязки данных ASP.NET и содержит серверные элементы управления ASP.NET, которые поддерживают привязку данных. Элементы управления сервера ASP.NET эти отмечаются <xref:System.ComponentModel.BindableAttribute> атрибута.  
  
 <xref:System.Web.UI.IBindableTemplate> Интерфейс определяет один метод <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>. Этот метод определяется для двусторонней привязки данных, так что элемента управления с привязкой данных могут автоматически извлечения пар "имя значение" из шаблонного содержимого и передавать их к элементу управления источником данных во время выполнения. На автоматическое связывание для успешного выполнения, имена полей, извлеченные из шаблонного содержимого, <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> метод должен соответствовать именам параметров в элемент управления источника связанных данных. Вызов разработчикам управлять <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> метод явным образом только в пределах их <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> или другой аналогичный метод пользовательского элемента управления с привязкой к данным.  
  
   
  
## Examples  
 В следующем примере кода показано, как <xref:System.Web.UI.WebControls.FormView> управления можно декларативно определить шаблонного содержимого, привязка к данным, предоставляемые <xref:System.Web.UI.WebControls.SqlDataSource> и отображать и изменять существующие записи. Анализатор ASP.NET выполняет синтаксический анализ шаблонного содержимого и создает <xref:System.Web.UI.IBindableTemplate> объекта во время выполнения, который может выполнить привязку значения из <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления в области привязки данных, определенных в шаблоне, как односторонние синтаксиса привязки данных ASP.NET (`<%# Eval("fieldname") %>`) и синтаксиса двухсторонней привязки данных (`<%# Bind("fieldname") %>`).  
  
> [!IMPORTANT]
>  Этот элемент управления содержит текстовое поле ввода данных пользователя, который является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ITemplate" />
    <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
    <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
    <altmember cref="T:System.ComponentModel.BindableAttribute" />
    <altmember cref="T:System.ComponentModel.BindingDirection" />
  </Docs>
  <Members>
    <Member MemberName="ExtractValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary ExtractValues (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.IOrderedDictionary ExtractValues(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExtractValues (container As Control) As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::IOrderedDictionary ^ ExtractValues(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member ExtractValues : System.Web.UI.Control -&gt; System.Collections.Specialized.IOrderedDictionary" Usage="iBindableTemplate.ExtractValues container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">Объект <see cref="T:System.Web.UI.Control" />, из которого извлекаются пары "имя—значение" и передаются элементом управления, связанным с данными, в элемент управления источника связанных данных при помощи скриптов двусторонней привязки данных.</param>
        <summary>При реализации классом извлекает внутри шаблонного содержимого набор пар "имя-значение" для значений, связанных с помощью синтаксиса двухсторонней привязки ASP.NET.</summary>
        <returns><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> пар "имя-значение". В этих парах имя представляет собой имя элемента управления внутри шаблонного содержимого, а значением является текущее значение свойства, связанное с помощью синтаксиса двухсторонней привязки данных ASP.NET.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> Метод должен соответствовать следующим правилам: 
— Если для заданного поля существует более одной привязки, используется последняя обнаруженная привязка.  
  
-Чтобы ссылаться на идентификатор элемента управления в <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> метода, элемент управления также должно быть указано свойство ID определяемых пользователем во время синтаксического анализа. Если идентификатор отсутствует, это приводит к ошибке синтаксического анализа.  
  
-Синтаксиса двухсторонней привязки данных ASP.NET допустимо только в <see cref="T:System.Web.UI.ITemplate" /> или <see cref="T:System.Web.UI.IBindableTemplate" /> свойства элемента управления с привязкой к данным.</para></block>
        <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
        <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
      </Docs>
    </Member>
  </Members>
</Type>