<Type Name="IDataSource" FullName="System.Web.UI.IDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8bd9799a83592c123c572fa408e6f968b54e2249" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46676706" /></Metadata><TypeSignature Language="C#" Value="public interface IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataSource" />
  <TypeSignature Language="F#" Value="type IDataSource = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Представляет абстрактный источник данных, к которому привязаны элементы управления, связанные с данными.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET поддерживает архитектуру привязки данных элемента управления, которая позволяет веб-сервера управления для привязки к данным согласованным образом. Элемент управления, которые привязаны к данным, называются элементы управления с привязкой данных и классы, облегчающие эту привязку, называются элементами управления источниками данных. Элементы управления источником данных может представлять любой источник данных: реляционной базы данных, файл, поток, бизнес-объект и т. д. Представления данных элемент управления источником данных в согласованное выполнение элементов управления с привязкой данных, независимо от источника или формат базовых данных.  
  
 Вы реализуете <xref:System.Web.UI.IDataSource> интерфейс необходимо реализовать собственный пользовательский элемент управления источника ASP.NET данных.  
  
 Любой класс, реализующий <xref:System.Web.UI.IDataSource> интерфейс является элемент управления источником данных. <xref:System.Web.UI.IDataSource> Интерфейс служит основой для всех источника данных ASP.NET элементов управления и определяет один из основных особенностей архитектуры привязки данных с помощью методов два: <xref:System.Web.UI.IDataSource.GetView%2A> метод и <xref:System.Web.UI.IDataSource.GetViewNames%2A> метод. Эта концепция в том, что все элементы управления источников данных поддерживают один или несколько именованных представлений данных. Объект представления источника данных аналогичен <xref:System.Data.DataView> абстракции в <xref:System.Data> пространство имен: можно привязать к данным, настраиваемое представление данных для сортировки, фильтрации и другие операции с данными, который определяет представление. По существу источник данных управления, ничего не делает больше, чем извлечения представлений данных.  
  
 Элемент управления источником данных может иметь один или несколько объектов представления источника связанных данных. Некоторые данные источника элементов управления, включая те, которые представляют реляционные базы данных, такой как <xref:System.Web.UI.WebControls.SqlDataSource> и <xref:System.Web.UI.WebControls.AccessDataSource>, поддерживают только одно представление. Другие данные источника элементов управления, включая элементы, такие как <xref:System.Web.UI.WebControls.SiteMapDataSource>, поддерживают множество представлений. Представление источника данных определяет возможности источника данных и операции, которые он поддерживает.  
  
 Таким образом, реализации элементов управления источниками данных <xref:System.Web.UI.IDataSource> интерфейс, поддержки одного или нескольких именованных представлений данных, они представляют и всегда поддерживают извлечение данных из источника данных, они представляют. Элементы управления источником данных всегда получают данные по требованию, например, когда `DataBind` вызывается для элемента управления с привязкой к данным.  
  
   
  
## Examples  
 В следующем примере кода показано, как класс может реализовывать методы, определенные <xref:System.Web.UI.IDataSource> интерфейс для предоставления данных к элементам управления с привязкой к данным. Элемент управления источником данных в этом примере выступает в качестве источника данных в файл с разделителями запятыми и может использоваться любым элементом управления с привязкой к данным для отображения данных в CSV-файл. Данный пример кода является частью большего примера для <xref:System.Web.UI.DataSourceControl> класса.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении элемента управления источниками данных, которое может некоторым образом повлиять на элементы управления, связанные с данными.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IDataSource.DataSourceChanged> Событие вызывается после изменения свойств элемента управления с привязкой к данным или данным таким способом, который влияет на привязки данных между элементом управления с привязкой к данным и его данные. Например, событие происходит, если файл с указанным именем свойства, такие как <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> изменении свойства, элемент управления источником данных на основе файлов.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.DataSourceView" Usage="iDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Имя извлекаемого представления.</param>
        <summary>Возвращает названное представление источника данных, связанное с элементом управления источника данных.</summary>
        <returns>Возвращает именованный <see cref="T:System.Web.UI.DataSourceView" />, связанный с <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы элементов управления источника данных может поддерживать один или несколько представлений базовых данных. Эти представления представлены экземплярами класса <xref:System.Web.UI.DataSourceView>. Представление источника данных определяет возможности элемента управления источником данных и выполняет все действия, необходимые для получения данных из базового хранилища данных и выполнения операций, таких как сортировка, вставка, удаление и обновление.  
  
 Элемент управления источником данных классы, реализующие <xref:System.Web.UI.IDataSource> реализуйте интерфейс <xref:System.Web.UI.IDataSource.GetView%2A> метод для возвращения строго типизированных просматривать объекты, связанные с классом.  
  
   
  
## Examples  
 В следующем примере кода показано, как класс элемента управления источника данных, который реализует <xref:System.Web.UI.IDataSource> интерфейс реализует <xref:System.Web.UI.IDataSource.GetView%2A> метода, возвращает строго типизированный экземпляр <xref:System.Web.UI.DataSourceView> класса. Так как элемент управления источником данных поддерживает только одно представление, он игнорирует имя и возвращает представление с именем представления по умолчанию. Данный пример кода является частью большего примера для <xref:System.Web.UI.DataSourceControl> класса.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; System.Collections.ICollection" Usage="iDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию имен, представляющих список объектов представления, связанных с интерфейсом <see cref="T:System.Web.UI.IDataSource" />.</summary>
        <returns>Объект <see cref="T:System.Collections.ICollection" />, содержащий имена представлений, связанных с элементом управления <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы элементов управления источника данных может поддерживать один или несколько именованных представлений базовых данных. <xref:System.Web.UI.IDataSource.GetViewNames%2A> Метод возвращает коллекцию имен представлений, в настоящее время связанный с экземпляром элемента управления источника данных. Вызывающие объекты могут прохода по коллекции можно просмотреть имена и получить отдельные <xref:System.Web.UI.DataSourceView> объекты с <xref:System.Web.UI.IDataSource.GetView%2A> метод.  
  
 Элемент управления источником данных классы, реализующие <xref:System.Web.UI.IDataSource> реализуйте интерфейс <xref:System.Web.UI.IDataSource.GetViewNames%2A> метод, чтобы вернуть коллекцию имен, представляющий все исходные данные просмотра объектов, связанных с классом элемента управления источником данных.  
  
   
  
## Examples  
 В следующем примере кода показано, как элемент управления источником данных, который реализует <xref:System.Web.UI.IDataSource> интерфейс реализует <xref:System.Web.UI.IDataSource.GetViewNames%2A> метода, возвращает <xref:System.Collections.ICollection> коллекцию имен. Так как источник данных поддерживает только одно представление, метод возвращает коллекцию из одного элемента с именем по умолчанию для представления. Данный пример кода является частью большего примера для <xref:System.Web.UI.DataSourceControl> класса.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
  </Members>
</Type>