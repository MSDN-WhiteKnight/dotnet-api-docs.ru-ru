<Type Name="BaseTemplateParser" FullName="System.Web.UI.BaseTemplateParser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="329970b6397347dc13786e4ee4aca787aeaf085a" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53394841" /></Metadata><TypeSignature Language="C#" Value="public abstract class BaseTemplateParser : System.Web.UI.TemplateParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseTemplateParser extends System.Web.UI.TemplateParser" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.BaseTemplateParser" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseTemplateParser&#xA;Inherits TemplateParser" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseTemplateParser abstract : System::Web::UI::TemplateParser" />
  <TypeSignature Language="F#" Value="type BaseTemplateParser = class&#xA;    inherit TemplateParser" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.TemplateParser</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Реализует синтаксический анализ шаблона ASP.NET для файлов шаблонов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.BaseTemplateParser> Класс предоставляет функциональные возможности средства синтаксического анализа для <xref:System.Web.UI.TemplateControl> и <xref:System.Web.UI.PageTheme> классы. Так как <xref:System.Web.UI.BaseTemplateParser> класс является абстрактным, экземпляр этого класса напрямую не создается.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <related type="Article" href="https://msdn.microsoft.com/library/a638e52e-eb7d-41be-948e-e0c4c3b9d0a4">Наборы шаблонов и шаблонные элементы управления</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseTemplateParser ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.BaseTemplateParser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseTemplateParser();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.BaseTemplateParser" />.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetReferencedType">
      <MemberSignature Language="C#" Value="protected Type GetReferencedType (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Type GetReferencedType(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.BaseTemplateParser.GetReferencedType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetReferencedType (virtualPath As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Type ^ GetReferencedType(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetReferencedType : string -&gt; Type" Usage="baseTemplateParser.GetReferencedType virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь элемента управления <see cref="T:System.Web.UI.Page" /> или <see cref="T:System.Web.UI.UserControl" />.</param>
        <summary>Компилирует и возвращает тип элемента управления <see cref="T:System.Web.UI.Page" /> или <see cref="T:System.Web.UI.UserControl" />, который указывается виртуальным путем.</summary>
        <returns>Тип страницы или пользовательского элемента управления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.UI.PageParserFilter> определен объект и его <xref:System.Web.UI.PageParserFilter.AllowVirtualReference%2A> свойство `false`, <xref:System.Web.UI.BaseTemplateParser.GetUserControlType%2A> вызывает метод <xref:System.Web.HttpException> исключение.  
  
 <xref:System.Web.UI.BaseTemplateParser.GetUserControlType%2A> Метод является оболочкой для <xref:System.Web.UI.BaseTemplateParser.GetReferencedType%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">В синтаксическом анализаторе запрещены виртуальные ссылки на ресурсы, указанные <paramref name="virtualPath" />.</exception>
        <forInternalUseOnly />
        <altmember cref="T:System.Web.UI.CompilationMode" />
        <altmember cref="M:System.Web.UI.PageParserFilter.GetCompilationMode(System.Web.UI.CompilationMode)" />
      </Docs>
    </Member>
    <Member MemberName="GetUserControlType">
      <MemberSignature Language="C#" Value="protected internal Type GetUserControlType (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Type GetUserControlType(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.BaseTemplateParser.GetUserControlType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetUserControlType (virtualPath As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; Type ^ GetUserControlType(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetUserControlType : string -&gt; Type" Usage="baseTemplateParser.GetUserControlType virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь объекта <see cref="T:System.Web.UI.UserControl" />.</param>
        <summary>Компилирует и возвращает тип объекта <see cref="T:System.Web.UI.UserControl" />, который указывается виртуальным путем.</summary>
        <returns>Тип пользовательского элемента управления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.UI.PageParserFilter> определен объект и его <xref:System.Web.UI.PageParserFilter.AllowVirtualReference%2A> свойство `false`, <xref:System.Web.UI.BaseTemplateParser.GetUserControlType%2A> вызывает метод <xref:System.Web.HttpException> исключение.  
  
 Кроме того Если <xref:System.Web.UI.UserControl> объект, на который ссылается виртуальный путь отмечен как элемент управления без компиляции <xref:System.Web.HttpException> будет создано исключение. Чтобы принудительно <xref:System.Web.UI.UserControl> должен компилироваться, задайте для атрибута режим компиляции в его [@ Control](https://msdn.microsoft.com/library/5fd824c2-7d70-4f8a-ab47-0c7e0e43578b) директиву <xref:System.Web.UI.CompilationMode.Always> поля. Чтобы настроить режим компиляции для страницы и элементы управления внутри приложения, задайте `compilationMode` атрибут [pages (схема параметров ASP.NET) элемент](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) в файле Web.config.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Объект <see cref="T:System.Web.UI.UserControl" />, указанный <paramref name="virtualPath" />, помечается как некомпилируемый.  
  
-или- 
В синтаксическом анализаторе запрещены виртуальные ссылки на объект <see cref="T:System.Web.UI.UserControl" />.</exception>
        <forInternalUseOnly />
        <altmember cref="T:System.Web.UI.UserControl" />
        <altmember cref="M:System.Web.UI.TemplateParser.ProcessError(System.String)" />
        <altmember cref="T:System.Web.UI.CompilationMode" />
        <altmember cref="T:System.Web.UI.PageParserFilter" />
      </Docs>
    </Member>
  </Members>
</Type>