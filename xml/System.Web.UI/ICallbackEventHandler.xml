<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fd0e63154b3f5a2354970a96bf74345816e7be7" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51901517" /></Metadata><TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <TypeSignature Language="F#" Value="type ICallbackEventHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Указывает, что элемент управления может быть целевым объектом события обратного вызова на сервере.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализуйте <xref:System.Web.UI.ICallbackEventHandler> интерфейс для любого пользовательского элемента управления, который должен получать события обратного вызова. Дополнительные сведения см. в разделе [реализация клиента обратные вызовы без обратной передачи](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).  
  
 Примеры элементов управления, реализующих <xref:System.Web.UI.ICallbackEventHandler> интерфейс включает <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, и <xref:System.Web.UI.WebControls.TreeView> элементов управления. Когда события обратного вызова предназначенного для элемента управления, который реализует <xref:System.Web.UI.ICallbackEventHandler> интерфейс, <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> метод вызывается для обработки события, передав в качестве параметра аргумента события и <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> метод возвращает результат обратного вызова.  
  
 Элементы управления, которые получают данные из элемента управления источника данных во время обратного вызова выполняется синхронно или асинхронно. Элементы управления ASP.NET, такие как <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, и <xref:System.Web.UI.WebControls.TreeView> синхронную реализацию. Синхронные обратные вызовы не мешают пользователя в обозревателе. В синхронном режиме может выполняться лишь один ответный вызов одновременно, со последнего обратного вызова более высокий приоритет. При реализации веб-элемент управления для поддержки асинхронного поведения несколько обратных вызовов могут возникать одновременно. Дополнительные сведения об асинхронном программировании, см. в разделе [событий based Asynchronous Pattern (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).  
  
 Можно указать, отображается ли обратного вызова событий, поступающих из пользовательского интерфейса путем реализации управления <xref:System.Web.UI.ICallbackEventHandler> интерфейс проверяются. Проверка событий является соображений безопасности рекомендуется. Тем не менее для повышения производительности можно отключить его. Для контроля событий выполняется ли проверка на события обратного вызова, задайте `enableEventValidation` атрибут [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) директива или `enableEventValidation` атрибут [элемент (схема параметров ASP.NET)pages](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) файла Web.config. Если задать <xref:System.Web.UI.Page.EnableEventValidation%2A> свойства в коде, задать его в `Page_Init` этап обработки страницы. Дополнительные сведения о безопасности событий оптимального соотношения производительностью, см. в разделе [Общие сведения о производительности ASP.NET](https://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string" Usage="iCallbackEventHandler.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает результаты события обратного вызова, предназначенного для элемента управления.</summary>
        <returns>Результат обратного вызова.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исключения, возникшие в <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> не помешает <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> из вызываемой и возвращения результата. Чтобы предотвратить <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> возвращали результат, установить флаг, при возникновении исключения в <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> и возвращается пустая строка из <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit" Usage="iCallbackEventHandler.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Строка, которая предоставляет аргумент события, передаваемый обработчику событий.</param>
        <summary>Обработка события обратного вызова, предназначенного для элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда `null` используется как параметр аргумента события, сериализуется строка «null» и отправленные обратно на сервер. Поскольку нет способа провести различие между `null` и «null», старайтесь не использовать `null` параметров аргумента с обратными вызовами.  
  
 Исключения, возникшие в <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> не помешает <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> из вызываемой и возвращения результата. Чтобы предотвратить <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> возвращали результат, установить флаг, при возникновении исключения в <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> и возвращается пустая строка из <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>