<Type Name="EncoderFallback" FullName="System.Text.EncoderFallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d3210b00d0c4bf4cc264c98a97fc960e96d0eaca" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52379119" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EncoderFallback extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallback" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallback abstract" />
  <TypeSignature Language="F#" Value="type EncoderFallback = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет механизм обработки ошибок, называемый резервным вариантом, для входного символа, который не может быть преобразован в выходную последовательность закодированных байтов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Кодирование сопоставляет символ Юникода в закодированную последовательность байтов. Определенной кодировке, представленный типом, который является производным от <xref:System.Text.Encoding> класса. В частности, символ кодируется в последовательность байтов, вызвав тип кодировки <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> метода, а также последовательность байтов декодируется в массив символов или строку путем вызова <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> или <xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType> метод.  
  
 Операции кодирования может завершиться ошибкой, если входной символ не может быть представленными этими кодами. Например <xref:System.Text.ASCIIEncoding> объект не удается кодировать символ которого значение кодовой точки Юникода находится вне диапазона от U + 0000 до U + 007F.  
  
 Не удается выполнить преобразование кодировки, .NET Framework предоставляет механизм обработки ошибок, называемый резервным вариантом. Ваше приложение может использовать предопределенный кодировщик резервные варианты .NET Framework, или она может создать пользовательские резерв кодировщика, производный от <xref:System.Text.EncoderFallback> и <xref:System.Text.EncoderFallbackBuffer> классы.  
  
 <xref:System.Text.EncoderFallback> и <xref:System.Text.EncoderFallbackBuffer> базовые классы для всех кодируются резервный обработчиков в платформе .NET Framework. Они поддерживают следующие три типа возврата механизмов обработки:  
  
-   Наилучшего, который сопоставляется с допустимыми символами Юникода, которые не удается закодировать приблизительный эквивалент. Например, наилучшего резервному обработчику для <xref:System.Text.ASCIIEncoding> класс может сопоставить Æ (U + 00 C 6) AE (U + 0041 + U + 0045). Наилучшее резервному обработчику может также быть реализован для транслитерации одну букву (например, кириллица) на другой (например, Latin или римские цифры). .NET Framework не поддерживает любой общедоступный наилучшего резервный реализаций.  
  
-   Резервную стратегию, замены, которое заменяет каждый символ, который не может быть закодирован с использованием заранее определенной строки. .NET Framework предоставляет предопределенные замены резервному обработчику. <xref:System.Text.EncoderReplacementFallback> Класс заменяет каждая последовательность байтов, который не удается декодировать символ вопросительного знака ("?», или U + 003F) или замещающий символ (U + FFFD). Строка замены можно настроить, указав замены в вызове <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> конструктор. После замены строки операции кодирования продолжает преобразование оставшейся части входных данных.  
  
-   Резервная стратегия исключения, который создает исключение, когда символ не может быть закодирован. .NET Framework предоставляет резервному обработчику предопределенных исключений. <xref:System.Text.EncoderExceptionFallback> Класса вызывает <xref:System.Text.EncoderFallbackException> когда обнаружен недопустимый символ, и завершает операцию кодирования.  
  
 Если вы решили реализовать пользовательское решение, необходимо переопределить следующие абстрактные члены класса <xref:System.Text.EncoderFallback> класса:  
  
-   <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> Метод, который возвращает экземпляр класса, производного от <xref:System.Text.EncoderFallbackBuffer>. В зависимости от типа резервному обработчику, которую вы разрабатываете <xref:System.Text.EncoderFallbackBuffer> реализация отвечает, для выполнения сопоставления или замены, или для создания исключения.  
  
-   <xref:System.Text.EncoderFallback.MaxCharCount%2A> Свойство, которое возвращает максимальное число символов, которые могут возвращать реализацию резервной стратегии. Для возврата обработчик исключений его значение должно быть равно нулю.  
  
 Дополнительные сведения о кодирования, декодирование и стратегий резервирования, см. в разделе [кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallbackBuffer" />
    <altmember cref="T:System.Text.EncoderReplacementFallback" />
    <altmember cref="T:System.Text.EncoderExceptionFallback" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md">Кодировки в .NET Framework</related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Cyrillic-to-Roman-f7e88b29">Пример: Кириллица со служебной программой транслитерации римские цифры</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallback.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallback();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.EncoderFallback" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFallbackBuffer">
      <MemberSignature Language="C#" Value="public abstract System.Text.EncoderFallbackBuffer CreateFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.EncoderFallbackBuffer CreateFallbackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallback.CreateFallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateFallbackBuffer () As EncoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::EncoderFallbackBuffer ^ CreateFallbackBuffer();" />
      <MemberSignature Language="F#" Value="abstract member CreateFallbackBuffer : unit -&gt; System.Text.EncoderFallbackBuffer" Usage="encoderFallback.CreateFallbackBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При переопределении в производном классе инициализирует новый экземпляр класса <see cref="T:System.Text.EncoderFallbackBuffer" />.</summary>
        <returns>Объект, предоставляющий резервный буфер для кодировщика.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает объект, производный от <xref:System.Text.EncoderFallbackBuffer> , несет ответственность за выполнение операции резервирования. Например, из предварительно определенных <xref:System.Text.EncoderFallback> реализации в .NET Framework, <xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType> возвращает <xref:System.Text.EncoderReplacementFallbackBuffer> объекта и <xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType> возвращает метод <xref:System.Text.EncoderExceptionFallbackBuffer> объекта.  
  
 <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> Метод вызывается кодировщиком, когда он встречает первый символ, который не удается закодировать. <xref:System.Text.EncoderFallbackBuffer> Объекта, возвращаемого этим методом содержит реализацию резервной стратегии и возвращает массив байтов, который заменяет символ или символы, которые не удалось закодировать.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.DecoderFallbackBuffer" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md">Кодировки в .NET Framework</related>
      </Docs>
    </Member>
    <Member MemberName="ExceptionFallback">
      <MemberSignature Language="C#" Value="public static System.Text.EncoderFallback ExceptionFallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncoderFallback ExceptionFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.ExceptionFallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExceptionFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncoderFallback ^ ExceptionFallback { System::Text::EncoderFallback ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionFallback : System.Text.EncoderFallback" Usage="System.Text.EncoderFallback.ExceptionFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект, который создает исключение, если входной символ не может быть закодирован.</summary>
        <value>Тип, производный от класса <see cref="T:System.Text.EncoderFallback" />. Значение объекта по умолчанию равно <see cref="T:System.Text.EncoderExceptionFallback" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharCount">
      <MemberSignature Language="C#" Value="public abstract int MaxCharCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCharCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.MaxCharCount" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MaxCharCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MaxCharCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharCount : int" Usage="System.Text.EncoderFallback.MaxCharCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении в производном классе возвращает максимальное число символов, которые могут быть возвращены текущим объектом <see cref="T:System.Text.EncoderFallback" />.</summary>
        <value>Максимальное число символов, которые может вернуть текущий объект <see cref="T:System.Text.EncoderFallback" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для возврата обработчик исключений это свойство должно возвращать нуль.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacementFallback">
      <MemberSignature Language="C#" Value="public static System.Text.EncoderFallback ReplacementFallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncoderFallback ReplacementFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.ReplacementFallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ReplacementFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncoderFallback ^ ReplacementFallback { System::Text::EncoderFallback ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplacementFallback : System.Text.EncoderFallback" Usage="System.Text.EncoderFallback.ReplacementFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект, выводящий замещающую строку вместо входного символа, который не может быть закодирован.</summary>
        <value>Тип, производный от класса <see cref="T:System.Text.EncoderFallback" />. Значением по умолчанию является объект <see cref="T:System.Text.EncoderReplacementFallback" />, замещающий неизвестные входные символы символом ЗНАКА ВОПРОСА ("?", U+003F).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>