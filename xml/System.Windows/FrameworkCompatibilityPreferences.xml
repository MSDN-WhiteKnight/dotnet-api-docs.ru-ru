<Type Name="FrameworkCompatibilityPreferences" FullName="System.Windows.FrameworkCompatibilityPreferences">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eeed517dac3189f9a8422b1c6b47b621e0e100fe" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52596280" /></Metadata><TypeSignature Language="C#" Value="public static class FrameworkCompatibilityPreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed FrameworkCompatibilityPreferences extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FrameworkCompatibilityPreferences" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkCompatibilityPreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkCompatibilityPreferences abstract sealed" />
  <TypeSignature Language="F#" Value="type FrameworkCompatibilityPreferences = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Содержит свойства, которые определяют поведение приложения относительно возможностей WPF, которые находятся в сборке PresentationFramework.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AreInactiveSelectionHighlightBrushKeysSupported">
      <MemberSignature Language="C#" Value="public static bool AreInactiveSelectionHighlightBrushKeysSupported { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AreInactiveSelectionHighlightBrushKeysSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AreInactiveSelectionHighlightBrushKeysSupported { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AreInactiveSelectionHighlightBrushKeysSupported : bool with get, set" Usage="System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, должно ли приложение использовать свойства <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> и <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> для цветов неактивных выделенных элементов.</summary>
        <value><see langword="true" />, если приложение должно использовать свойства <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> и <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> для цветов неактивных выбранных элементов; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение по умолчанию этого свойства зависит от того, какая версия WPF, для которых предназначено приложение.  Если приложение предназначено для WPF 4.0 или более ранних версиях значение по умолчанию — `false`.  Если приложение предназначено для WPF 4.5, по умолчанию используется `true`.  Если это свойство используется для изменения поведения WPF, необходимо изменить значение свойства на раннем этапе существования приложения, например в конструкторе класса, который наследует от приложения.  После считывания значение невозможно изменить его снова.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepTextBoxDisplaySynchronizedWithTextProperty">
      <MemberSignature Language="C#" Value="public static bool KeepTextBoxDisplaySynchronizedWithTextProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property KeepTextBoxDisplaySynchronizedWithTextProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool KeepTextBoxDisplaySynchronizedWithTextProperty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepTextBoxDisplaySynchronizedWithTextProperty : bool with get, set" Usage="System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, должен ли привязанный к данным <see cref="T:System.Windows.Controls.TextBox" /> отображать строку, идентичную значению источника его свойства <see cref="P:System.Windows.Controls.TextBox.Text" /></summary>
        <value><see langword="true" />, если привязанный к данным <see cref="T:System.Windows.Controls.TextBox" /> должно отображать строку, идентичную значению источника его свойства <see cref="P:System.Windows.Controls.TextBox.Text" />; в противном случае — <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение по умолчанию этого свойства зависит от того, какая версия WPF, для которых предназначено приложение.  Если приложение предназначено для WPF 4.0 или более ранних версиях значение по умолчанию — `false`.  Если приложение предназначено для WPF 4.5, по умолчанию используется `true`.  Если это свойство используется для изменения поведения WPF, необходимо изменить значение свойства на раннем этапе существования приложения, например в конструкторе класса, который наследует от приложения.  После считывания значение невозможно изменить его снова.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldThrowOnCopyOrCutFailure">
      <MemberSignature Language="C#" Value="public static bool ShouldThrowOnCopyOrCutFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ShouldThrowOnCopyOrCutFailure" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ShouldThrowOnCopyOrCutFailure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ShouldThrowOnCopyOrCutFailure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldThrowOnCopyOrCutFailure : bool with get, set" Usage="System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, возникает ли в результате сбоя операции копирования или вырезания в экземпляре класса <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> исключение <see cref="T:System.Runtime.InteropServices.ExternalException" />.</summary>
        <value>Значение <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" />, если в результате сбоя операции копирования или вырезания в экземпляре класса <see cref="T:System.Runtime.InteropServices.ExternalException" /> возникает исключение <see langword="true" />. В противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сбое операции с буфером обмена, например с **HRESULT 0x800401D0 (CLIPBRD_E_CANT_OPEN)** ошибки, соответствующий <xref:System.Runtime.InteropServices.ExternalException> (это разновидность ExternalException) создается исключение.  
  
 Так как Win32 `OpenClipboard` API действует глобально, грамотно сконструированные приложения должны вызывать соответствующий `CloseClipboard` API сразу же после завершения операции с буфером обмена. В противном случае для доступа к функции буфера обмена невозможно другим приложениям, выполняемым в одном сеансе.  
  
 В WPF такие отказ доступа в буфер обмена обычно игнорируется без уведомления. Тем не менее, можно выбрать приложения для получения `ExternalException` в случае сбоя, задав <xref:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure%2A> флаг `true`. Тем не менее, предусмотренной для получения исключения также требуется в приложении для обработки <xref:System.Windows.Input.ApplicationCommands.Cut%2A> и <xref:System.Windows.Input.ApplicationCommands.Copy%2A> команды RoutedUICommand через <xref:System.Windows.Input.CommandBinding>, а затем применить эту привязку ко всем элементам управления класса TextBoxBase (<xref:System.Windows.Controls.TextBox> и <xref:System.Windows.Controls.RichTextBox>) в приложение. Приложение должно гарантировать обработки ExternalExceptions, полученный в результате операции копирования и вырезания в обработчике Executed CommandBinding.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>