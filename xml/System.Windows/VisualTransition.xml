<Type Name="VisualTransition" FullName="System.Windows.VisualTransition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="199554768291e48a2d9515e583ff0ed3d8ffe263" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55329590" /></Metadata><TypeSignature Language="C#" Value="public class VisualTransition : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualTransition extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualTransition" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualTransition&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualTransition : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualTransition = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет визуальное поведение, имеющее место при переходе элемента управления из одного состояния в другое.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Визуальное поведение элемента управления можно указать, когда он переходит между состояниями, добавив <xref:System.Windows.VisualTransition> объектов. При создании <xref:System.Windows.VisualTransition>, вы указываете одну или несколько из следующих:  
  
-   Время, необходимое для перехода между состояниями, задав <xref:System.Windows.VisualTransition.GeneratedDuration%2A> свойство.  
  
-   Дополнительные изменения внешнего вида элемента управления, возникающих во время перехода, задав <xref:System.Windows.VisualTransition.Storyboard%2A> свойство.  
  
-   Когда <xref:System.Windows.VisualTransition> применяется, задав <xref:System.Windows.VisualTransition.To%2A> и <xref:System.Windows.VisualTransition.From%2A> свойства.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Windows.VisualTransition> , указывающий, что когда пользователь перемещает указатель мыши элемента управления, границы элемента управления изменяется на синий, затем на желтый и затем на черный в течение полутора секунд. Полный пример см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualTransition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualTransition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.VisualTransition" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public string From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string From" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ From { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.From : string with get, set" Usage="System.Windows.VisualTransition.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя визуального состояния <see cref="T:System.Windows.VisualState" />, из которого переходит элемент управления.</summary>
        <value>Имя визуального состояния <see cref="T:System.Windows.VisualState" />, из которого переходит элемент управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualTransition.From%2A> Свойство является необязательным. Объект <xref:System.Windows.VisualTransition> можно ограничить только определенными состояниями или его можно применять в любое время переходы между состояниями элемента управления. Ограничивается <xref:System.Windows.VisualTransition> применяется, задав <xref:System.Windows.VisualTransition.To%2A> и <xref:System.Windows.VisualTransition.From%2A> свойства. В таблице ниже приведено описание уровней ограничений от наибольшего до наименьшего.  
  
|Тип ограничения|Состояние, из которого выполняется переход|Состояние, в которое выполняется переход|  
|-------------------------|-------------------|-----------------|  
|Из указанного состояния в другое указанное состояние|Имя <xref:System.Windows.VisualState>|Имя <xref:System.Windows.VisualState>|  
|Из любого состояния в указанное состояние|Не задано|Имя <xref:System.Windows.VisualState>|  
|Из указанного состояния в любое состояние|Имя <xref:System.Windows.VisualState>|Не задано|  
|Из любого состояния в любое другое состояние|Не задано|Не задано|  
  
 Может иметь несколько <xref:System.Windows.VisualTransition> объекты в <xref:System.Windows.VisualStateGroup> , ссылающиеся на том же состоянии, но они будут использоваться в порядке, в предыдущей таблице.  
  
 Это поведение можно изменить, создав новый класс, наследуемый от <xref:System.Windows.VisualStateManager> и переопределение <xref:System.Windows.VisualStateManager.GoToStateCore%2A> метод.  
  
   
  
## Examples  
 В следующем примере создается два <xref:System.Windows.VisualTransition> объектов. Когда элемент управления переходит из `Pressed` состояние `MouseOver` состояние, <xref:System.Windows.VisualTransition> , содержащую одновременно <xref:System.Windows.VisualTransition.From%2A> и <xref:System.Windows.VisualTransition.To%2A> используется набор. Когда элемент управления переходит из состояния, отличного от `Pressed`, в состояние `MouseOver`, используется другой объект.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration GeneratedDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration GeneratedDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration GeneratedDuration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedDuration : System.Windows.Duration with get, set" Usage="System.Windows.VisualTransition.GeneratedDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DurationConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает время, которое занимает переход из одного состояния в другое.</summary>
        <value>Время, которое занимает переход из одного состояния в другое.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно указать, сколько времени занимает переход, задав <xref:System.Windows.VisualTransition.GeneratedDuration%2A> свойство. При задании <xref:System.Windows.VisualTransition.GeneratedDuration%2A> свойство, указывается время, необходимое для перехода произойти.  
  
   
  
## Examples  
 В следующем примере указывается, что элемент управления принимает вторую половину в `MouseOver` состояние. Полный пример см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#MouseOverTransition](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#mouseovertransition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedEasingFunction">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedEasingFunction As IEasingFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::IEasingFunction ^ GeneratedEasingFunction { System::Windows::Media::Animation::IEasingFunction ^ get(); void set(System::Windows::Media::Animation::IEasingFunction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedEasingFunction : System.Windows.Media.Animation.IEasingFunction with get, set" Usage="System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.IEasingFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает настраиваемую математическую формулу, используемую для перехода между состояниями.</summary>
        <value>Настраиваемая математическая формула, используемая для перехода между состояниями.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно задать <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> свойство, чтобы указать способ, переход происходит. Например можно указать функцию плавности для ускорения или замедления перехода. Дополнительные сведения см. в разделе [функции плавности](~/docs/framework/wpf/graphics-multimedia/easing-functions.md).  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Windows.VisualTransition> , вызывающую <xref:System.Windows.Shapes.Rectangle> для перемещения по вертикали, когда пользователь нажимает кнопку мыши над <xref:System.Windows.Controls.Canvas>. В примере задается <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> свойства <xref:System.Windows.Media.Animation.BounceEase> объекта, чтобы вызвать <xref:System.Windows.Shapes.Rectangle> для скачками при достижении места назначения. <xref:System.Windows.VisualTransition> , Используемый, когда пользователь отпускает кнопку имеет другой <xref:System.Windows.Media.Animation.BounceEase> объекта, чтобы вызвать <xref:System.Windows.Shapes.Rectangle> туда и обратно до возвращения в исходное положение.  
  
 [!code-xaml[VSMCustomControl#VSMEasingFunction](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmeasingfunction)]  
  
 В следующем примере показан обработчик событий для <xref:System.Windows.UIElement3D.MouseDown> и <xref:System.Windows.UIElement.MouseUp> события. В примере вызывается <xref:System.Windows.VisualStateManager.GoToElementState%2A> метод, чтобы изменить <xref:System.Windows.VisualState> части холста.  
  
 [!code-csharp[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#vsmeasingfunctionlogic)]
 [!code-vb[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#vsmeasingfunctionlogic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualTransition.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает раскадровку <see cref="T:System.Windows.Media.Animation.Storyboard" />, используемую при осуществлении перехода.</summary>
        <value>Раскадровка <see cref="T:System.Windows.Media.Animation.Storyboard" />, используемая при осуществлении перехода.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Windows.VisualTransition> содержит <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.Storyboard> запускает в любое время <xref:System.Windows.VisualTransition> применяется. Например, если вы хотите, чтобы границы <xref:System.Windows.Controls.Button> для изменения цветов, когда пользователь перемещает указатель мыши его, можно создать <xref:System.Windows.VisualTransition> с <xref:System.Windows.Media.Animation.Storyboard> изменяет фона кнопки.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Windows.VisualTransition> , указывающий, что когда пользователь перемещает указатель мыши элемента управления, границы элемента управления изменяется на синий, затем на желтый и затем на черный в течение полутора секунд. Полный пример см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public string To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string To" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ To { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.To : string with get, set" Usage="System.Windows.VisualTransition.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя состояния <see cref="T:System.Windows.VisualState" />, в которое осуществляется переход.</summary>
        <value>Имя действия <see cref="T:System.Windows.VisualState" />, к которому должен быть осуществлен переход.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualTransition.To%2A> Свойство является необязательным. Объект <xref:System.Windows.VisualTransition> можно ограничить только определенными состояниями или его можно применять в любое время переходы между состояниями элемента управления. Ограничивается <xref:System.Windows.VisualTransition> применяется, задав <xref:System.Windows.VisualTransition.To%2A> и <xref:System.Windows.VisualTransition.From%2A> свойства. В таблице ниже приведено описание уровней ограничений от наибольшего до наименьшего.  
  
|Тип ограничения|Состояние, из которого выполняется переход|Состояние, в которое выполняется переход|  
|-------------------------|-------------------|-----------------|  
|Из указанного состояния в другое указанное состояние|Имя <xref:System.Windows.VisualState>|Имя <xref:System.Windows.VisualState>|  
|Из любого состояния в указанное состояние|Не задано|Имя <xref:System.Windows.VisualState>|  
|Из указанного состояния в любое состояние|Имя <xref:System.Windows.VisualState>|Не задано|  
|Из любого состояния в любое другое состояние|Не задано|Не задано|  
  
 Может иметь несколько <xref:System.Windows.VisualTransition> объекты в <xref:System.Windows.VisualStateGroup> , ссылающиеся на том же состоянии, но они будут использоваться в порядке, в предыдущей таблице.  
  
 Это поведение можно изменить, создав новый класс, наследуемый от <xref:System.Windows.VisualStateManager> и переопределение <xref:System.Windows.VisualStateManager.GoToStateCore%2A> метод.  
  
   
  
## Examples  
 В следующем примере создается два <xref:System.Windows.VisualTransition> объектов. Когда элемент управления переходит из `Pressed` состояние `MouseOver` состояние, <xref:System.Windows.VisualTransition> , содержащую одновременно <xref:System.Windows.VisualTransition.From%2A> и <xref:System.Windows.VisualTransition.To%2A> используется набор. Когда элемент управления переходит из состояния, отличного от `Pressed`, в состояние `MouseOver`, используется другой объект.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>