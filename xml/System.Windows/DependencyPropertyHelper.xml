<Type Name="DependencyPropertyHelper" FullName="System.Windows.DependencyPropertyHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a92c758627e8518b493edf17e3bc3f08b388edc5" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57962346" /></Metadata><TypeSignature Language="C#" Value="public static class DependencyPropertyHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DependencyPropertyHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyPropertyHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type DependencyPropertyHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет один вспомогательный метод (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />), который сообщает данные об источнике свойства системы для действительного значения свойства зависимостей.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Системы свойств является довольно сложной задачей и зависит от рационализации значения, которые потенциально поступают из различных источников в соответствии с установленным приоритетом определения значений. Так как эти источники потенциально поступают из кода среды выполнения, компилированной разметки или даже из параметров пользователя во время выполнения, может быть полезно знать точно, какой участник в системе значение свойства зависимостей установить значение, при вызове <xref:System.Windows.DependencyObject.GetValue%2A>во время выполнения по этому свойству. Если значение получено из другого источника, не предназначены, может потребоваться настроить некоторые аспекты приложения. Источник значения могут быть стиль, тема, локальное значение, анимации, привязки или значение на основе времени выполнения, например параметры системы через темы или системных ресурсов. Дополнительные сведения см. в разделе [Приоритет значений свойств зависимостей](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).  
  
 Другой механизм, содержащий сведения об свойство в целом, а не с определенным экземпляром свойство объекта, — это метаданные свойства. Метаданные свойства поиска, вызвав <xref:System.Windows.DependencyProperty.GetMetadata%2A> и изучив возвращенного <xref:System.Windows.PropertyMetadata> (или один из нескольких возможных производных классов, приводимым к возвращаемое свойство метаданных).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetValueSource">
      <MemberSignature Language="C#" Value="public static System.Windows.ValueSource GetValueSource (System.Windows.DependencyObject dependencyObject, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.ValueSource GetValueSource(class System.Windows.DependencyObject dependencyObject, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::ValueSource GetValueSource(System::Windows::DependencyObject ^ dependencyObject, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="static member GetValueSource : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.ValueSource" Usage="System.Windows.DependencyPropertyHelper.GetValueSource (dependencyObject, dependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ValueSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Элемент, содержащий <paramref name="dependencyProperty" /> для сообщения информации.</param>
        <param name="dependencyProperty">Идентификатор для свойства зависимостей для сообщения информации.</param>
        <summary>Возвращает структуру, сообщающую различные метаданные и характеристики системы свойств указанного свойства зависимостей в конкретном <see cref="T:System.Windows.DependencyObject" />.</summary>
        <returns>Структура <see cref="T:System.Windows.ValueSource" />, сообщающая определенную информацию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод следует вызывать в контексте, таким образом, что последние участники определения значения свойств могут воздействовать на свойство. К примеру привязки может не быть активным в свойстве пока загружаются все элементы участника в дереве элементов и асинхронной привязки распространяется и подключен объект источника привязки. Аналогичным образом включая все необходимые Тематические словари ресурсов должны быть доступны.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.ValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsTemplatedValueDynamic">
      <MemberSignature Language="C#" Value="public static bool IsTemplatedValueDynamic (System.Windows.DependencyObject elementInTemplate, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTemplatedValueDynamic(class System.Windows.DependencyObject elementInTemplate, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTemplatedValueDynamic(System::Windows::DependencyObject ^ elementInTemplate, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="static member IsTemplatedValueDynamic : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; bool" Usage="System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic (elementInTemplate, dependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementInTemplate" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="elementInTemplate">Элемент, который относится к экземпляру шаблона.</param>
        <param name="dependencyProperty">Свойство зависимостей.</param>
        <summary>Указывает, относится ли указанный элемент к экземпляру шаблона, определяющего значение для указанного свойства, которое может изменяться во время выполнения на основе изменений в другом месте.</summary>
        <returns><see langword="true" />, если <paramref name="elementInTemplate" /> относится к экземпляру шаблона, определяющего значение для указанного свойства, которое может изменяться во время выполнения на основе изменений в другом месте; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Примеры значений, которые могут изменяться во время выполнения на основе изменений в другом месте — это значения, заданные <xref:System.Windows.Data.Binding>, <xref:System.Windows.TemplateBindingExtension> и <xref:System.Windows.DynamicResourceExtension> объектов.

Этот метод предоставляет более подробные сведения в случаях, где значение <xref:System.Windows.ValueSource.BaseValueSource?displayProperty=nameWithType> свойство <xref:System.Windows.BaseValueSource.ParentTemplate?displayProperty=nameWithType>.
Сведения, в первую очередь использования средств диагностики.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>