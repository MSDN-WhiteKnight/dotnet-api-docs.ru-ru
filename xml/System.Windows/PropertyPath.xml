<Type Name="PropertyPath" FullName="System.Windows.PropertyPath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0ea78cb7b03c94b3d66ae42736ef1796f433d34a" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57926791" /></Metadata><TypeSignature Language="C#" Value="public sealed class PropertyPath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyPath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PropertyPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyPath" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyPath sealed" />
  <TypeSignature Language="F#" Value="type PropertyPath = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PropertyPathConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет структуру данных для описания свойства как подпути иного свойства или типа владельца. Пути свойств используются в объектах для привязки данных, в раскадровках и графиках для анимации.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс содержит строку <xref:System.Windows.PropertyPath.Path%2A>и список свойств зависимостей, которые являются <xref:System.Windows.PropertyPath.PathParameters%2A> в строку <xref:System.Windows.PropertyPath.Path%2A>.  
  
 <xref:System.Windows.PropertyPath> поддерживает два режима работы.  
  
 **Режим источника** описывает путь к свойству, которое используется в качестве источника для другого действия. Этот режим используется по <xref:System.Windows.Data.Binding> класс для поддержки привязки данных.  
  
 **Режим целевого объекта** описывает путь к свойству, которое будет установлено в качестве целевого свойства. Этот режим используется для поддержки раскадровки и временная шкала методы задания.  
  
 Например `Background.Opacity` представляет собой путь к двухфакторной. Этот путь подразумевает: во-первых, найти `Background` свойства объекта, получения объекта, значение, `Background` свойство имеет значение и затем получить значение `Opacity` свойства этого объекта.  
  
<a name="xamlAttributeUsage_PropertyPath"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<object property="propertyPath" .../>  
```  
  
<a name="xamlValues_PropertyPath"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *propertyPath*  
 Строка, значение которого являться путем простого или сложного свойства. Синтаксис для параметра <xref:System.Windows.PropertyPath> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] универсальна, однако сложные и описан в отдельном разделе [синтаксис PropertyPath XAML](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/056aee79-7cdd-434f-8174-dfc856cad343">Расширение разметки x:Static</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyPath" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : obj -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath parameter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">Путь свойства, описывающий путь к свойству [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)], или же единому свойству зависимостей.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyPath" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор имеет два разных применения в зависимости от его, используется ли для пути к свойству режиме исходного кода для привязки или пути свойства режим целевого объекта для цели раскадровки.  
  
 При ее использовании <xref:System.Windows.PropertyPath> в режиме исходного кода для привязки, `parameter` строка, представляющая имя свойства, можно выбрать или строку, описывающую «промежуточный» путь к свойству в [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] объектной модели объекта, который используется в качестве источника для привязки. Для пути к свойству привязки символ, который определяет «step» — точка (.). Также поддерживаются ссылки индексаторов (включая несколько индексаторов и разграничение типа). Дополнительные сведения о синтаксисе строки, используемые особо <xref:System.Windows.Data.Binding> объекта, см. в разделе <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>. Свойство, используемое в качестве источника привязки не обязательно свойства зависимостей. Если привязка, ссылочное свойство необходимо чтения и записи. Обратите внимание на то, что целевой объект привязки должен быть свойством зависимостей. Дополнительные сведения см. в разделе [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 При ее использовании <xref:System.Windows.PropertyPath> в целевом режиме пути один шаг для цели раскадровки, `parameter` обычно предоставляется в качестве типа <xref:System.Windows.DependencyProperty>. Можно также указать строку, являющуюся <xref:System.Windows.DependencyProperty.Name%2A>. Любой из этих иметь один и тот же результат, так как он хранится внутренним образом как строка. Предоставленный <xref:System.Windows.DependencyProperty> преобразуется в строку с помощью <xref:System.Windows.Markup.DependencyPropertyConverter>. <xref:System.Windows.Markup.DependencyPropertyConverter> Поддерживает формат полного имени для свойств зависимостей, поэтому можно указать *typeName*. *propertyName* указанием строку имени свойства зависимостей для <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> конструктор в коде. Полный путь к идентификатор свойства зависимостей представляет собой другой понятие, чем сложной траектории. Комплексное path <xref:System.Windows.PropertyPath> вместо этого должен будет создан с помощью <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> конструктор.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.Binding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (string path, params object[] pathParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, object[] pathParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ParamArray pathParameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::String ^ path, ... cli::array &lt;System::Object ^&gt; ^ pathParameters);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : string * obj[] -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath (path, pathParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathParameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">Строка, указывающая <see cref="P:System.Windows.PropertyPath.Path" />, в размеченном формате.</param>
        <param name="pathParameters">Массив объектов, задающий <see cref="P:System.Windows.PropertyPath.PathParameters" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyPath" /> с заданной строкой пути и внутренним и параметрами.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта подпись обычно используется только для режима целевой <xref:System.Windows.PropertyPath> использования сложных путями.  
  
 Этот конструктор поддерживает `params` для `pathParameters` аргумент конструктора. Таким образом можно указать содержимое `pathParameters` как ряд аргументов конструктора с разделителями запятыми, которые заполняют массив, а не вводить измерения массива и наполняем его `pathParameters` элементов. Каждый элемент, можно указать, должен иметь один из следующих типов: <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>.  
  
 Дополнительные сведения о требованиях к параметров см. в разделе <xref:System.Windows.PropertyPath.Path%2A> и <xref:System.Windows.PropertyPath.PathParameters%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Windows.PropertyPath.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку, описывающую путь.</summary>
        <value>Строка, описывающая путь.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка, содержащаяся в это свойство имеет три абсолютно разные значения в зависимости от того, следует ли <xref:System.Windows.PropertyPath> используется для пути к свойству режиме исходного кода для привязки, свойства пути режим целевого объекта для цели раскадровки, или для сложного путь к цели раскадровки.  
  
 При ее использовании <xref:System.Windows.PropertyPath> в режиме исходного кода для привязки, <xref:System.Windows.PropertyPath.Path%2A> строка, представляющая имя свойства, можно выбрать или строку, описывающую «промежуточный» путь к свойству в [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] объектной модели объекта, который используется в качестве источника для привязки. Для пути к свойству привязки символ, который определяет «step» — точка (.). Также поддерживаются ссылки индексаторов (включая несколько индексаторов и разграничение типа). Дополнительные сведения о синтаксисе строки, используемые особо <xref:System.Windows.Data.Binding> объекта, см. в разделе <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>. Свойство, используемое в качестве источника привязки не обязательно свойства зависимостей. Если двойной привязке, источник свойства должны быть чтения и записи. Обратите внимание на то, что целевой объект привязки должен быть свойством зависимостей. Дополнительные сведения см. в разделе [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 При ее использовании <xref:System.Windows.PropertyPath> в целевом режиме пути один шаг для цели раскадровки, <xref:System.Windows.PropertyPath> является строка, являющаяся *typeName*. *propertyName* указанием строку имени свойства зависимостей.  
  
 При ее использовании <xref:System.Windows.PropertyPath> сложного пути для раскадровки цели, <xref:System.Windows.PropertyPath.Path%2A> является токеном строковом формате, описывающему отношения для различных объектов, приведенные в <xref:System.Windows.PropertyPath.PathParameters%2A>.  
  
-   Каждый элемент в массиве определяется индекс массива для элемента в скобках в следующем формате. Например, чтобы указать первый элемент в массиве, строка маркера содержит `(0)`.  
  
-   Отношения между элементами («шаги» в пути) указываются через точку (.). Свойство точки является первым шагом в пути, свойства после — второй этап и т. д. (можно указать действия за пределы двух). Последний шаг в цепочке всегда представляет анимируемого свойства.  
  
-   Свойствам коллекции осуществляется с помощью синтаксиса индексатора, с указанием индекса в квадратные скобки ([и]). Индексатор является дополнением к токен, представляющий свойство. Например, ниже приведен два пути, с комбинацией символов в первом шаге, указывая второй элемент из коллекции этого свойства: `(0)[1].(1)` . Нельзя использовать индексатор для последнего свойства в цепочке; невозможно анимировать позицию фактической коллекции, необходимо анимировать свойства для этого объекта.  
  
 Строка пути для <xref:System.Windows.PropertyPath> обычно устанавливается посредством конструкторов: <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> подпись для привязки или целевые объекты раскадровки один шаг, <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> подпись для целей многоэтапный раскадровки.  
  
 **XAML:** При использовании <xref:System.Windows.PropertyPath> для описания ссылку на свойство в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], как значение атрибута, строка, которая указывается сначала обрабатывается преобразователь типов (<xref:System.Windows.PropertyPathConverter>). Этот преобразователь типов, затем обрабатывает строку и на основе ее синтаксиса вызывается один из <xref:System.Windows.PropertyPath> сигнатур конструкторов. Такое обращение через преобразователь типов, обработки значения атрибута обычно является использование <xref:System.Windows.PropertyPath> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], вместо того чтобы объявление <xref:System.Windows.PropertyPath> элемент и затем применить конкретные значения таких как атрибуты объектов <xref:System.Windows.PropertyPath.Path%2A> и <xref:System.Windows.PropertyPath.PathParameters%2A>. Дополнительные сведения см. в разделе [синтаксис PropertyPath XAML](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
<a name="xamlTextUsage_Path"></a>   
## <a name="xaml-text-usage"></a>Использование текста XAML  
 Членами <xref:System.Windows.PropertyPath> тип обычно не заданных в прямой [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] синтаксис. См. заметки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathParameters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;object&gt; PathParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;object&gt; PathParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.PathParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathParameters As Collection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ PathParameters { System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathParameters : System.Collections.ObjectModel.Collection&lt;obj&gt;" Usage="System.Windows.PropertyPath.PathParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает список параметров для использования, когда путь относится к индексированным параметрам.</summary>
        <value>Список параметров.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойства <xref:System.Windows.PropertyPath> обычно устанавливаются через посредством конструкторов. Для параметра <xref:System.Windows.PropertyPath.PathParameters%2A>, <xref:System.Windows.PropertyPath.%23ctor%2A> конструктор особенно удобно, так как `pathParameters` используется в качестве аргумента конструктора `params`, это означает, что не требуется для создания или измерения массива для построения. Просто укажите каждый элемент массива как дополнительный параметр.  
  
 Если последнее свойство, которое является целевым объектом является <xref:System.Windows.Freezable> тип, что значение будет клонирован. Дополнительные сведения см. в разделе [Общие сведения о раскадровках](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  
  
 Фактические вычисления цепочку свойств осуществляется раскадровки анимации. В <xref:System.Windows.PropertyPath> уровня, не будет выполнена проверка убедитесь, что действия пути подключения вообще. Например, можно создать путь к свойству, которое имеет <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> на первом этапе и <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> на втором этапе. Но такой путь к свойству завершается ошибкой, если фактически применяется в качестве целевого объекта, так как тип кисти, заполняет <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> имеет <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> свойства. Недопустимое свойство пути сбоем без уведомления. Дополнительные сведения см. в разделе [Общие сведения о Storyboard](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  
  
 **XAML:** При использовании <xref:System.Windows.PropertyPath> для описания ссылку на свойство в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], как значение атрибута, строка, которая указывается сначала обрабатывается преобразователь типов (<xref:System.Windows.PropertyPathConverter>). Этот преобразователь типов, затем обрабатывает строку и на основе ее синтаксиса вызывается один из <xref:System.Windows.PropertyPath> сигнатур конструкторов. Такое обращение через преобразователь типов, обработки значения атрибута обычно является использование <xref:System.Windows.PropertyPath> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], вместо того чтобы объявление <xref:System.Windows.PropertyPath> элемент и затем применить конкретные значения таких как атрибуты объектов <xref:System.Windows.PropertyPath.Path%2A> и <xref:System.Windows.PropertyPath.PathParameters%2A>. Дополнительные сведения см. в разделе [синтаксис PropertyPath XAML](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
<a name="xamlTextUsage_PathParameters"></a>   
## <a name="xaml-text-usage"></a>Использование текста XAML  
 Членами <xref:System.Windows.PropertyPath> тип обычно не заданных в прямой [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] синтаксис. См. заметки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>