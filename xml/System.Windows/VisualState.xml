<Type Name="VisualState" FullName="System.Windows.VisualState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fb39d86958aa250a4d7334e24544cce355d29b6f" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55341628" /></Metadata><TypeSignature Language="C#" Value="public class VisualState : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualState extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualState" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualState&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualState : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualState = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет внешний вид элемента управления, находящегося в определенном состоянии.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.VisualState> указывает внешний вид элемента управления, когда он находится в определенном состоянии. Например, если <xref:System.Windows.Controls.Button> является нажата, граница может быть другой цвет, чем обычно.  <xref:System.Windows.VisualState> Класс имеет <xref:System.Windows.VisualState.Storyboard%2A> свойство, которое изменяет внешний вид элемента управления. Когда элемент управления переходит в состояние, которое определяется <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> свойства <xref:System.Windows.VisualState.Storyboard%2A> начинается. Когда элемент управления выходит из состояния, <xref:System.Windows.VisualState.Storyboard%2A> останавливается.  
  
 <xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType> Свойство содержит <xref:System.Windows.VisualState> объектов. <xref:System.Windows.VisualStateGroup> объекты добавляются в <xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType> вложенное свойство зависимостей, который определен в на <xref:System.Windows.FrameworkElement>. Вы можете добавить <xref:System.Windows.VisualState> объектов к любому <xref:System.Windows.FrameworkElement>, но обычно они используются в <xref:System.Windows.Controls.ControlTemplate> из <xref:System.Windows.Controls.Control>. Сведения о создании <xref:System.Windows.Controls.ControlTemplate> и <xref:System.Windows.VisualState> объектов для существующих элементов управления, см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md). Например, с помощью <xref:System.Windows.VisualState> объекты за пределами <xref:System.Windows.Controls.ControlTemplate>, см. в разделе <xref:System.Windows.VisualStateManager> класса.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Windows.VisualStateGroup> в <xref:System.Windows.Controls.ControlTemplate> из <xref:System.Windows.Controls.Button> вызывается `CommonStates` и добавляет <xref:System.Windows.VisualState> объектов для штатов, `Normal`, `Pressed`, и `MouseOver`. <xref:System.Windows.Controls.Button> Также определяет состояние, вызывать `Disabled` , который находится в `CommonStates` <xref:System.Windows.VisualStateGroup>, но пропускает его примере для краткости. Полный пример см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.VisualState" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualState.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя таблицы для объекта <see cref="T:System.Windows.VisualState" />.</summary>
        <value>Имя <see cref="T:System.Windows.VisualState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Укажите, следует ввести какие визуальное состояние элемента, передав <xref:System.Windows.VisualState.Name%2A> из <xref:System.Windows.VisualState> для <xref:System.Windows.VisualStateManager>.  
  
 При <xref:System.Windows.Controls.Control> использует <xref:System.Windows.VisualStateManager> в <xref:System.Windows.Controls.ControlTemplate>, автором элемента управления следует указать, какие <xref:System.Windows.VisualState> объектов управления ожидает найти в его <xref:System.Windows.Controls.ControlTemplate> , поместив <xref:System.Windows.TemplateVisualStateAttribute> на его сигнатура класса. <xref:System.Windows.Controls.ControlTemplate> Авторы определить новое <xref:System.Windows.VisualState> объекты и набор <xref:System.Windows.VisualState.Name%2A> присваивается значение, заданное параметром <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> свойство.  
  
 Чтобы найти имена визуальные состояния элементов управления, которые входят в состав [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], см. в разделе [управления стили и шаблоны](~/docs/framework/wpf/controls/control-styles-and-templates.md). Сведения о создании <xref:System.Windows.Controls.ControlTemplate> и <xref:System.Windows.VisualState> объектов для существующих элементов управления, см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Windows.VisualStateGroup> в <xref:System.Windows.Controls.ControlTemplate> из <xref:System.Windows.Controls.Button> вызывается `CommonStates` и добавляет <xref:System.Windows.VisualState> объектов для штатов, `Normal`, `Pressed`, и `MouseOver`. <xref:System.Windows.Controls.Button> Также определяет состояние, вызывать `Disabled` , который находится в `CommonStates` <xref:System.Windows.VisualStateGroup>, но пропускает его примере для краткости. Полный пример см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualState.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект <see cref="T:System.Windows.Media.Animation.Storyboard" />, определяющий внешний вид элемента управления, когда тот находится в состоянии, представленном объектом <see cref="T:System.Windows.VisualState" />.</summary>
        <value>Раскадровка, определяющая внешний вид элемента управления, когда тот находится в состоянии, представленном объектом <see cref="T:System.Windows.VisualState" />. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда элемент управления переходит в состояние, которое определяется <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> свойства <xref:System.Windows.VisualState.Storyboard%2A> начинается. Когда элемент управления выходит из состояния, <xref:System.Windows.VisualState.Storyboard%2A> останавливается.  
  
   
  
## Examples  
 В следующем примере создается простой <xref:System.Windows.Controls.ControlTemplate> для <xref:System.Windows.Controls.Button> , содержащий один <xref:System.Windows.Controls.Grid>.  <xref:System.Windows.VisualState> Вызывается `MouseOver` имеет раскадровки, которое изменяет цвет <xref:System.Windows.Controls.Grid> от зеленого, красного, если пользователь помещает указатель мыши <xref:System.Windows.Controls.Button>.  <xref:System.Windows.VisualState> Вызывается `Normal` включается, когда пользователь перемещает указатель мыши кнопки включения и выключения <xref:System.Windows.Controls.Grid> возвращает зеленый цвет.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>