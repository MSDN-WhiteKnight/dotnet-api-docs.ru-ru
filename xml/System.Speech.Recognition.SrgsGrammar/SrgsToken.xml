<Type Name="SrgsToken" FullName="System.Speech.Recognition.SrgsGrammar.SrgsToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aa6bef6a8702dca47ca6bc8a2c40e1f03ef58c4f" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55363520" /></Metadata><TypeSignature Language="C#" Value="public class SrgsToken : System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsToken extends System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsToken&#xA;Inherits SrgsElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsToken : System::Speech::Recognition::SrgsGrammar::SrgsElement" />
  <TypeSignature Language="F#" Value="type SrgsToken = class&#xA;    inherit SrgsElement" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.SrgsGrammar.SrgsElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString ()}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет слово или короткую фразу, которое может быть распознано.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 С помощью элементов <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> класса, можно указать три формы слова: <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> формы, <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> формы, а пользовательский <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> слова.  
  
 Если несколько слов хранятся в одном <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> объекта, каждый обрабатывается как другой токен внутри организации и в результате.  
  
 Этот класс представляет `token` элемент, определенный консорциумом World Wide Web Consortium (W3C) [спецификации грамматики распознавания речи (SRGS) версии 1.0.](https://go.microsoft.com/fwlink/?LinkId=201761). Сведения о SRGS `token` элемент, а также сведения о поддержке по System.Speech, см. в разделе [маркера элемента](https://msdn.microsoft.com/library/3a9e8d64-7bd4-4188-a6f4-dbf28ea71632).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsToken (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsToken(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsToken : string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsToken" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsToken text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Текст нового экземпляра класса <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> и указывает текст для распознавания.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Создает <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> которого <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> свойству изначально присваивается значение `text` параметра.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="text" /> пуст.</exception>
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public string Display { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Display" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" />
      <MemberSignature Language="VB.NET" Value="Public Property Display As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Display { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Display : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает форму отображения текста, который должен быть произнесен.</summary>
        <value>Представление токена в том виде, в котором он должен быть отображен.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Несмотря на то, что обычно они представляют одно и то же значение, <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> формы могут отличаться от <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> формируют слово или фразу в <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>. Например, форма просмотра может быть аббревиатура, например «США», а текст, который будет произнесен, к которой <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> применяется, является «США».  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Предпринята попытка установить для параметра <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" /> значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Выполнена попытка присвоить свойству <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" /> значение или пустую строку.</exception>
      </Docs>
    </Member>
    <Member MemberName="Pronunciation">
      <MemberSignature Language="C#" Value="public string Pronunciation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pronunciation" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" />
      <MemberSignature Language="VB.NET" Value="Public Property Pronunciation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pronunciation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Pronunciation : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку, определяющую произношение для токена.</summary>
        <value>Возвращает строку, содержащую телефоны из фонетического алфавита, указанного в <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Телефоны являются буквы или символы, которые описывают звуки речи. System.Speech поддерживает три фонетические алфавиты для указания пользовательских произношений: универсальный набор звуков (UPS), набор Phone Speech API (SAPI) и международного фонетического алфавита (IPA). Телефоны, указанный в <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> должно соответствовать фонетического алфавита, указанного в <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>. См. в разделе [словари и фонетические алфавиты](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14)) Дополнительные сведения.  
  
 Телефоны, указанный в <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> указать, как содержимое <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> должно быть особенно заметны для успешного распознавания.  Распознавание речи использует произношение, указанный в <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> в соответствии с речевого ввода и возвращает строку, содержащихся в <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> в верности результата распознавания находится.  
  
 Если указанная строка содержит нераспознанный phone телефоны не с разделителями пробелами, механизм распознавания не распознает указанного произношение, что допустимый произношение слова, содержащихся в <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.  
  
 Произношение, указанный в <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> имеют приоритет над произношение, указанный в словари, связанные с грамматику или механизма распознавания. Кроме того, произношение во <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> свойство применимо только к одним вхождением слова или фразы, содержащихся в <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.  
  
   
  
## Examples  
 Грамматика в следующем примере содержит слова сленговые и тоже есть редко word: «whatchamacallit». Добавление пользовательских, встроенные произношение при помощи <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> свойство <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> класса может повысить точность распознавания для слова «whatchamacallit» также как и для всю фразу, которая его содержит. В примере телефонов из Microsoft универсальный набор звуков (UPS) используется для определения пользовательских произношений.  
  
```  
using System;  
using System.Speech.Recognition;  
using System.Speech.Recognition.SrgsGrammar;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an instance of the in-process recognizer.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine(new System.Globalization.CultureInfo("en-US")))  
      {  
  
        // Build the SrgsOneOf objects with alternative choices for the slang phrase.  
        SrgsOneOf gimme = new SrgsOneOf(  
          new string[] { "give me", "gimme", "hand me", "ha'me" });  
        SrgsOneOf the = new SrgsOneOf(new string[] { "the", "duh" });  
  
        // Build the one-of element that contains the pronunciation.  
        SrgsItem thing = new SrgsItem("thingamajig");  
        SrgsItem whatcha = new SrgsItem();  
        SrgsToken callit = new SrgsToken("whatchamacallit");  
        callit.Pronunciation = "W AE T CH AE M AE K AA L IH T";  
        whatcha.Add(callit);  
        SrgsOneOf what = new SrgsOneOf(new SrgsItem[] {thing, whatcha});  
  
        // Create the rule from the SrgsOneOf objects.  
        SrgsRule slangRule = new SrgsRule("slang", gimme, the, what);  
  
        // Build an SrgsDocument object from the rule and set the phonetic alphabet.  
        SrgsDocument tokenPron = new SrgsDocument(slangRule);  
        tokenPron.PhoneticAlphabet = SrgsPhoneticAlphabet.Ups;  
  
        // Create a Grammar object from the SrgsDocument and load it to the recognizer.  
        Grammar g_Slang = new Grammar(tokenPron);  
        g_Slang.Name = ("Slang Pronunciation");  
        recognizer.LoadGrammarAsync(g_Slang);  
  
        // Configure recognizer input.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Attach a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Start asynchronous recognition.  
        recognizer.RecognizeAsync();  
        Console.WriteLine("Starting asynchronous recognition...");  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Recognized phrase: " + e.Result.Text);  
      Console.WriteLine("Confidence: " + e.Result.Confidence);  
      Console.WriteLine("  Word summary: ");  
      foreach (RecognizedWordUnit word in e.Result.Words)  
      {  
        Console.WriteLine(  
          "    Lexical form ({1})" +  
          " Pronunciation ({0})" +  
          " Confidence ({2})",  
          word.Pronunciation, word.LexicalForm, word.Confidence);  
      }  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Предпринята попытка установить для параметра <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" /> значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Выполнена попытка присвоить свойству <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" /> значение или пустую строку.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14)">Словари и фонетические алфавиты</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает письменный вид слова, которое требуется произнести.</summary>
        <value>Текст, содержащийся внутри экземпляра класса <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Несмотря на то, что обычно они представляют одно и то же значение, <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> формы могут отличаться от <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> формируют слово или фразу в <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>. Например <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> форма может быть аббревиатура, например «США», а текст, который будет произнесен, к которой <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> применяется, является «США».  
  
 Значение по умолчанию для <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> свойства является пустая строка — «».  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Предпринята попытка установить для параметра <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" /> значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Выполнена попытка присвоить свойству <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" /> значение или пустую строку.</exception>
        <exception cref="T:System.ArgumentException">Предпринята попытка присвоить строку, содержащую кавычки ("), объекту <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>