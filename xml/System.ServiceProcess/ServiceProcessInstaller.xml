<Type Name="ServiceProcessInstaller" FullName="System.ServiceProcess.ServiceProcessInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c1fa4fdc5fa553fef872aec6911ff4febc226965" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58458099" /></Metadata><TypeSignature Language="C#" Value="public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProcessInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceProcessInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProcessInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProcessInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type ServiceProcessInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Устанавливает классы, содержащие исполняемый файл, которые расширяют класс <see cref="T:System.ServiceProcess.ServiceBase" />. Этот класс вызывается программами установки, например InstallUtil.exe, при установке служебного приложения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceProcessInstaller> Работает общими для всех служб в исполняемом файле. Он используется программой установки для записи значения реестра, связанные со службами, которые вы хотите установить.  
  
 Чтобы установить службу, создайте класс установщика проекта, который наследует от <xref:System.Configuration.Install.Installer>и задайте <xref:System.ComponentModel.RunInstallerAttribute> классу для `true`. В проекте, создавать один <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляра для каждого приложения службы и один <xref:System.ServiceProcess.ServiceInstaller> экземпляра для каждой службы в приложении. Наконец, добавьте <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляра и <xref:System.ServiceProcess.ServiceInstaller> экземпляры в класс установщика проекта.  
  
 При запуске InstallUtil.exe, программа выполняет поиск классов в сборке службы с <xref:System.ComponentModel.RunInstallerAttribute> присвоено `true`. Добавление классов в сборку службы, добавив их в <xref:System.Configuration.Install.Installer.Installers%2A> коллекцию, связанную с установщиком проектов. Если <xref:System.ComponentModel.RunInstallerAttribute> является `false`, программа установки не учитывает установщик проекта.  
  
 Для экземпляра <xref:System.ServiceProcess.ServiceProcessInstaller>, свойства можно изменить включают в себя указание, что приложение службы выполняются с учетной записью, отличного от вошедшего в систему пользователя. Можно указать определенный <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> и <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> пары, в которой должна запускаться служба, или можно использовать <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> для указания работы службы в группе учетных записей системы, локальной или учетная запись сетевой службы или учетной записи пользователя.  
  
> [!NOTE]
>  Системная учетная запись компьютера не совпадает с учетной записью администратора.  
  
 Как правило, не следует вызывать методы на <xref:System.ServiceProcess.ServiceInstaller> кода; они обычно вызываются только программой установки. Программа установки автоматически вызывает <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> и <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> методов во время установки. При необходимости он обрабатывает сбои, путем вызова <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (или <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) для всех ранее установленных компонентов.  
  
 Программа установки приложения автоматического сохранения сведений об уже установленных компонентах, с помощью установщика проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>. Сведения о состоянии постоянно обновляется как <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляра и каждого <xref:System.ServiceProcess.ServiceInstaller> экземпляр устанавливается с помощью программы. Обычно нет необходимости явно изменять сведения о состоянии в коде.  
  
 Создание экземпляра <xref:System.ServiceProcess.ServiceProcessInstaller> вызывает конструктор базового класса <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>, для вызова.  
  
   
  
## Examples  
 В следующем примере создается установщик проекта MyProjectInstaller, который наследует от <xref:System.Configuration.Install.Installer>. Предполагается есть исполняемого файла, содержащего две службы: «Здравствуй, мир служба 1» и «Здравствуй, мир службы 2». В конструкторе для MyProjectInstaller (будет называться программой установки) <xref:System.ServiceProcess.ServiceInstaller> объекты создаются для каждой службы и <xref:System.ServiceProcess.ServiceProcessInstaller> создается для исполняемого файла. Для программы установки распознать как допустимый установщик, MyProjectInstaller <xref:System.ComponentModel.RunInstallerAttribute> атрибут имеет значение `true`.  
  
 Необязательные свойства задаются на процессов и установщиков служб до их добавления к <xref:System.Configuration.Install.Installer.Installers%2A> коллекции. Когда программа установки осуществляет доступ к MyProjectInstaller, объекты, добавляемые <xref:System.Configuration.Install.Installer.Installers%2A> коллекции посредством вызова <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> будет устанавливаться в свою очередь. В процессе установки установщик сохраняет сведения о состоянии, указывающее, какие объекты будут установлены, поэтому каждый объект может быть отменена в свою очередь в случае сбоя установки.  
  
 Как правило класс установщика проекта не создается явно. Может создать его и добавить <xref:System.ComponentModel.RunInstallerAttribute>, но программа установки фактически вызывает и, соответственно, класс.  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
    <altmember cref="P:System.Configuration.Install.Installer.Installers" />
    <altmember cref="T:System.ServiceProcess.ServiceAccount" />
    <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProcessInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProcessInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.ServiceProcess.ServiceProcessInstaller" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceAccount Account { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceAccount Account" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberSignature Language="VB.NET" Value="Public Property Account As ServiceAccount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceAccount Account { System::ServiceProcess::ServiceAccount get(); void set(System::ServiceProcess::ServiceAccount value); };" />
      <MemberSignature Language="F#" Value="member this.Account : System.ServiceProcess.ServiceAccount with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceProcessInstallerAccount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип учетной записи, под управлением которой должно запускаться данное служебное приложение.</summary>
        <value>Объект <see cref="T:System.ServiceProcess.ServiceAccount" />, определяющий тип учетной записи, под управлением которой система запускает данную службу. Значение по умолчанию — <see langword="User" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> свойство `User`, <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> и <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> свойства используются для определения учетной записи, под которой запускается служебное приложение.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> И <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> пар позволяет реализовать службу для запуска под учетной записью, отличной от системной учетной записи. Например, это позволяет службе на автоматический запуск при перезагрузке, если пользователь не вошел в систему. Если оставить либо <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> или <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> пустым и задайте <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> для `User`, вам будет предложено ввести допустимое имя пользователя и пароль во время установки.  
  
 Можно также указать, что служба запускается под учетной записью локальной системы, или в качестве локальной или сетевой службы. См. в разделе <xref:System.ServiceProcess.ServiceAccount> перечисления Дополнительные сведения о типах учетных записей.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="T:System.ServiceProcess.ServiceAccount" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="serviceProcessInstaller.CopyFromComponent comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">Объект <see cref="T:System.ComponentModel.IComponent" />, представляющий процесс службы.</param>
        <summary>Реализует метод <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> базового класса без поведения, определяемого классом <see cref="T:System.ServiceProcess.ServiceProcessInstaller" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод не должен вызываться из кода. Метод базового класса для <xref:System.Configuration.Install.ComponentInstaller> является `abstract`, поэтому он здесь реализован в производном классе. Тем не менее, не <xref:System.ServiceProcess.ServiceProcessInstaller> обработки в реализации метода определенного класса.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает текст справки для параметров установки службы.</summary>
        <value>Текст справки, содержащий описание действий по заданию имени пользователя и пароля для запуска службы под управлением определенной учетной записи.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот текст справки может использоваться при запуске службы вручную. Он указывается, как ввести имя и пароль пользователя.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">Объект <see cref="T:System.Collections.IDictionary" />, содержащий контекстные данные, связанные с процессом установки.</param>
        <summary>Записывает в реестр сведения о служебном приложении. Этот метод предназначен для использования инструментами установки, которые автоматически вызывают соответствующие методы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, не следует вызывать методы на <xref:System.ServiceProcess.ServiceProcessInstaller> кода; они обычно вызываются только программой установки. Программа установки автоматически вызывает <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> метод во время установки. При необходимости он обрабатывает сбои, путем вызова <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> для ранее установленных компонентов. Этот метод передает установки базового класса <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> метод.  
  
 Как правило, не будет вызывать методы в <xref:System.ServiceProcess.ServiceInstaller> коде; они обычно вызываются только программой установки. Программа установки автоматически вызывает <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> и <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> методов во время установки. При необходимости он обрабатывает сбои, путем вызова <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (или <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) для всех ранее установленных компонентов  
  
 Программа установки приложения автоматического сохранения сведений об уже установленных компонентах, с помощью установщика проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>. Сведения о состоянии, переданные <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> как `stateSaver` параметра, постоянно обновляется как <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляра и каждого <xref:System.ServiceProcess.ServiceInstaller> экземпляр устанавливается с помощью программы. Обычно нет необходимости явно изменять сведения о состоянии в коде.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> передает в вызывающем методе исключений, вызываемых методов базового класса или <xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall> обработчики событий.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение параметра <paramref name="stateSaver" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает пароль, связанный с учетной записью пользователя, под управлением которой запускается служебное приложение.</summary>
        <value>Пароль, связанный с учетной записью, под управлением которой должна запускаться служба. Значение по умолчанию — пустая строка (""). Это свойство не является общим и не может быть сериализовано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> И <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> пар позволяет реализовать службу для запуска под учетной записью, отличной от системной учетной записи. Например, это позволяет службе на автоматический запуск при перезагрузке, если пользователь не вошел в систему.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> и <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> обрабатываются безопасным образом, в том, что они никогда не сериализуются и сохранены в состоянии установки (установщик проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) или другом расположении с общим доступом.  
  
 Установка <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> и <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> позволяет учетной записи должны быть сопоставлены автоматически службы во время установки. Если оставить либо <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> или <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> пустым и задайте <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> для `User`, вам будет предложено ввести допустимое имя пользователя и пароль во время установки.  
  
 Другой вариант для запуска службы в отдельной учетной записи является использование системной учетной записи компьютера. Эту учетную запись, которая отличается от учетной записи администратора, требуется пароль. Системной учетной записи больше прав, чем текущего вошедшего пользователя. Служба требует выполнения под учетной записью системы, а не учетной записи пользователя, позволяет избежать проблем, связанных с отсутствием разрешений  
  
 Если <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> имеет любое значение, отличное от `User`, используется указанной учетной записи (локальной или сетевой службы или локальной системы), даже если <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> и <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> свойства заполняются.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Объект <see cref="T:System.Collections.IDictionary" />, содержащий контекстные данные, связанные с процессом установки.</param>
        <summary>Отменяет сведения о служебном приложении, записанные в реестр процедурой установки. Этот метод предназначен для использования инструментами установки, которые автоматически обрабатывают соответствующие методы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, не следует вызывать методы на <xref:System.ServiceProcess.ServiceProcessInstaller> кода; они обычно вызываются только программой установки. Программа установки автоматически вызывает <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> метод во время установки. При необходимости он обрабатывает сбои, путем вызова <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> в объекте, который создал событие.  
  
 Программа установки приложения автоматического сохранения сведений об уже установленных компонентах, с помощью установщика проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>. Сведения о состоянии, переданные <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> как `savedState` параметра, постоянно обновляется как <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляра и каждого <xref:System.ServiceProcess.ServiceInstaller> экземпляр устанавливается с помощью программы. Обычно нет необходимости явно изменять сведения о состоянии в коде.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> передает в вызывающем методе исключений, вызываемых методов базового класса или <xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall> обработчики событий.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение параметра <paramref name="savedState" /> — <see langword="null" />.  
  
-или- 
Параметр <paramref name="savedState" /> поврежден либо отсутствует.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Username : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает учетную запись пользователя, под управлением которой будет запускаться служебное приложение.</summary>
        <value>Учетная запись, под управлением которой должна запускаться служба. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> И <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> пар позволяет реализовать службу для запуска под учетной записью, отличной от системной учетной записи. Например, это позволяет службе на автоматический запуск при перезагрузке, если пользователь не вошел в систему.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> и <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> обрабатываются безопасным образом, в том, что они никогда не сериализуются и сохранены в состоянии установки (установщик проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) или другом расположении с общим доступом.  
  
 Установка <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> и <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> позволяет учетной записи должны быть сопоставлены автоматически службы во время установки. Если оставить либо <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> или <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> пустым и задайте <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> для `User`, вам будет предложено ввести допустимое имя пользователя и пароль во время установки.  
  
 Другой вариант для запуска службы в отдельной учетной записи является использование системной учетной записи компьютера. Эту учетную запись, которая отличается от учетной записи администратора, требуется пароль. Системной учетной записи больше прав, чем текущего вошедшего пользователя. Служба требует выполнения под учетной записью системы, а не учетной записи пользователя, позволяет избежать проблем, связанных с отсутствием разрешений  
  
 Если <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> имеет любое значение, отличное от `User`, используется указанной учетной записи (локальной или сетевой службы или локальной системы), даже если <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> и <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> свойства заполняются.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
  </Members>
</Type>