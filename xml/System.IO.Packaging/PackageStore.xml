<Type Name="PackageStore" FullName="System.IO.Packaging.PackageStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cb63b9884469dab5119b479d4d26748d23cfa155" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56400344" /></Metadata><TypeSignature Language="C#" Value="public static class PackageStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackageStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageStore" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageStore abstract sealed" />
  <TypeSignature Language="F#" Value="type PackageStore = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет коллекцию зависящих от приложения экземпляров объекта <see cref="T:System.IO.Packaging.Package" />, используемых в сочетании с объектом <see cref="T:System.IO.Packaging.PackWebRequest" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageStore> Определяет ссылку коллекции пакета, которые были открыты и активны в приложении.  Пакеты, добавляемые в <xref:System.IO.Packaging.PackageStore> осуществляется по значению ключа URI.  <xref:System.IO.Packaging.PackageStore> Поддерживает три наиболее частые способы:  
  
1.  Доступ к <xref:System.IO.Packaging.PackagePart> данных с помощью <xref:System.IO.Packaging.PackWebRequest>.  
  
2.  Приложение, получив экземпляр из <xref:System.IO.Packaging.Package> заданный URI пакета.  
  
3.  Доступе к пакетам, которые создаются и хранятся в <xref:System.IO.MemoryStream>.  
  
 Для повышения производительности и минимизировать затраты на повторные файловых операций открытия и закрытия, <xref:System.IO.Packaging.PackageStore> используется для управления экземплярами компонента пакеты, доступ к <xref:System.IO.Packaging.PackWebRequest> и непосредственно приложением.  При доступе к данным в пакете, <xref:System.IO.Packaging.Package> запрошенный адрес <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A> сначала осуществляется проверка на предмет того, если пакет уже определены и открыть в <xref:System.IO.Packaging.PackageStore>.  Если пакет определен с открытым в <xref:System.IO.Packaging.PackageStore>, запрошенных частей может осуществляться непосредственно без повторного открытия и закрытия пакета для каждого запроса.  
  
 Если приложение открывает пакет с <xref:System.IO.Packaging.Package.Open%2A?displayProperty=nameWithType>, <xref:System.IO.Packaging.PackageStore.AddPackage%2A> может вызываться для добавления пакета <xref:System.IO.Packaging.PackageStore>.  <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> позже должен вызываться для удаления пакета из <xref:System.IO.Packaging.PackageStore> до вызова метода <xref:System.IO.Packaging.Package.Close%2A?displayProperty=nameWithType>.  
  
 Пакеты XPS открыт с <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> конструктор автоматически добавляются и удаляются из <xref:System.IO.Packaging.PackageStore> когда документ создается и удаляется.  (Необходимо вызвать <xref:System.IO.Packaging.PackageStore.AddPackage%2A> или <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> отдельно для пакетов XPS, открыть с помощью <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> конструкторов.)  
  
 Разрешения файлового ввода-вывода через пакета <xref:System.IO.Packaging.PackageStore> остается таким же, как разрешения операций ввода-вывода назначенных для пакета при его открытии.  <xref:System.IO.Packaging.PackageStore> Предоставляет только ссылки на пакеты, которые добавлены в хранилище.  Это приложение должно правильно открытия, обновления и закрытия каждого пакета.  
  
 Пакеты, добавляемые в <xref:System.IO.Packaging.PackageStore> может осуществляться в многопоточных средах, если они используются в сочетании с [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] средство синтаксического анализа, такие как <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>.  При работе в многопоточной среде, приложение должно заблокировать пакет перед выполнением доступа.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackWebRequest" />
    <altmember cref="T:System.IO.Packaging.PackWebResponse" />
  </Docs>
  <Members>
    <Member MemberName="AddPackage">
      <MemberSignature Language="C#" Value="public static void AddPackage (Uri uri, System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPackage(class System.Uri uri, class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPackage(Uri ^ uri, System::IO::Packaging::Package ^ package);" />
      <MemberSignature Language="F#" Value="static member AddPackage : Uri * System.IO.Packaging.Package -&gt; unit" Usage="System.IO.Packaging.PackageStore.AddPackage (uri, package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="uri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] ключа пакета <paramref name="package" /> для сравнения при вызове <see cref="T:System.IO.Packaging.PackWebRequest" />.</param>
        <param name="package">Пакет, добавляемый в хранилище.</param>
        <summary>Добавляет в хранилище объект <see cref="T:System.IO.Packaging.Package" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` Определяет ключ пакета URI, который будет сравниваться со значением, при вызове <xref:System.IO.Packaging.PackWebRequest>.  
  
 Если `packageUri` соответствует <xref:System.IO.Packaging.PackagePart.Uri%2A> для <xref:System.IO.Packaging.PackagePart> в <xref:System.IO.Packaging.PackWebRequest> вызвать, пакет, определенный в <xref:System.IO.Packaging.PackageStore> используется для доступа к запрашиваемой части.  
  
 Если `packageUri` не соответствует <xref:System.IO.Packaging.PackagePart.Uri%2A> для <xref:System.IO.Packaging.PackagePart> в <xref:System.IO.Packaging.PackWebRequest> вызова, пакет с указанным URI будет открыт для доступа к запрашиваемой части.  
  
 **Примечание по безопасности** этот метод требует <xref:System.Security.Permissions.EnvironmentPermission> для всех пользовательских <xref:System.IO.Packaging.Package> (отличным от<xref:System.IO.Packaging.ZipPackage>) типов.  
  
   
  
## Examples  
 В следующем примере показано, как использовать метод <xref:System.IO.Packaging.PackageStore.AddPackage%2A>.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewdecrypt)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="package" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> является недопустимым [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] пакета.</exception>
        <exception cref="T:System.InvalidOperationException">Пакет с указанным <paramref name="packageUri" /> уже имеется в хранилище.</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package GetPackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package GetPackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ GetPackage(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member GetPackage : Uri -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.PackageStore.GetPackage uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] пакета, который требуется возвратить.</param>
        <summary>Возвращает из хранилища <see cref="T:System.IO.Packaging.Package" /> с указанным [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</summary>
        <returns>Пакет с указанным <paramref name="packageUri" /> или <see langword="null" />, если в хранилище нет пакета с указанным <paramref name="packageUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` сопоставляется с URI в <xref:System.IO.Packaging.PackageStore.AddPackage%2A> вызов метода.  
  
 **Примечание по безопасности** этот метод требует <xref:System.Security.Permissions.EnvironmentPermission> для всех пользовательских <xref:System.IO.Packaging.Package> (отличным от<xref:System.IO.Packaging.ZipPackage>) типов.  
  
   
  
## Examples  
 В следующем примере показано, как использовать метод <xref:System.IO.Packaging.PackageStore.GetPackage%2A>.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewopendoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewopendoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> является недопустимым [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] пакета.</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePackage">
      <MemberSignature Language="C#" Value="public static void RemovePackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePackage(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member RemovePackage : Uri -&gt; unit" Usage="System.IO.Packaging.PackageStore.RemovePackage uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] пакета, который требуется удалить.</param>
        <summary>Удаляет из хранилища <see cref="T:System.IO.Packaging.Package" /> с указанным [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` сопоставляется с URI в <xref:System.IO.Packaging.PackageStore.AddPackage%2A> вызов метода.  
  
 **Примечание по безопасности** этот метод требует <xref:System.Security.Permissions.EnvironmentPermission> для всех пользовательских <xref:System.IO.Packaging.Package> (отличным от<xref:System.IO.Packaging.ZipPackage>) типов.  
  
   
  
## Examples  
 В следующем примере показано, как использовать метод <xref:System.IO.Packaging.PackageStore.RemovePackage%2A>.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewclosedoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewclosedoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> является недопустимым [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] пакета.</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>