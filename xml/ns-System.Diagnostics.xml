<Namespace Name="System.Diagnostics">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef6aeaebe2981ce7e1b191a089dab9ae242e488a" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="30734998" /></Metadata><Docs>
    <summary>В пространстве имен <see cref="N:System.Diagnostics" /> предусмотрены классы, позволяющие осуществлять взаимодействие с системными процессами, журналами событий и счетчиками производительности.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <xref:System.Diagnostics.EventLog> Компонент предоставляет функциональные возможности для записи в журнале событий, чтение и запись и создания и удаления журналов и источников событий в сети. <xref:System.Diagnostics.EntryWrittenEventHandler> Предоставляет способ взаимодействия с журналами событий асинхронно. Вспомогательные классы предоставляют доступ к более детально контролировать, включая: ограничения разрешений, а также указать типы журналов событий (управляет типом данных по умолчанию, которая записывается в журнал событий) и итерации по коллекции журналов событий операции. Дополнительные сведения об этих задачах см. в разделе <xref:System.Diagnostics.EventLogPermission>, <xref:System.Diagnostics.EventLogEntryType>, и <xref:System.Diagnostics.EventLogEntryCollection> классы.  
  
-   <xref:System.Diagnostics.Process> Класс предоставляет функциональные возможности для наблюдения за системными процессами по сети, а также запускать и останавливать локальные системные процессы. В дополнение к получению списка выполняющихся процессов (путем указания компьютера, имя процесса или идентификатор процесса) или просмотра сведений о процессе, имеющем доступ к процессору, можно получить подробную информацию о потоках и модули обоих через <xref:System.Diagnostics.Process> сам по себе класс и с <xref:System.Diagnostics.ProcessThread> и <xref:System.Diagnostics.ProcessModule> классы. <xref:System.Diagnostics.ProcessStartInfo> Класса позволяет указать различные элементы, с которого начинается новый процесс, такие как потоки ввода, вывода и ошибки, рабочие каталоги и команды командной строки, а также аргументы. Это позволяет контролировать поведение процессов. Другие классы позволяют задавать стили окна, процесс приоритеты потоков и взаимодействует с коллекциями потоков и модулей.  
  
-   <xref:System.Diagnostics.PerformanceCounter> Класс позволяет отслеживать производительность системы, хотя <xref:System.Diagnostics.PerformanceCounterCategory> класс предоставляет способ создания новых пользовательских счетчиков и категорий. Можно записывать в локальные пользовательские счетчики и из локальных и удаленных счетчиков (системы как и пользовательских) для чтения. Можно создать выборку счетчиков с помощью <xref:System.Diagnostics.PerformanceCounter> класса и вычисления результатов из последовательных счетчика производительности с помощью <xref:System.Diagnostics.CounterSample> класса. <xref:System.Diagnostics.CounterCreationData> Класс позволяет создавать несколько счетчиков в категории и указывать их типы. Другие классы, связанные с компонентом счетчика производительности предоставляют доступ к коллекциям, полномочие счетчика и типы счетчиков.  
  
 <xref:System.Diagnostics> Пространство имен также предоставляет классы для отладки приложений и трассировки выполнения кода. Дополнительные сведения см. в описаниях классов <xref:System.Diagnostics.Trace> и <xref:System.Diagnostics.Debug>.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>