<Type Name="Clipboard" FullName="System.Windows.Forms.Clipboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88a16129d664b8c905b8e4e7cabb75c81fc669a8" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57930509" /></Metadata><TypeSignature Language="C#" Value="public sealed class Clipboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Clipboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Clipboard" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Clipboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clipboard sealed" />
  <TypeSignature Language="F#" Value="type Clipboard = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет методы для помещения данных в системный буфер обмена и извлечения данных из системного буфера обмена. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список стандартных форматов для использования с <xref:System.Windows.Forms.Clipboard> , представлена в разделе <xref:System.Windows.Forms.DataFormats> класса.  
  
 Вызовите <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> поместить данные в буфере обмена, заменив его текущее содержимое. Чтобы поместить сохраненную копию данных в буфер обмена, задайте `copy` параметр `true`.  
  
> [!NOTE]
>  Чтобы поместить данные в буфер обмена в нескольких форматах, используйте <xref:System.Windows.Forms.DataObject> класса или <xref:System.Windows.Forms.IDataObject> реализации. Поместите данные в буфер обмена в нескольких форматах, чтобы максимизировать возможность, что целевое приложение, требования к формату, которого вы можете не знать, можно успешного получения требуемых данных.  
  
 Вызовите <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> для получения данных из буфера обмена. Данные возвращаются в виде объекта, реализующего <xref:System.Windows.Forms.IDataObject> интерфейс. Используйте методы, указанные <xref:System.Windows.Forms.IDataObject> и поля в <xref:System.Windows.Forms.DataFormats> для извлечения данных из объекта. Если вы не знаете формат данных, вы получили, вызвать <xref:System.Windows.Forms.IDataObject.GetFormats%2A> метод <xref:System.Windows.Forms.IDataObject> интерфейс для получения списка всех форматов, эти данные хранятся в. Затем вызовите <xref:System.Windows.Forms.IDataObject.GetData%2A> метод <xref:System.Windows.Forms.IDataObject> интерфейс и указать формат, который можно использовать приложение.  
  
 В [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], <xref:System.Windows.Forms.Clipboard> класс предоставляет дополнительные методы, которые упрощают процесс для работы с системного буфера обмена. Вызовите <xref:System.Windows.Forms.Clipboard.Clear%2A> метод, чтобы удалить все данные из буфера обмена. Чтобы добавить данные определенного формата в буфер обмена, заменив существующие данные, вызовите соответствующий `Set` *формат* метод, такой как <xref:System.Windows.Forms.Clipboard.SetText%2A>, или вызвать <xref:System.Windows.Forms.Clipboard.SetData%2A> метод, чтобы задать формат. Для получения данных определенного формата из буфера обмена, сначала вызовите соответствующий `Contains` *формат* метод (например <xref:System.Windows.Forms.Clipboard.ContainsText%2A>) метод для определения, содержит ли буфер обмена данные в, форматирование, а затем вызвать соответствующие `Get` *формат* метод (например <xref:System.Windows.Forms.Clipboard.GetText%2A>) для получения данных, если в буфере. Чтобы задать формат в этих операциях, вызовите <xref:System.Windows.Forms.Clipboard.ContainsData%2A> и <xref:System.Windows.Forms.Clipboard.GetData%2A> методы вместо этого.  
  
> [!NOTE]
>  Все приложения на основе Windows совместно использовать в системный буфер обмена, поэтому содержимое изменяется при переходе в другое приложение.  
>   
>  Объект должен поддерживать сериализацию для помещения в буфер обмена. Если методу буфера обмена передается несериализуемый объект, метод завершится с ошибкой без выдачи исключения. См. в разделе <xref:System.Runtime.Serialization> Дополнительные сведения о сериализации. Если для целевого приложения требуется формат очень конкретных данных, заголовки, добавляемые данные в процессе сериализации могут помешать применению распознать данные. Чтобы сохранить вашего формата данных, добавления данных в качестве <xref:System.Byte> массив <xref:System.IO.MemoryStream> и передать <xref:System.IO.MemoryStream> для <xref:System.Windows.Forms.DataObject.SetData%2A> метод.  
>   
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
>   
>  Особые замечания, может потребоваться при использовании формата метафайла с буфером обмена. Из-за ограничения в текущей реализации <xref:System.Windows.Forms.DataObject> класса, в формате метафайла, используемых в .NET Framework могут не распознаваться приложениями, которые используют более старый формат метафайла. В этом случае необходимо взаимодействовать с буфера обмена Win32 прикладного программирования (API).
  
   
  
## Examples  
 В следующем примере кода используется <xref:System.Windows.Forms.Clipboard> методы для помещения данных и получить его из системного буфера обмена. В этом коде предполагается `button1`, `button2`, `textBox1`, и `textBox2` созданы и формы.  
  
 `button1_Click` Вызовы методов <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> выделенный текст из текстового поля и поместить его в системном буфере обмена.  
  
 `button2_Click` Вызовы метода <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> для получения данных из системного буфера обмена. Код использует <xref:System.Windows.Forms.IDataObject> и <xref:System.Windows.Forms.DataFormats> для извлечения данных, возвращаемых и отображающий данные в `textBox2`.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <related type="Article" href="https://msdn.microsoft.com/library/15abda8b-0527-47c7-aedb-77ab595f2bf1">Дополнительные вопросы безопасности в формах Windows Forms</related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberSignature Language="F#" Value="static member Clear : unit -&gt; unit" Usage="System.Windows.Forms.Clipboard.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет все данные из буфера обмена.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку буфер обмена используется совместно несколькими процессами, вызов этого метода может повлиять на эти процессы.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 Ниже приведен пример этого члена.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Clipboard#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для очистки системного буфера обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public static bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsAudio();" />
      <MemberSignature Language="F#" Value="static member ContainsAudio : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsAudio " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Показывает, имеются ли в буфере обмена данные в формате <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</summary>
        <returns>Значение <see langword="true" />, если в буфере обмена имеются аудиозаписи; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет определить, содержит ли буфер обмена звуковых данных перед его с возвращением <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> метод.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для доступа в системный буфер обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsData">
      <MemberSignature Language="C#" Value="public static bool ContainsData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsData (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member ContainsData : string -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Искомый формат данных. Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <summary>Указывает, имеются ли в буфере обмена данные в указанном формате и могут ли они быть преобразованы в этот формат.</summary>
        <returns>Значение <see langword="true" />, если в буфере обмена имеются данные в указанном формате <paramref name="format" /> либо если они могут быть преобразованы в этот формат; в противном случае — значение <see langword="false" />. </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataFormats> Класс содержит имена предопределенных форматов, которые можно использовать с помощью этого метода.  
  
 Этот метод позволяет определить, содержит ли буфер обмена данные в указанном формате или формате, совместимом до извлечения его с <xref:System.Windows.Forms.Clipboard.GetData%2A> метод.  
  
> [!NOTE]
>  Данные могут преобразовываться в другой формат, если он был сохранен, указав, что преобразование разрешено, и в том случае, если запрошенный формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.  
>   
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 Ниже приведен пример этого члена.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для доступа в системный буфер обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public static bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsFileDropList();" />
      <MemberSignature Language="F#" Value="static member ContainsFileDropList : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Указывает, имеются ли в буфере обмена данные в формате <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> и могут ли они быть преобразованы в этот формат.</summary>
        <returns>Значение <see langword="true" />, если в буфере обмена имеется раскрывающийся список файлов; в противном случае — значение <see langword="false" />. </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Раскрывающийся список файлов — это коллекция строк, содержащих сведения о пути для файлов.  
  
 Этот метод позволяет определить, содержит ли буфер обмена раскрывающийся список файлов перед его с возвращением <xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> метод.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 Ниже приведен пример этого члена.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для доступа в системный буфер обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public static bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsImage();" />
      <MemberSignature Language="F#" Value="static member ContainsImage : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Указывает, имеются ли в буфере обмена данные в формате <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> и могут ли они быть преобразованы в этот формат.</summary>
        <returns>Значение <see langword="true" />, если в буфере обмена имеются графические данные; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет определить, содержит ли буфер данных изображения перед его с возвращением <xref:System.Windows.Forms.Clipboard.GetImage%2A> метод.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 Ниже приведен пример этого члена.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для доступа в системный буфер обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Показывает, имеются ли в буфере обмена текстовые данные.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText();" />
      <MemberSignature Language="F#" Value="static member ContainsText : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Показывает, имеются ли в буфере обмена данные в формате <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> или <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> в зависимости от операционной системы.</summary>
        <returns>Значение <see langword="true" />, если в буфере обмена имеются текстовые данные; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод проверяет наличие данных в <xref:System.Windows.Forms.TextDataFormat.UnicodeText> форматироват [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] и [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. В противном случае этот метод проверяет наличие данных в <xref:System.Windows.Forms.TextDataFormat.Text> формате.  
  
 Этот метод позволяет определить, содержит ли буфер обмена текстовые данные до извлечения его с <xref:System.Windows.Forms.Clipboard.GetText%2A> метод.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 В следующем примере демонстрируется перегрузка <xref:System.Windows.Forms.Clipboard.ContainsText%2A> , аналогичную этой перегрузки метода.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для доступа в системный буфер обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.Text" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Одно из значений <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Показывает, имеются ли в буфере обмена текстовые данные в формате, указываемом заданным значением <see cref="T:System.Windows.Forms.TextDataFormat" />.</summary>
        <returns>Значение <see langword="true" />, если в буфере обмена имеются текстовые данные в значении, заданном для <paramref name="format" />; в противном случае — значение <see langword="false" />. </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет определить, содержит ли буфер обмена текстовые данные до извлечения его с <xref:System.Windows.Forms.Clipboard.GetText%2A> метод.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 Ниже приведен пример этого члена.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> не является допустимым значением <see cref="T:System.Windows.Forms.TextDataFormat" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для доступа в системный буфер обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ GetAudioStream();" />
      <MemberSignature Language="F#" Value="static member GetAudioStream : unit -&gt; System.IO.Stream" Usage="System.Windows.Forms.Clipboard.GetAudioStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает аудиопоток из буфера обмена.</summary>
        <returns>Поток <see cref="T:System.IO.Stream" />, содержащий аудиозаписи, или значение <see langword="null" />, если буфер обмена не содержит никаких данных в формате <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> метод, чтобы определить, содержит ли буфер звуковых данных перед его возвращением с помощью этого метода.  
  
 Используйте <xref:System.Windows.Forms.Clipboard.SetAudio%2A> метод, чтобы добавить звуковые данные в буфер обмена.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 Ниже приведен пример этого члена.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для доступа в системный буфер обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetData : string -&gt; obj" Usage="System.Windows.Forms.Clipboard.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Формат извлекаемых данных. Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <summary>Извлекает данные из буфера обмена в указанном формате.</summary>
        <returns>Объект <see cref="T:System.Object" />, представляющий данные буфера обмена, или значение <see langword="null" />, если буфер обмена не содержит никаких данных в формате <paramref name="format" /> или данных, которые могут быть преобразованы в этот формат.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.Clipboard.ContainsData%2A> метод, чтобы определить, содержит ли буфер обмена данные в указанном формате или формате, совместимом перед его возвращением с помощью этого метода.  
  
 Если этот метод не удается найти данные в указанном формате, он предпринимает попытку преобразования данных в формате. Если данные невозможно преобразовать в указанный формат, или при сохранении данных с автоматическим преобразованием, равным `false`, этот метод возвращает `null`.  
  
> [!NOTE]
>  Данные могут преобразовываться в другой формат, если он был сохранен, указав, что преобразование разрешено, и в том случае, если запрошенный формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.  
>   
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
 Используйте <xref:System.Windows.Forms.Clipboard.SetData%2A> метод для добавления данных в буфер обмена в определенном формате.  
  
   
  
## Examples  
 Ниже приведен пример этого члена.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для доступа в системный буфер обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataObject">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.IDataObject GetDataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.IDataObject GetDataObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetDataObject" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataObject () As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::IDataObject ^ GetDataObject();" />
      <MemberSignature Language="F#" Value="static member GetDataObject : unit -&gt; System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.Clipboard.GetDataObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает данные, которые находятся в данный момент в системном буфере обмена.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.IDataObject" />, представляющий данные, находящиеся в буфере обмена, или значение <see langword="null" />, если в буфере обмена данные отсутствуют.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку тип данных объекта, возвращаемого из буфера обмена может быть различным, этот метод возвращает данные в <xref:System.Windows.Forms.IDataObject>. После этого можно использовать методы <xref:System.Windows.Forms.IDataObject> интерфейс для извлечения данных с надлежащим типом.  
  
 Этот метод пытается получить данные в десять раз с интервалом 100 миллисекунд и создает <xref:System.Runtime.InteropServices.ExternalException> Если все попытки завершаются неудачей.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 В следующем примере кода используется <xref:System.Windows.Forms.Clipboard> методы для помещения данных и получить его из системного буфера обмена. В этом коде предполагается `button1`, `button2`, `textBox1`, и `textBox2` были размещены в форме.  
  
 `button1_Click` Вызовы методов <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> выделенный текст из текстового поля и поместить его в системном буфере обмена.  
  
 `button2_Click` Вызовы метода <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> для получения данных из системного буфера обмена. Код использует <xref:System.Windows.Forms.IDataObject> и <xref:System.Windows.Forms.DataFormats> для извлечения данных, возвращаемых. Данные отображаются в `textBox2`.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Данные невозможно извлечь из буфера обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA), и значение свойства <see cref="P:System.Windows.Forms.Application.MessageLoop" /> равно <see langword="true" />. Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для доступа в системный буфер обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberSignature Language="F#" Value="static member GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection" Usage="System.Windows.Forms.Clipboard.GetFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает из буфера обмена коллекцию имен файлов.</summary>
        <returns>Коллекция <see cref="T:System.Collections.Specialized.StringCollection" />, содержащая имена файлов, или значение <see langword="null" />, если буфер обмена не содержит никаких данных в формате <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> или данных, которые могут быть преобразованы в этот формат.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Раскрывающийся список файлов — это коллекция строк, содержащих сведения о пути для файлов.  
  
 Раскрывающийся список файлов хранится в буфер обмена как <xref:System.String> массива. Этот метод преобразует этот массив для <xref:System.Collections.Specialized.StringCollection> и возвращает коллекцию.  
  
 Используйте <xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A> метод, чтобы определить, содержит ли буфер обмена раскрывающийся список файлов перед его возвращением с помощью этого метода.  
  
 Используйте <xref:System.Windows.Forms.Clipboard.SetFileDropList%2A> метод, чтобы добавить раскрывающийся список файлов в буфер обмена.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 Ниже приведен пример этого члена.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для доступа в системный буфер обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ GetImage();" />
      <MemberSignature Language="F#" Value="static member GetImage : unit -&gt; System.Drawing.Image" Usage="System.Windows.Forms.Clipboard.GetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает изображения из буфера обмена.</summary>
        <returns>Объект <see cref="T:System.Drawing.Image" />, представляющий графические данные буфера обмена, или значение <see langword="null" />, если буфер обмена не содержит никаких данных в формате <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> или данных, которые могут быть преобразованы в этот формат.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.Clipboard.ContainsImage%2A> метод, чтобы определить, содержит ли буфер данных изображения перед его возвращением с помощью этого метода.  
  
 Используйте <xref:System.Windows.Forms.Clipboard.SetImage%2A> метод, чтобы добавить данные изображения в буфер обмена.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 Ниже приведен пример этого члена.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для доступа в системный буфер обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Извлекает текстовые данные из буфера обмена.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText();" />
      <MemberSignature Language="F#" Value="static member GetText : unit -&gt; string" Usage="System.Windows.Forms.Clipboard.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>В зависимости от операционной системы извлекает текстовые данные из буфера обмена в формате <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> или <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />.</summary>
        <returns>Текстовые данные буфера обмена или <see cref="F:System.String.Empty" />, если буфер обмена не содержит данных в формате <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> или <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> в зависимости от операционной системы.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает текстовые данные в <xref:System.Windows.Forms.TextDataFormat.UnicodeText> форматироват [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] и [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. В противном случае этот метод возвращает текстовые данные в <xref:System.Windows.Forms.TextDataFormat.Text> формате.  
  
 Используйте <xref:System.Windows.Forms.Clipboard.ContainsText%2A> метод, чтобы определить, содержит ли буфер обмена текстовые данные перед его возвращением с помощью этого метода.  
  
 Используйте <xref:System.Windows.Forms.Clipboard.SetText%2A> метод, чтобы добавить текстовые данные в буфер обмена.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 В следующем примере демонстрируется перегрузка <xref:System.Windows.Forms.Clipboard.GetText%2A> , аналогичную этой перегрузки метода.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для доступа в системный буфер обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member GetText : System.Windows.Forms.TextDataFormat -&gt; string" Usage="System.Windows.Forms.Clipboard.GetText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Одно из значений <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Извлекает текстовые данные из буфера обмена в формате, указанном заданным значением <see cref="T:System.Windows.Forms.TextDataFormat" />.</summary>
        <returns>Текстовые данные буфера обмена или <see cref="F:System.String.Empty" />, если буфер обмена не содержит данных в указанном формате.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.Clipboard.ContainsText%2A> метод, чтобы определить, содержит ли буфер обмена текстовые данные перед его возвращением с помощью этого метода.  
  
 Используйте <xref:System.Windows.Forms.Clipboard.SetText%2A> метод, чтобы добавить текстовые данные в буфер обмена.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 Ниже приведен пример этого члена.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> не является допустимым значением <see cref="T:System.Windows.Forms.TextDataFormat" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для доступа в системный буфер обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Очищает буфер обмена и добавляет данные в формате <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />, заменяющие текущие данные.</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberSignature Language="F#" Value="static member SetAudio : byte[] -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetAudio audioBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioBytes">Массив <see cref="T:System.Byte" />, содержащий аудиозаписи.</param>
        <summary>Очищает буфер обмена и добавляет массив <see cref="T:System.Byte" /> в формате обмена в формате <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> после его преобразования в <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для получения звуковых данных из буфера обмена, сначала используйте <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> метод, чтобы определить, содержит ли буфер звуковых данных, прежде чем получить его с <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> метод.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 В следующем примере демонстрируется перегрузка <xref:System.Windows.Forms.Clipboard.SetAudio%2A> , аналогичную этой перегрузки метода.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="audioBytes" /> — <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для добавления звуковых данных в системном буфере обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberSignature Language="F#" Value="static member SetAudio : System.IO.Stream -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetAudio audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioStream">Поток <see cref="T:System.IO.Stream" />, содержащий аудиозаписи.</param>
        <summary>Очищает буфер обмена и добавляет <see cref="T:System.IO.Stream" /> в формате <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для получения звуковых данных из буфера обмена, сначала используйте <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> метод, чтобы определить, содержит ли буфер звуковых данных, прежде чем получить его с <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> метод.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 Ниже приведен пример этого члена.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="audioStream" /> — <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для добавления звуковых данных в системном буфере обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public static void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetData : string * obj -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="data" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Формат задаваемых данных. Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <param name="data">Объект <see cref="T:System.Object" />, представляющий добавляемые данные.</param>
        <summary>Очищает буфер обмена и добавляет данные в указанном формате.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если вы не знаете формат целевого приложения, данные можно хранить в нескольких форматах, с помощью этого метода.  
  
 Хранить данные с помощью этого метода могут преобразовываться в совместимый формат при извлечении.  
  
 Чтобы извлечь данные из буфера обмена в определенном формате, сначала используйте <xref:System.Windows.Forms.Clipboard.ContainsData%2A> метод, чтобы определить, содержит ли буфер данных в этом формате до извлечения его с <xref:System.Windows.Forms.Clipboard.GetData%2A> метод.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 Ниже приведен пример этого члена.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" /> — <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для добавления данных любого типа или формата в системном буфере обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDataObject">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Очищает буфер обмена и добавляет в него данные.</summary>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Данные, которые будут помещены в буфер обмена.</param>
        <summary>Очищает буфер обмена и помещает в него несохраняемые данные.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данные будут удалены из системного буфера обмена при выходе приложения.  
  
 Этот метод пытается задать данные десять раз с интервалом 100 миллисекунд и создает <xref:System.Runtime.InteropServices.ExternalException> Если все попытки завершаются неудачей.  
  
> [!NOTE]
>  Объект должен поддерживать сериализацию для помещения в буфер обмена. Если к этому методу передается несериализуемый объект, он завершится ошибкой без создания исключения. См. в разделе <xref:System.Runtime.Serialization> Дополнительные сведения о сериализации.  
>   
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 В следующем примере кода используется <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> для размещения временных текстовые данные в системном буфере обмена. В `button1_Click` метод, выбранный текст копируется из `textBox1` и вставляется в буфер обмена. В `button2_Click` извлекается из буфера обмена и отображается в метод, данные `textBox2`. В этом коде предполагается `button1`, `button2`, `textBox1`, и `textBox2` создан и размещен в форме.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Данные невозможно поместить в буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <exception cref="T:System.ArgumentNullException">Значение <paramref name="data" /> равно <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для добавления данных любого типа или формата в системном буфере обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj * bool -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject (data, copy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">Данные, которые будут помещены в буфер обмена.</param>
        <param name="copy">Значение <see langword="true" />, если данные должны оставаться в буфере обмена после выхода из приложения; в противном случае — значение <see langword="false" />.</param>
        <summary>Очищает буфер обмена и помещает данные в него и указывает, должны ли данные оставаться в буфере после выхода из приложения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `copy` параметр `false`, данные будут удалены из системного буфера обмена при выходе приложения.  
  
 Этот метод пытается задать данные десять раз с интервалом 100 миллисекунд и создает <xref:System.Runtime.InteropServices.ExternalException> Если все попытки завершаются неудачей.  
  
> [!NOTE]
>  Объект должен поддерживать сериализацию для помещения в буфер обмена. Если к этому методу передается несериализуемый объект, он завершится ошибкой без создания исключения. См. в разделе <xref:System.Runtime.Serialization> Дополнительные сведения о сериализации.  
>   
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 Следующий метод выполняется в приложении. Она помещает сохраненную копию данных выделенный текст в текстовом поле в системном буфере обмена. В этом коде предполагается `button1`, `textBox1`, и `textBox2` создан и размещен в форме.  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#1)]  
  
 В другом приложении, следующий метод получает текст из системного буфера обмена и вставляет текст в `textBox2`. В этом коде предполагается `button2` и `textBox2` создан и размещен в форме.  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#2)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Данные невозможно поместить в буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <exception cref="T:System.ArgumentNullException">Значение <paramref name="data" /> равно <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для добавления данных любого типа или формата в системном буфере обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy, int32 retryTimes, int32 retryDelay) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean, retryTimes As Integer, retryDelay As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj * bool * int * int -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject (data, copy, retryTimes, retryDelay)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="copy" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="retryTimes" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="retryDelay" Type="System.Int32" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data">Данные, которые будут помещены в буфер обмена.</param>
        <param name="copy">Значение <see langword="true" />, если данные должны оставаться в буфере обмена после выхода из приложения; в противном случае — значение <see langword="false" />.</param>
        <param name="retryTimes">Число попыток поместить данные в буфер обмена.</param>
        <param name="retryDelay">Количество миллисекунд в паузе между последовательными попытками.</param>
        <summary>Очищает буфер обмена и пытается поместить данные в него указанное число раз и с заданной задержкой между попытками, оставляя при необходимости данные в буфере обмена после выхода из приложения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Добавление данных в буфер обмена может периодически давать сбой, если буфер обмена занят другой поток или приложение. Этот метод полезен для решения этой проблемы в средах с интенсивным использованием буфера обмена.  
  
 Если `copy` параметр `false`, данные будут удалены из системного буфера обмена при выходе приложения.  
  
> [!NOTE]
>  Объект должен поддерживать сериализацию для помещения в буфер обмена. Если к этому методу передается несериализуемый объект, он завершится ошибкой без создания исключения. См. в разделе <xref:System.Runtime.Serialization> Дополнительные сведения о сериализации.  
>   
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="retryTimes" /> меньше нуля.  
  
-или- 
 Значение параметра <paramref name="retryDelay" /> меньше нуля.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Данные невозможно поместить в буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для добавления данных любого типа или формата в системном буфере обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public static void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberSignature Language="F#" Value="static member SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetFileDropList filePaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filePaths">Коллекция <see cref="T:System.Collections.Specialized.StringCollection" />, содержащая имена файлов.</param>
        <summary>Очищает буфер обмена и добавляет коллекцию имен файлов в формате <see cref="F:System.Windows.Forms.DataFormats.FileDrop" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Раскрывающийся список файлов — это коллекция строк, содержащих сведения о пути для файлов.  
  
 Раскрывающийся список файлов хранится в буфер обмена как <xref:System.String> массива. Этот метод преобразует `filePaths` для <xref:System.String> массива перед добавлением его в буфер обмена.  
  
 Чтобы получить раскрывающийся список файлов из буфера обмена, сначала используйте <xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A> метод, чтобы определить, содержит ли буфер данных в этом формате до извлечения его с <xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> метод.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 Ниже приведен пример этого члена.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="filePaths" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="filePaths" /> не содержит никаких строковых значений.  
  
-или- 
Хотя бы одна из строк в <paramref name="filePaths" /> равна <see cref="F:System.String.Empty" />, содержит только пробелы, содержит один или более недопустимых символов согласно определению <see cref="F:System.IO.Path.InvalidPathChars" />, равна <see langword="null" />, содержит двоеточие (:) или превышает максимум, определенный в системе для длины строки.  
  
Дополнительные сведения см. в описании свойства <see cref="P:System.Exception.InnerException" /> исключения <see cref="T:System.ArgumentException" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для добавления данных в <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> формате в буфер обмена системы. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">для доступа к файловой системе. Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public static void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="static member SetImage : System.Drawing.Image -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="image">Объект <see cref="T:System.Drawing.Image" />, добавляемый в буфер обмена.</param>
        <summary>Очищает буфер обмена и добавляет <see cref="T:System.Drawing.Image" /> в формате <see cref="F:System.Windows.Forms.DataFormats.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получить данные изображения из буфера обмена, сначала используйте <xref:System.Windows.Forms.Clipboard.ContainsImage%2A> метод, чтобы определить, содержит ли буфер данных изображения перед его с возвращением <xref:System.Windows.Forms.Clipboard.GetImage%2A> метод.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 Ниже приведен пример этого члена.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="image" /> — <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для добавления данных в <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> формате в буфер обмена системы. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Очищает буфер обмена и добавляет в него текстовые данные.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member SetText : string -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Текст, добавляемый в буфер обмена.</param>
        <summary>Очищает буфер обмена и добавляет и добавляет текстовые данныев формате <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> или <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> в зависимости от операционной системы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод добавляет текстовые данные в <xref:System.Windows.Forms.TextDataFormat.UnicodeText> форматироват [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] и [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. В противном случае этот метод добавляет текстовые данные в <xref:System.Windows.Forms.TextDataFormat.Text> формате.  
  
 Чтобы получить текстовые данные из буфера обмена, сначала используйте <xref:System.Windows.Forms.Clipboard.ContainsText%2A> метод, чтобы определить, содержит ли буфер обмена текстовые данные до извлечения его с <xref:System.Windows.Forms.Clipboard.GetText%2A> метод.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 В следующем примере демонстрируется перегрузка <xref:System.Windows.Forms.Clipboard.SetText%2A> , аналогичную этой перегрузки метода.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="text" /> равно <see langword="null" /> или <see cref="F:System.String.Empty" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для добавления текстовых данных в системном буфере обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text, System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetText (text, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Текст, добавляемый в буфер обмена.</param>
        <param name="format">Одно из значений <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Очищает буфер обмена и добавляет текстовые данные в формате, указанном заданным значением <see cref="T:System.Windows.Forms.TextDataFormat" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получить текстовые данные из буфера обмена, сначала используйте <xref:System.Windows.Forms.Clipboard.ContainsText%2A> метод, чтобы определить, содержит ли буфер обмена текстовые данные до извлечения его с <xref:System.Windows.Forms.Clipboard.GetText%2A> метод.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard> Класс может использоваться только в потоках в однопотоковое подразделение (STA) режиме. Чтобы использовать этот класс, убедитесь, что ваш `Main` метод помечен атрибутом <xref:System.STAThreadAttribute> атрибута.  
  
   
  
## Examples  
 Ниже приведен пример этого члена.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Не удалось очистить буфер обмена. Обычно это происходит, когда буфер обмена используется другим процессом.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Текущий поток не выполняется в режиме апартмента с одним потоком (STA). Добавьте <see cref="T:System.STAThreadAttribute" /> в метод <see langword="Main" /> своего приложения.</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="text" /> равно <see langword="null" /> или <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> не является допустимым значением <see cref="T:System.Windows.Forms.TextDataFormat" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для добавления текстовых данных в системном буфере обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
  </Members>
</Type>