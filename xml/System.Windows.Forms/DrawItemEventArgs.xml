<Type Name="DrawItemEventArgs" FullName="System.Windows.Forms.DrawItemEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0842f84f8ad4293bd39f02b026ab0a8637e51408" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39933290" /></Metadata><TypeSignature Language="C#" Value="public class DrawItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawItemEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawItemEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для события <see langword="DrawItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DrawItem` События элементами управления владельца, такие как <xref:System.Windows.Forms.ListBox> и <xref:System.Windows.Forms.ComboBox> элементов управления. Он содержит все сведения, необходимые для пользователя для рисования указанного элемента, включая индекс элемента, <xref:System.Drawing.Rectangle>и <xref:System.Drawing.Graphics> на котором должно выполняться рисование.  
  
   
  
## Examples  
 Следующий пример демонстрирует создание определяемых владельцем <xref:System.Windows.Forms.ListBox> элементов. Код использует <xref:System.Windows.Forms.ListBox.DrawMode%2A> свойство, чтобы указать, что исправленные объекты, отображаемые размера и <xref:System.Windows.Forms.ListBox.DrawItem> событий для рисования каждого элемента в <xref:System.Windows.Forms.ListBox>. В примере кода используются свойства и методы <xref:System.Windows.Forms.DrawItemEventArgs> передаваемые в качестве параметра обработчику событий для рисования элементов. В этом примере предполагается, что <xref:System.Windows.Forms.ListBox> элемент управления, который называется `listBox1` был добавлен в форму и что <xref:System.Windows.Forms.ListBox.DrawItem> событие обработано обработчиком событий, определенный в примере кода. В примере также предполагается, что элементы были добавлены <xref:System.Windows.Forms.ListBox> с текстом «Apple», «Orange» и «Plum» в указанном порядке.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DrawItemEventHandler" />
    <altmember cref="T:System.Windows.Forms.ComboBox" />
    <altmember cref="T:System.Windows.Forms.ListBox" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.TabControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.DrawItemEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Font font, System.Drawing.Rectangle rect, int index, System.Windows.Forms.DrawItemState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Drawing.Font font, valuetype System.Drawing.Rectangle rect, int32 index, valuetype System.Windows.Forms.DrawItemState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DrawItemState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawItemEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Font ^ font, System::Drawing::Rectangle rect, int index, System::Windows::Forms::DrawItemState state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawItemEventArgs : System.Drawing.Graphics * System.Drawing.Font * System.Drawing.Rectangle * int * System.Windows.Forms.DrawItemState -&gt; System.Windows.Forms.DrawItemEventArgs" Usage="new System.Windows.Forms.DrawItemEventArgs (graphics, font, rect, index, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.DrawItemState" />
      </Parameters>
      <Docs>
        <param name="graphics">Поверхность <see cref="T:System.Drawing.Graphics" /> для рисования.</param>
        <param name="font">Объект <see cref="T:System.Drawing.Font" />, который необходимо использовать и который, как правило, является свойством <see cref="T:System.Drawing.Font" /> родительского элемента управления.</param>
        <param name="rect">Границы объекта <see cref="T:System.Drawing.Rectangle" />, в котором должно быть выполнено рисование.</param>
        <param name="index">Значение индекса <see cref="T:System.Windows.Forms.Control.ControlCollection" /> для изображаемого элемента.</param>
        <param name="state">Сведения <see cref="T:System.Windows.Forms.DrawItemState" /> элемента управления.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> для заданного элемента управления с заданным шрифтом, состоянием, поверхностью для рисования и границами рисунка.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Font font, System.Drawing.Rectangle rect, int index, System.Windows.Forms.DrawItemState state, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Drawing.Font font, valuetype System.Drawing.Rectangle rect, int32 index, valuetype System.Windows.Forms.DrawItemState state, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DrawItemState,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawItemEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Font ^ font, System::Drawing::Rectangle rect, int index, System::Windows::Forms::DrawItemState state, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawItemEventArgs : System.Drawing.Graphics * System.Drawing.Font * System.Drawing.Rectangle * int * System.Windows.Forms.DrawItemState * System.Drawing.Color * System.Drawing.Color -&gt; System.Windows.Forms.DrawItemEventArgs" Usage="new System.Windows.Forms.DrawItemEventArgs (graphics, font, rect, index, state, foreColor, backColor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.DrawItemState" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">Поверхность <see cref="T:System.Drawing.Graphics" /> для рисования.</param>
        <param name="font">Объект <see cref="T:System.Drawing.Font" />, который необходимо использовать и который, как правило, является свойством <see cref="T:System.Drawing.Font" /> родительского элемента управления.</param>
        <param name="rect">Границы объекта <see cref="T:System.Drawing.Rectangle" />, в котором должно быть выполнено рисование.</param>
        <param name="index">Значение индекса <see cref="T:System.Windows.Forms.Control.ControlCollection" /> для изображаемого элемента.</param>
        <param name="state">Сведения <see cref="T:System.Windows.Forms.DrawItemState" /> элемента управления.</param>
        <param name="foreColor">Основной цвет <see cref="T:System.Drawing.Color" /> для изображения элемента управления.</param>
        <param name="backColor">Цвет фона <see cref="T:System.Drawing.Color" /> для изображения элемента управления.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> для заданного элемента управления с заданным шрифтом, состоянием, основным цветом, цветом фона, поверхностью для рисования и границами рисунка.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color" Usage="System.Windows.Forms.DrawItemEventArgs.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает цвет фона для изображаемого элемента.</summary>
        <value>Цвет фона <see cref="T:System.Drawing.Color" /> для изображаемого элемента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если элемент имеет состояние <xref:System.Windows.Forms.DrawItemState.Selected?displayProperty=nameWithType>, <xref:System.Windows.Forms.DrawItemEventArgs.BackColor%2A> присваивается <xref:System.Drawing.SystemColors.HighlightText%2A?displayProperty=nameWithType>. Если состояние элемента не <xref:System.Windows.Forms.DrawItemState.Selected>, <xref:System.Windows.Forms.DrawItemEventArgs.BackColor%2A> свойству <xref:System.Drawing.SystemColors.Window%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> событий. Этот отчет помогает выяснить, когда происходит событие и может оказаться полезным при отладке.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.ListBox> с именем `ListBox1`. Убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawItemEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает прямоугольник, представляющий собой границы изображаемого элемента.</summary>
        <value>Объект <see cref="T:System.Drawing.Rectangle" />, представляющий границы изображаемого элемента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример демонстрирует создание определяемых владельцем <xref:System.Windows.Forms.ListBox> элементов. Код использует <xref:System.Windows.Forms.ListBox.DrawMode%2A> свойство, чтобы указать, что исправленные объекты, отображаемые размера и <xref:System.Windows.Forms.ListBox.DrawItem> событий для рисования каждого элемента в <xref:System.Windows.Forms.ListBox>. В примере кода используются свойства и методы <xref:System.Windows.Forms.DrawItemEventArgs> передаваемые в качестве параметра обработчику событий для рисования элементов. В этом примере предполагается, что <xref:System.Windows.Forms.ListBox> элемент управления, который называется `listBox1` был добавлен в форму и что <xref:System.Windows.Forms.ListBox.DrawItem> событие обработано обработчиком событий, определенный в примере кода. В примере также предполагается, что элементы были добавлены <xref:System.Windows.Forms.ListBox> с текстом «Apple», «Orange» и «Plum» в указанном порядке.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawItemEventArgs.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public virtual void DrawBackground ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawBackground() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawBackground ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawBackground();" />
      <MemberSignature Language="F#" Value="abstract member DrawBackground : unit -&gt; unit&#xA;override this.DrawBackground : unit -&gt; unit" Usage="drawItemEventArgs.DrawBackground " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Рисует фон в пределах границ, заданных в конструкторе <see cref="Overload:System.Windows.Forms.DrawItemEventArgs.#ctor" />, используя указанный цвет.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если элемент отрисовывается <xref:System.Windows.Forms.DrawItemState.Selected>, фон должен рисоваться с выделенным текстом.  
  
   
  
## Examples  
 Следующий пример демонстрирует создание определяемых владельцем <xref:System.Windows.Forms.ListBox> элементов. Код использует <xref:System.Windows.Forms.ListBox.DrawMode%2A> свойство, чтобы указать, что объекты, отображаемые имеют фиксированный размер и <xref:System.Windows.Forms.ListBox.DrawItem> событий для рисования каждого элемента в <xref:System.Windows.Forms.ListBox>. В примере кода используются свойства и методы <xref:System.Windows.Forms.DrawItemEventArgs> передаваемые в качестве параметра обработчику событий для рисования элементов. В этом примере предполагается, что <xref:System.Windows.Forms.ListBox> управления с именем `listBox1` был добавлен в форму и что <xref:System.Windows.Forms.ListBox.DrawItem> событие обработано обработчиком событий, который определен в примере кода. В примере также предполагается, что элементы были добавлены <xref:System.Windows.Forms.ListBox> с текстом «Apple», «Orange» и «Plum», в указанном порядке.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" /> в производном классе, не забудьте вызвать <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" /> метод базового класса.</para></block>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public virtual void DrawFocusRectangle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawFocusRectangle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawFocusRectangle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawFocusRectangle();" />
      <MemberSignature Language="F#" Value="abstract member DrawFocusRectangle : unit -&gt; unit&#xA;override this.DrawFocusRectangle : unit -&gt; unit" Usage="drawItemEventArgs.DrawFocusRectangle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Рисует прямоугольник фокуса в пределах границ, заданных в конструкторе <see cref="Overload:System.Windows.Forms.DrawItemEventArgs.#ctor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если есть изображаемого элемента <xref:System.Windows.Forms.DrawItemState.Focus>, рисуется прямоугольник фокуса.  
  
   
  
## Examples  
 Следующий пример демонстрирует создание определяемых владельцем <xref:System.Windows.Forms.ListBox> элементов. Код использует <xref:System.Windows.Forms.ListBox.DrawMode%2A> свойство, чтобы указать, что объекты, отображаемые имеют фиксированный размер и <xref:System.Windows.Forms.ListBox.DrawItem> событий для рисования каждого элемента в <xref:System.Windows.Forms.ListBox>. В примере кода используются свойства и методы <xref:System.Windows.Forms.DrawItemEventArgs> передаваемые в качестве параметра обработчику событий для рисования элементов. В этом примере предполагается, что <xref:System.Windows.Forms.ListBox> управления с именем `listBox1` был добавлен в форму и что <xref:System.Windows.Forms.ListBox.DrawItem> событие обработано обработчиком событий, который определен в примере кода. В примере также предполагается, что элементы были добавлены <xref:System.Windows.Forms.ListBox> с текстом «Apple», «Orange» и «Plum», в указанном порядке.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" /> в производном классе, не забудьте вызвать <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" /> метод базового класса.</para></block>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font" Usage="System.Windows.Forms.DrawItemEventArgs.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает шрифт, назначенный изображаемому элементу.</summary>
        <value>Объект <see cref="T:System.Drawing.Font" />, назначенный изображаемому элементу.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предполагаемый <xref:System.Drawing.Font>, обычно <xref:System.Windows.Forms.Control.Font%2A> свойство от родительского элемента.  
  
   
  
## Examples  
 Следующий пример демонстрирует создание определяемых владельцем <xref:System.Windows.Forms.ListBox> элементов. Код использует <xref:System.Windows.Forms.ListBox.DrawMode%2A> свойство, чтобы указать, что объекты, отображаемые имеют фиксированный размер и <xref:System.Windows.Forms.ListBox.DrawItem> событий для рисования каждого элемента в <xref:System.Windows.Forms.ListBox>. В примере кода используются свойства и методы <xref:System.Windows.Forms.DrawItemEventArgs> передаваемые в качестве параметра обработчику событий для рисования элементов. В этом примере предполагается, что <xref:System.Windows.Forms.ListBox> управления с именем `listBox1` был добавлен в форму и что <xref:System.Windows.Forms.ListBox.DrawItem> событие обработано обработчиком событий, который определен в примере кода. В примере также предполагается, что элементы были добавлены <xref:System.Windows.Forms.ListBox> с текстом «Apple», «Orange» и «Plum», в указанном порядке.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="P:System.Windows.Forms.Control.Font" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color" Usage="System.Windows.Forms.DrawItemEventArgs.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает основной цвет изображаемого элемента.</summary>
        <value>Основной цвет <see cref="T:System.Drawing.Color" /> изображаемого элемента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если элемент имеет состояние <xref:System.Windows.Forms.DrawItemState.Selected?displayProperty=nameWithType>, <xref:System.Windows.Forms.DrawItemEventArgs.ForeColor%2A> присваивается <xref:System.Drawing.SystemColors.HighlightText%2A?displayProperty=nameWithType>. Если состояние элемента не <xref:System.Windows.Forms.DrawItemState.Selected>, <xref:System.Windows.Forms.DrawItemEventArgs.ForeColor%2A> свойству <xref:System.Drawing.SystemColors.WindowText%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> событий. Этот отчет помогает выяснить, когда происходит событие и может оказаться полезным при отладке.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.ListBox> с именем `ListBox1`. Убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawItemEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает графическую поверхность, используемую для рисования элемента.</summary>
        <value>Поверхность <see cref="T:System.Drawing.Graphics" />, используемая для рисования элемента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример демонстрирует создание определяемых владельцем <xref:System.Windows.Forms.ListBox> элементов. Код использует <xref:System.Windows.Forms.ListBox.DrawMode%2A> свойство, чтобы указать, что объекты, отображаемые имеют фиксированный размер и <xref:System.Windows.Forms.ListBox.DrawItem> событий для рисования каждого элемента в <xref:System.Windows.Forms.ListBox>. В примере кода используются свойства и методы <xref:System.Windows.Forms.DrawItemEventArgs> передаваемые в качестве параметра обработчику событий для рисования элементов. В этом примере предполагается, что <xref:System.Windows.Forms.ListBox> управления с именем `listBox1` был добавлен в форму и что <xref:System.Windows.Forms.ListBox.DrawItem> событие обработано обработчиком событий, который определен в примере кода. В примере также предполагается, что элементы были добавлены <xref:System.Windows.Forms.ListBox> с текстом «Apple», «Orange» и «Plum», в указанном порядке.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawItemEventArgs.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.DrawItemEventArgs.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение индекса для изображаемого элемента.</summary>
        <value>Числовое значение, представляющее значение <see cref="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" /> изображаемого элемента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство возвращает <xref:System.Windows.Forms.Control.ControlCollection.Item%2A> значение элемента, отрисовывается <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>. Это свойство может возвращать значение -1, если itemswere удален из списка.  
  
   
  
## Examples  
 Следующий пример демонстрирует создание определяемых владельцем <xref:System.Windows.Forms.ListBox> элементов. Код использует <xref:System.Windows.Forms.ListBox.DrawMode%2A> свойство, чтобы указать, что объекты, отображаемые имеют фиксированный размер и <xref:System.Windows.Forms.ListBox.DrawItem> событий для рисования каждого элемента в <xref:System.Windows.Forms.ListBox>. В примере кода используются свойства и методы <xref:System.Windows.Forms.DrawItemEventArgs> передаваемые в качестве параметра обработчику событий для рисования элементов. В этом примере предполагается, что <xref:System.Windows.Forms.ListBox> управления с именем `listBox1` был добавлен в форму и что <xref:System.Windows.Forms.ListBox.DrawItem> событие обработано обработчиком событий, который определен в примере кода. В примере также предполагается, что элементы были добавлены <xref:System.Windows.Forms.ListBox> с текстом «Apple», «Orange» и «Plum», в указанном порядке.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DrawItemState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawItemState State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As DrawItemState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DrawItemState State { System::Windows::Forms::DrawItemState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.DrawItemState" Usage="System.Windows.Forms.DrawItemEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает состояние изображаемого элемента.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.DrawItemState" />, представляющий состояние изображаемого элемента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение этого свойства может представлять собой сочетание <xref:System.Windows.Forms.DrawItemState> членов перечисления. Члены могут объединяться с помощью побитовых операторов.  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> событий. Этот отчет помогает выяснить, когда происходит событие и может оказаться полезным при отладке.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.ListBox> с именем `ListBox1`. Убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
  </Members>
</Type>