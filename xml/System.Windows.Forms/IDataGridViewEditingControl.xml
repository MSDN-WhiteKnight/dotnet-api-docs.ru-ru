<Type Name="IDataGridViewEditingControl" FullName="System.Windows.Forms.IDataGridViewEditingControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6946e2ddaa41da9e39b6d9a6780adfa274ab97a2" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53223283" /></Metadata><TypeSignature Language="C#" Value="public interface IDataGridViewEditingControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataGridViewEditingControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataGridViewEditingControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataGridViewEditingControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataGridViewEditingControl" />
  <TypeSignature Language="F#" Value="type IDataGridViewEditingControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет общие функции для элементов управления, размещенных в ячейках объекта <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот интерфейс реализуется элементами управления, такими как <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> и <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>, расположенных в соответствующий <xref:System.Windows.Forms.DataGridView> ячейки, такие как <xref:System.Windows.Forms.DataGridViewComboBoxCell> и <xref:System.Windows.Forms.DataGridViewTextBoxCell>, если они находятся в режиме редактирования.  
  
 Ячейки типов, которые можно разместить редактирования набора элементов управления их <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> свойства <xref:System.Type> типа, представляющий редактирования элемента управления. Когда ячейка переходит в режим правки, выполняются следующие действия:  
  
1.  <xref:System.Windows.Forms.DataGridView> Элемент управления создает экземпляр типа элемента управления редактирования.  
  
2.  <xref:System.Windows.Forms.DataGridView> Элемент управления вызывает ячейки <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> метод. Можно переопределить этот метод для передачи значения ячейки в элементе управления редактирования.  
  
3.  <xref:System.Windows.Forms.DataGridView> Элемент управления вызывает в элементе управления редактирования <xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A> и передает в стиле текущей ячейки. Можно реализовать этот метод для инициализации внешнего вида элемента управления, чтобы он соответствовал внешний вид ячейки.  
  
4.  <xref:System.Windows.Forms.DataGridView> Элемент управления вызывает в элементе управления редактирования <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> метод. Можно реализовать этот метод для выполнения окончательных настроек в элемент управления редактирования, такие как выбор этого значения элемента управления.  
  
 Дополнительные сведения о реализации <xref:System.Windows.Forms.IDataGridViewEditingControl>, см. в разделе [как: Ведущие элементы управления в формах Windows Forms ячеек элемента управления DataGridView](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 Типы, такие как ячейки <xref:System.Windows.Forms.DataGridViewCheckBoxCell> , которые предоставляют пользовательский интерфейс (UI) для задания значений без размещения редактирования элемента управления реализуйте <xref:System.Windows.Forms.IDataGridViewEditingCell> интерфейс. В этом случае пользовательский Интерфейс отображается независимо от того, находится ли ячейка в режиме редактирования.  
  
 Другие ячейки типы, такие как <xref:System.Windows.Forms.DataGridViewButtonCell>, предоставляют пользовательский Интерфейс, но не храните указанные пользователем значения. В этом случае тип ячейки не реализует <xref:System.Windows.Forms.IDataGridViewEditingCell> или размещать элемент управления редактирования.  
  
   
  
## Examples  
 В следующем примере кода предоставляет реализацию этого интерфейса, который является производным от <xref:System.Windows.Forms.DateTimePicker>. Этот пример является частью большего примера, доступных в [как: Ведущие элементы управления в формах Windows Forms ячеек элемента управления DataGridView](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#300)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#300)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.IDataGridViewEditingCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxCell" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/e79a9d4e-64ec-41f5-93ec-f5492633cbb2">Практическое руководство. Размещение элементов управления в ячейках элемента управления DataGridView в Windows Forms</related>
  </Docs>
  <Members>
    <Member MemberName="ApplyCellStyleToEditingControl">
      <MemberSignature Language="C#" Value="public void ApplyCellStyleToEditingControl (System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCellStyleToEditingControl(class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyCellStyleToEditingControl(System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberSignature Language="F#" Value="abstract member ApplyCellStyleToEditingControl : System.Windows.Forms.DataGridViewCellStyle -&gt; unit" Usage="iDataGridViewEditingControl.ApplyCellStyleToEditingControl dataGridViewCellStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCellStyle">Стиль <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, используемый в качестве модели для пользовательского интерфейса.</param>
        <summary>Изменяет пользовательский интерфейс элемента управления в соответствии с заданным стилем ячейки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, реализация этого метода будет заданы свойства пользовательского интерфейса для элемента управления редактирования, такие как шрифт, цвет фона и цвет переднего плана, значения соответствующих свойств в `dataGridViewCellStyle`, который является стиль, используемый для размещения ячеек элемент управления.  
  
   
  
## Examples  
 В следующем примере кода предоставляет реализацию этого элемента. Этот пример является частью большего примера, доступных в [как: Ведущие элементы управления в формах Windows Forms ячеек элемента управления DataGridView](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#303)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlDataGridView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridView EditingControlDataGridView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridView EditingControlDataGridView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlDataGridView As DataGridView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridView ^ EditingControlDataGridView { System::Windows::Forms::DataGridView ^ get(); void set(System::Windows::Forms::DataGridView ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlDataGridView : System.Windows.Forms.DataGridView with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект <see cref="T:System.Windows.Forms.DataGridView" />, содержащий ячейку.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.DataGridView" />, содержащий редактируемую ячейку <see cref="T:System.Windows.Forms.DataGridViewCell" />, или значение <see langword="null" />, если отсутствует связанный объект <see cref="T:System.Windows.Forms.DataGridView" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object EditingControlFormattedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditingControlFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EditingControlFormattedValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlFormattedValue : obj with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает форматированное значение ячейки, которая изменяется редактором.</summary>
        <value>Объект <see cref="T:System.Object" />, представляющий форматированное значение ячейки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Форматированное значение представляет значение, как оно отображается в пользовательском интерфейсе элемента управления. Форматированное значение может отличаться в абсолютное значение и даже по типу данных от фактического значения, содержащегося в элементе управления.  
  
   
  
## Examples  
 В следующем примере кода предоставляет реализацию этого элемента. Этот пример является частью большего примера, доступных в [как: Ведущие элементы управления в формах Windows Forms ячеек элемента управления DataGridView](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#301)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#301)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlRowIndex">
      <MemberSignature Language="C#" Value="public int EditingControlRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditingControlRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditingControlRowIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlRowIndex : int with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает индекс родительской строки принимающей ячейки.</summary>
        <value>Индекс строки, содержащей ячейку, или значение -1, если нет родительской строки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.IDataGridViewEditingControl> Интерфейс не определяет соответствующий `ColumnIndex` свойство. Можно использовать <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A> свойства извлекается родительский элемент <xref:System.Windows.Forms.DataGridView> управление и использование <xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=nameWithType> свойства, чтобы определить индексы строки и столбца активной ячейки.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlValueChanged">
      <MemberSignature Language="C#" Value="public bool EditingControlValueChanged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditingControlValueChanged" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlValueChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditingControlValueChanged { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlValueChanged : bool with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, отличается ли значение элемента управления редактирования от значения принимающей ячейки.</summary>
        <value>Значение <see langword="true" />, если значение элемента управления отличается от значения ячейки, и значение <see langword="false" /> в противном случае.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged%2A> Свойству `true` чтобы указать, что состояние принимающей ячейки было изменено, и его пользовательский интерфейс (UI) должен быть обновлен, чтобы отразить это изменение в значении. Ячейки или таблицы приведет к сбросу это свойство, чтобы `false` после обновления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Возвращение <see langword="true" /> в реализации этого свойства не изменяется автоматически отображаемого значения. При изменении значения в элементе управления редактирования, необходимо уведомить <see cref="T:System.Windows.Forms.DataGridView" /> изменения путем передачи <see langword="true" /> для <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> метод.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlWantsInputKey">
      <MemberSignature Language="C#" Value="public bool EditingControlWantsInputKey (System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EditingControlWantsInputKey(valuetype System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditingControlWantsInputKey (keyData As Keys, dataGridViewWantsInputKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EditingControlWantsInputKey(System::Windows::Forms::Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="F#" Value="abstract member EditingControlWantsInputKey : System.Windows.Forms.Keys * bool -&gt; bool" Usage="iDataGridViewEditingControl.EditingControlWantsInputKey (keyData, dataGridViewWantsInputKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
        <Parameter Name="dataGridViewWantsInputKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyData">Объект <see cref="T:System.Windows.Forms.Keys" />, представляющий нажатую клавишу.</param>
        <param name="dataGridViewWantsInputKey">Значение <see langword="true" />, если объект <see cref="T:System.Windows.Forms.DataGridView" /> должен обрабатывать объект <see cref="T:System.Windows.Forms.Keys" /> в параметре <paramref name="keyData" />, и значение <see langword="false" /> в противном случае.</param>
        <summary>Определяет, является ли заданная клавиша обычной клавишей ввода, которая должна обрабатываться элементом управления "Поле ввода", или специальной клавишей, которая должна обрабатываться объектом <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
        <returns>Значение <see langword="true" />, если заданная клавиша является обычной клавишей ввода, которая должна обрабатываться элементом управления "Поле ввода", и значение <see langword="false" /> в противном случае.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления редактирования реализует этот метод, чтобы определить, какие клавиши ввода должны обрабатываться элементом управления, а какие должны обрабатываться с помощью <xref:System.Windows.Forms.DataGridView>.  
  
 <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> Вызывается метод <xref:System.Windows.Forms.DataGridView>. <xref:System.Windows.Forms.DataGridView> Передаст `true` для `dataGridViewWantsInputKey` когда он может обработать `keyData`. Если в элементе управления редактирования можно позволить <xref:System.Windows.Forms.DataGridView> обрабатывать `keyData`, <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> должен возвращать `false` при `dataGridViewWantsInputKey` является `true`. Другими реализациями <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> могут игнорировать `dataGridViewWantsInputKey` значение `true` и обрабатывать `keyData` в элементе управления редактирования.  
  
   
  
## Examples  
 В следующем примере кода предоставляет реализацию этого элемента. Этот пример является частью большего примера, доступных в [как: Ведущие элементы управления в формах Windows Forms ячеек элемента управления DataGridView](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#305)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#305)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingPanelCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Cursor EditingPanelCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor EditingPanelCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingPanelCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Cursor ^ EditingPanelCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditingPanelCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает курсор, используемый, когда указатель мыши находится над элементом <see cref="P:System.Windows.Forms.DataGridView.EditingPanel" />, но вне элемента управления редактирования.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.Cursor" />, который представляет указатель мыши, используемый для панели редактирования.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 На панели редактирования <xref:System.Windows.Forms.Panel> что узлы редактирования управления <xref:System.Windows.Forms.DataGridView> элемент управления находится в режиме правки. Реальный элемент управления редактирования могут не охватывать всю область панели редактирования. В этом случае <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor%2A> реализация должна возвратить курсор для использования при наведении указателя мыши на панель, но не над элементом управления. Как правило требуется возвращать тот же курсор, используемый элементом управления. Если вы хотите изменить курсор, который появляется, когда указатель находится над элементом управления, необходимо задать <xref:System.Windows.Forms.Control.Cursor%2A> свойства. Это можно задать в конструкторе класса <xref:System.Windows.Forms.IDataGridViewEditingControl> реализации, или можно задать в <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> реализации.  
  
   
  
## Examples  
 В следующем примере кода предоставляет реализацию этого элемента. Этот пример является частью большего примера, доступных в [как: Ведущие элементы управления в формах Windows Forms ячеек элемента управления DataGridView](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#311)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#311)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.Panel" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetEditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object GetEditingControlFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditingControlFormattedValue(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditingControlFormattedValue (context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditingControlFormattedValue(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="abstract member GetEditingControlFormattedValue : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj" Usage="iDataGridViewEditingControl.GetEditingControlFormattedValue context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">Побитовое сочетание значений <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />, которое задает контекст, в котором необходимы данные.</param>
        <summary>Извлекает форматированное значение ячейки.</summary>
        <returns>Объект <see cref="T:System.Object" />, представляющий форматированную версию содержимого ячейки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Форматированное значение представляет значение, как оно отображается в пользовательском интерфейсе элемента управления. Форматированное значение может отличаться в абсолютное значение и даже по типу данных от фактического значения, содержащегося в элементе управления.  
  
 Чтобы задать форматированное значение элемента управления, используйте <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A> свойство.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Возвращаемое значение в реализации этого метода изменение не автоматически отображаемого значения. При изменении значения в элементе управления редактирования, необходимо уведомить <see cref="T:System.Windows.Forms.DataGridView" /> изменения путем передачи <see langword="true" /> для <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> метод.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareEditingControlForEdit">
      <MemberSignature Language="C#" Value="public void PrepareEditingControlForEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareEditingControlForEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrepareEditingControlForEdit (selectAll As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrepareEditingControlForEdit(bool selectAll);" />
      <MemberSignature Language="F#" Value="abstract member PrepareEditingControlForEdit : bool -&gt; unit" Usage="iDataGridViewEditingControl.PrepareEditingControlForEdit selectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll">Значение <see langword="true" />, чтобы выбрать все содержимое ячейки, и значение <see langword="false" /> в противном случае.</param>
        <summary>Подготавливает выбранную ячейку к редактированию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предназначен для того, для подготовки для редактирования элемента управления и его содержимым. Например можно поместить курсор в конец содержимого или изменить выравнивание содержимого.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="RepositionEditingControlOnValueChange">
      <MemberSignature Language="C#" Value="public bool RepositionEditingControlOnValueChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RepositionEditingControlOnValueChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RepositionEditingControlOnValueChange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RepositionEditingControlOnValueChange { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RepositionEditingControlOnValueChange : bool" Usage="System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, нужно ли перемещать содержимое ячейки в случае изменения ее значения.</summary>
        <value>Значение <see langword="true" />, если необходимо перемещать содержимое, в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В некоторых ситуациях необходимо перемещать содержимое ячейки, при изменении значения. Например содержимое ячейки может потребоваться изменить положение ячейки переносит текст и увеличивается размер содержимого.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
  </Members>
</Type>