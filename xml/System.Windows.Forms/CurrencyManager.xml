<Type Name="CurrencyManager" FullName="System.Windows.Forms.CurrencyManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f03783a5b916963541b9e896c90a98d618b29bed" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57935280" /></Metadata><TypeSignature Language="C#" Value="public class CurrencyManager : System.Windows.Forms.BindingManagerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CurrencyManager extends System.Windows.Forms.BindingManagerBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CurrencyManager" />
  <TypeSignature Language="VB.NET" Value="Public Class CurrencyManager&#xA;Inherits BindingManagerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CurrencyManager : System::Windows::Forms::BindingManagerBase" />
  <TypeSignature Language="F#" Value="type CurrencyManager = class&#xA;    inherit BindingManagerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.BindingManagerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Управляет списком объектов <see cref="T:System.Windows.Forms.Binding" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CurrencyManager> Является производным от <xref:System.Windows.Forms.BindingManagerBase> класса. Используйте <xref:System.Windows.Forms.BindingContext> для возврата либо <xref:System.Windows.Forms.CurrencyManager> или <xref:System.Windows.Forms.PropertyManager>. Фактический возвращенный объект зависит от источника данных и члена данных, передаваемых <xref:System.Windows.Forms.BindingContext.Item%2A> свойство <xref:System.Windows.Forms.BindingContext>. Если источником данных является объект, который может возвращать только одно свойство (вместо списка объектов), то тип будет <xref:System.Windows.Forms.PropertyManager>. Например, если указать <xref:System.Windows.Forms.TextBox> как источник данных, <xref:System.Windows.Forms.PropertyManager> будут возвращены. Если, с другой стороны, источником данных является объект, реализующий <xref:System.Collections.IList>, <xref:System.ComponentModel.IListSource>, или <xref:System.ComponentModel.IBindingList> интерфейс, <xref:System.Windows.Forms.CurrencyManager> будут возвращены.  
  
 <xref:System.Windows.Forms.BindingManagerBase.Current%2A> Свойство возвращает текущий элемент в базовом списке. Чтобы изменить текущий элемент, установите <xref:System.Windows.Forms.BindingManagerBase.Position%2A> присваивается новое значение. Значение должно быть больше 0 и должно быть меньше, чем значение <xref:System.Windows.Forms.BindingManagerBase.Count%2A> свойства.  
  
 Если базовый источник данных реализует <xref:System.ComponentModel.IBindingList> интерфейс и <xref:System.ComponentModel.IBindingList.AllowNew%2A> свойству `true`, можно использовать <xref:System.Windows.Forms.CurrencyManager.AddNew%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода примере <xref:System.Windows.Forms.TextBox> управления со столбцом в <xref:System.Data.DataTable>, получает <xref:System.Windows.Forms.CurrencyManager> для привязки и устанавливает ее положение.  
  
 [!code-cpp[Classic CurrencyManager Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
    <altmember cref="T:System.Windows.Forms.BindingContext" />
    <altmember cref="T:System.Windows.Forms.Binding" />
  </Docs>
  <Members>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public override void AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddNew();" />
      <MemberSignature Language="F#" Value="override this.AddNew : unit -&gt; unit" Usage="currencyManager.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Добавляет новый элемент в базовый список.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод поддерживается только в том случае, если источник данных реализует <xref:System.ComponentModel.IBindingList> интерфейса и источник данных позволяет добавлять строки (<xref:System.ComponentModel.IBindingList.AllowNew%2A> — `true`).  
  
> [!NOTE]
>  Это свойство предназначено для сложной привязке элементов управления, такие как <xref:System.Windows.Forms.DataGrid> элемента управления, чтобы добавить в список новые элементы.  
  
 Обычно это свойство используется только в том случае, если вы создаете собственный элемент управления, которое включает в себя <xref:System.Windows.Forms.CurrencyManager>. В противном случае — для добавления элементов в том случае, если источником данных является <xref:System.Data.DataView>, использовать <xref:System.Data.DataView.AddNew%2A?displayProperty=nameWithType> метод <xref:System.Data.DataView> класса. Если источником данных является <xref:System.Data.DataTable>, использовать <xref:System.Data.DataTable.NewRow%2A> метод и добавьте строки <xref:System.Data.DataRowCollection>.  
  
   
  
## Examples  
 В следующем примере кода добавляет новый элемент в список с <xref:System.Windows.Forms.CurrencyManager.AddNew%2A> метод.  
  
 [!code-cpp[Classic CurrencyManager.AddNew Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.AddNew Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.AddNew Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.AddNew Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.AddNew Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.AddNew Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Базовый источник данных не реализует <see cref="T:System.ComponentModel.IBindingList" /> или источник данных создал исключение, поскольку пользователь попытался добавить строку в объект <see cref="T:System.Data.DataView" />, который доступен только для чтения или имеет фиксированный размер.</exception>
        <altmember cref="P:System.ComponentModel.IBindingList.AllowNew" />
        <altmember cref="M:System.Data.DataView.AddNew" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <Member MemberName="CancelCurrentEdit">
      <MemberSignature Language="C#" Value="public override void CancelCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CancelCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CancelCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CancelCurrentEdit();" />
      <MemberSignature Language="F#" Value="override this.CancelCurrentEdit : unit -&gt; unit" Usage="currencyManager.CancelCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отменяет текущую операцию редактирования.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод поддерживается только в том случае, если объекты, содержащиеся в источнике данных реализуют <xref:System.ComponentModel.IEditableObject> интерфейс. Если объекты, содержащиеся в источнике данных, не реализуют <xref:System.ComponentModel.IEditableObject> интерфейс, изменения, внесенные в данные не будут отменены.  
  
> [!NOTE]
>  Это свойство предназначено для использования сложных элементов управления с привязкой к данным, таких как <xref:System.Windows.Forms.DataGrid> элемента управления, чтобы отменить изменения. Например, в том случае, когда пользователь нажимает клавишу ESC, <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> вызывается метод <xref:System.Windows.Forms.CurrencyManager> для <xref:System.Windows.Forms.DataGrid>. Если вы создаете элемент управления, используют эту же функцию, не следует использовать этот метод. Вместо этого используйте <xref:System.Data.DataRowView.CancelEdit%2A> метод <xref:System.Data.DataRowView> класса.  
  
   
  
## Examples  
 В следующем примере кода используется <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> когда пользователь нажимает клавишу ESC.  
  
 [!code-cpp[Classic CurrencyManager.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.CancelCurrentEdit Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.CancelCurrentEdit Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.CancelCurrentEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit" />
      </Docs>
    </Member>
    <Member MemberName="CheckEmpty">
      <MemberSignature Language="C#" Value="protected void CheckEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.CheckEmpty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckEmpty();" />
      <MemberSignature Language="F#" Value="member this.CheckEmpty : unit -&gt; unit" Usage="currencyManager.CheckEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает исключение, если список отсутствует или пуст.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">Список отсутствует или пуст.</exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CurrencyManager.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.CurrencyManager.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает число элементов в списке.</summary>
        <value>Число элементов в списке.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство count, чтобы определить, когда был достигнут конец списка. Так как <xref:System.Windows.Forms.CurrencyManager> поддерживает всегда имеет от нуля массив элементов, в конец списка <xref:System.Windows.Forms.CurrencyManager.Count%2A> минус один.  
  
   
  
## Examples  
 В следующем примере кода используется для итерации по списку до окончательного элемента, определяется <xref:System.Windows.Forms.CurrencyManager.Count%2A> свойство, будет достигнут.  
  
 [!code-cpp[Classic CurrencyManager.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.Count Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Current" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public override object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CurrencyManager.Current" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Windows.Forms.CurrencyManager.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает текущий элемент в списке.</summary>
        <value>Элемент списка типа <see cref="T:System.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для получения текущего элемента, необходимо знать тип данных для приведения. Например, если источником данных является <xref:System.Data.DataView> или <xref:System.Data.DataTable>, необходимо привести текущий элемент в виде <xref:System.Data.DataRowView> объекта.  
  
   
  
## Examples  
 В следующем примере кода используется <xref:System.Windows.Forms.CurrencyManager.Current%2A> свойства `ContactName` для текущего элемента в списке.  
  
 [!code-cpp[Classic CurrencyManager.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.Current Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Count" />
      </Docs>
    </Member>
    <Member MemberName="EndCurrentEdit">
      <MemberSignature Language="C#" Value="public override void EndCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndCurrentEdit();" />
      <MemberSignature Language="F#" Value="override this.EndCurrentEdit : unit -&gt; unit" Usage="currencyManager.EndCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Завершает текущую операцию редактирования.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод поддерживается только в том случае, если объекты, содержащиеся в источнике данных реализуют <xref:System.ComponentModel.IEditableObject> или <xref:System.ComponentModel.ICancelAddNew> интерфейсов.  
  
> [!NOTE]
>  Это свойство предназначено для использования сложных элементов управления с привязкой к данным, таких как <xref:System.Windows.Forms.DataGridView> элемента управления. Если вы создаете элемент управления, используют эту же функцию, не следует использовать этот метод. Вместо этого Если источником данных является либо <xref:System.Data.DataView> или <xref:System.Data.DataTable>, использовать <xref:System.Data.DataRowView.EndEdit%2A> метод <xref:System.Data.DataRowView> класса.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>.  
  
 [!code-cpp[Classic CurrencyManager.EndCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.EndCurrentEdit Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.EndCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.EndCurrentEdit Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.EndCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.EndCurrentEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="T:System.ComponentModel.ICancelAddNew" />
      </Docs>
    </Member>
    <Member MemberName="finalType">
      <MemberSignature Language="C#" Value="protected Type finalType;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Type finalType" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.CurrencyManager.finalType" />
      <MemberSignature Language="VB.NET" Value="Protected finalType As Type " />
      <MemberSignature Language="C++ CLI" Value="protected: Type ^ finalType;" />
      <MemberSignature Language="F#" Value="val mutable finalType : Type" Usage="System.Windows.Forms.CurrencyManager.finalType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает тип данных списка.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.GetItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetItemProperties () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties();" />
      <MemberSignature Language="F#" Value="override this.GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="currencyManager.GetItemProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию дескрипторов свойств для базового списка.</summary>
        <returns>Коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> для списка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.PropertyDescriptorCollection> Для <xref:System.Windows.Forms.CurrencyManager> используется для указания столбца в списке.  
  
   
  
## Examples  
 В следующем примере кода используется <xref:System.Windows.Forms.CurrencyManager.GetItemProperties%2A> метод для возврата <xref:System.ComponentModel.PropertyDescriptorCollection> для <xref:System.Windows.Forms.BindingManagerBase>. Пример, после чего выводит <xref:System.ComponentModel.MemberDescriptor.Name%2A> и <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> каждого <xref:System.ComponentModel.PropertyDescriptor> в коллекции.  
  
 [!code-cpp[Classic CurrencyManager.GetItemProperties Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.GetItemProperties Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.GetItemProperties Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.GetItemProperties Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.GetItemProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.GetItemProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.GetItemProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="protected internal override string GetListName (System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetListName(class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetListName (listAccessors As ArrayList) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetListName(System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="override this.GetListName : System.Collections.ArrayList -&gt; string" Usage="currencyManager.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listAccessors">Объект <see cref="T:System.Collections.ArrayList" /> свойств, который требуется найти в источнике данных.</param>
        <summary>Получает имя списка, предоставляющего данные для привязки, с использованием заданного набора связанных свойств.</summary>
        <returns>В случае успеха — объект <see cref="T:System.String" />, содержащий имя списка, предоставляющего данные для связывания; в противном случае — строка <see cref="F:System.String.Empty" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для <xref:System.Windows.Forms.CurrencyManager.GetListName%2A> метод было успешным, должен иметь тип базового списка <xref:System.ComponentModel.ITypedList>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.GetItemProperties" />
      </Docs>
    </Member>
    <Member MemberName="ItemChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemChangedEventHandler ItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemChangedEventHandler ItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CurrencyManager.ItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemChanged As ItemChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemChangedEventHandler ^ ItemChanged;" />
      <MemberSignature Language="F#" Value="member this.ItemChanged : System.Windows.Forms.ItemChangedEventHandler " Usage="member this.ItemChanged : System.Windows.Forms.ItemChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении текущего элемента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CurrencyManager.ItemChanged> Событие произойдет в том случае, когда пользователь вызывает <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> или <xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> метод.  
  
 <xref:System.Windows.Forms.CurrencyManager.ItemChanged> Событие возникает, только когда сам элемент был изменен каким-либо образом. Например если значение элемента изменяется от 10 42, произойдет событие. Это не следует путать с <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> событий, где элемент был изменен с новым элементом.  
  
 Это событие также возникает при изменении базовых данных. Например, если изменить значение <xref:System.Data.DataRowView>, <xref:System.Windows.Forms.CurrencyManager.ItemChanged> событие произойдет.  
  
> [!NOTE]
>  При создании собственного элемента управления, который использует <xref:System.Windows.Forms.CurrencyManager>, следует использовать <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> вместо <xref:System.Windows.Forms.CurrencyManager.ItemChanged?displayProperty=nameWithType> событий. <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType%2A> Свойство <xref:System.ComponentModel.ListChangedEventArgs> позволяет определить тип действия, что произошло.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода добавляет обработчики событий для <xref:System.Windows.Forms.CurrencyManager.ItemChanged> и <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> события.  
  
 [!code-cpp[Classic CurrencyManager.ItemChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.ItemChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.ItemChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.ItemChanged Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.ItemChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.ItemChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Collections.IList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CurrencyManager.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ List { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.IList" Usage="System.Windows.Forms.CurrencyManager.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает список для данного объекта <see cref="T:System.Windows.Forms.CurrencyManager" />.</summary>
        <value>Объект <see cref="T:System.Collections.IList" />, содержащий список.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект, возвращенный <xref:System.Windows.Forms.CurrencyManager.List%2A> свойство может быть приведен к любому типу, который реализует <xref:System.Collections.IList> интерфейс. Это будет часто использоваться при известен тип базового списка. Например, если вы привязаны к <xref:System.Data.DataSet>, базовый список <xref:System.Data.DataView> (который реализует <xref:System.Collections.IList>). Другие классы, реализующие интерфейс (это не полный список) включают <xref:System.Array>, <xref:System.Collections.ArrayList>, и <xref:System.Collections.CollectionBase>.  
  
 Как использовать <xref:System.Windows.Forms.CurrencyManager.List%2A> свойство зависит от класса, реализующего <xref:System.Collections.IList> интерфейс. Например, можно использовать <xref:System.Windows.Forms.CurrencyManager.List%2A> свойства, чтобы определить имя списка. Если источник данных реализует <xref:System.ComponentModel.ITypedList> интерфейс, можно использовать <xref:System.ComponentModel.ITypedList.GetListName%2A> метод для возврата имени текущей таблицы. Это показано в коде C# ниже:  
  
```csharp  
private void PrintCurrentListName(DataGrid myDataGrid){   
   CurrencyManager myCM = (CurrencyManager)   
   BindingContext[myDataGrid.DataSource, myDataGrid.DataMember];   
   IList myList = myCM.List;   
   ITypedList thisList = (ITypedList) myList;   
   Console.WriteLine(thisList.GetListName(null));   
}  
```  
  
   
  
## Examples  
 В следующем примере кода позволяет пользователям редактировать набор записей, но не Добавление новых правил. В <xref:System.Windows.Forms.DataGrid.Navigate> событие <xref:System.Windows.Forms.DataGrid> элемента управления, <xref:System.Collections.IList> возвращаемые <xref:System.Windows.Forms.CurrencyManager.List%2A> свойство приводится к <xref:System.Data.DataView> переменной. Свойству <xref:System.Data.DataView.AllowNew%2A> класса <xref:System.Data.DataView> присваивается значение `false`.  
  
 [!code-cpp[CurrencyManager.List Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/CurrencyManager.List Example/CPP/list.cpp#1)]
 [!code-csharp[CurrencyManager.List Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/CurrencyManager.List Example/CS/list.cs#1)]
 [!code-vb[CurrencyManager.List Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CurrencyManager.List Example/VB/list.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Current" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Count" />
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ListChangedEventHandler ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ListChangedEventHandler ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CurrencyManager.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ListChanged As ListChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::ListChangedEventHandler ^ ListChanged;" />
      <MemberSignature Language="F#" Value="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " Usage="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменениях в списке или при изменении элемента списка.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CurrencyManager.ListChanged> Генерируется событие <xref:System.Windows.Forms.CurrencyManager> класса при внесении изменений в элемент, с помощью методов, таких как <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>, и <xref:System.Windows.Forms.CurrencyManager.Refresh%2A>. Это событие также может возникнуть при источника данных изменяется напрямую, если он реализует <xref:System.ComponentModel.IBindingListView> интерфейс.  
  
 Связанный `OnListChanged` метод — это закрытый метод в этом классе.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.CurrencyManager.ListChanged> событий. Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке. Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.CurrencyManager> с именем `CurrencyManager1`. Убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.CurrencyManager.ListChanged> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#192](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#192)]
 [!code-vb[System.Windows.Forms.EventExamples#192](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#192)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="listposition">
      <MemberSignature Language="C#" Value="protected int listposition;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 listposition" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.CurrencyManager.listposition" />
      <MemberSignature Language="VB.NET" Value="Protected listposition As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int listposition;" />
      <MemberSignature Language="F#" Value="val mutable listposition : int" Usage="System.Windows.Forms.CurrencyManager.listposition" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает текущую позицию объекта <see cref="T:System.Windows.Forms.CurrencyManager" /> в списке.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если значение <xref:System.Windows.Forms.CurrencyManager.Count%2A> больше, чем 0, <xref:System.Windows.Forms.CurrencyManager.listposition> поле — это число между 0 и <xref:System.Windows.Forms.CurrencyManager.Count%2A> минус 1. Если <xref:System.Windows.Forms.CurrencyManager.Count%2A> равно 0, <xref:System.Windows.Forms.CurrencyManager.listposition> равно -1.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
      </Docs>
    </Member>
    <Member MemberName="MetaDataChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MetaDataChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MetaDataChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CurrencyManager.MetaDataChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MetaDataChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MetaDataChanged;" />
      <MemberSignature Language="F#" Value="member this.MetaDataChanged : EventHandler " Usage="member this.MetaDataChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении метаданных объекта <see cref="P:System.Windows.Forms.CurrencyManager.List" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метаданные <xref:System.Windows.Forms.CurrencyManager.List%2A> состоит из базовой схемы <xref:System.Windows.Forms.Binding.DataSource%2A?displayProperty=nameWithType>. <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> Событие возникает при изменении этой схемы. Например <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> события при <xref:System.Data.DataColumn> программным образом добавляется <xref:System.Data.DataTable>.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> событий. Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке. Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.CurrencyManager> с именем `CurrencyManager1`. Убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#193](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#193)]
 [!code-vb[System.Windows.Forms.EventExamples#193](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#193)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnCurrentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnCurrentChanged : EventArgs -&gt; unit" Usage="currencyManager.OnCurrentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные о событии.</param>
        <summary>Создает событие <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnCurrentItemChanged : EventArgs -&gt; unit" Usage="currencyManager.OnCurrentItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные о событии.</param>
        <summary>Создает событие <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChanged (System.Windows.Forms.ItemChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChanged(class System.Windows.Forms.ItemChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemChanged (e As ItemChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemChanged(System::Windows::Forms::ItemChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemChanged : System.Windows.Forms.ItemChangedEventArgs -&gt; unit&#xA;override this.OnItemChanged : System.Windows.Forms.ItemChangedEventArgs -&gt; unit" Usage="currencyManager.OnItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.Windows.Forms.ItemChangedEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.CurrencyManager.OnItemChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMetaDataChanged">
      <MemberSignature Language="C#" Value="protected internal void OnMetaDataChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnMetaDataChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnMetaDataChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnMetaDataChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnMetaDataChanged : EventArgs -&gt; unit" Usage="currencyManager.OnMetaDataChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.CurrencyManager.MetaDataChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.CurrencyManager.OnMetaDataChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPositionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPositionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPositionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPositionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPositionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPositionChanged : EventArgs -&gt; unit&#xA;override this.OnPositionChanged : EventArgs -&gt; unit" Usage="currencyManager.OnPositionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.CurrencyManager.OnPositionChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CurrencyManager.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Position { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int with get, set" Usage="System.Windows.Forms.CurrencyManager.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает текущую позицию в списке.</summary>
        <value>Число в диапазоне от 0 до <see cref="P:System.Windows.Forms.CurrencyManager.Count" /> минус 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Важным свойством класса <xref:System.Windows.Forms.CurrencyManager> класс является <xref:System.Windows.Forms.CurrencyManager.Position%2A> свойство. В список элементов можно просмотреть только один элемент из списка. Чтобы определить, какой элемент просматривается, задайте <xref:System.Windows.Forms.CurrencyManager.Position%2A> которого является число от 0 (начало списка) и <xref:System.Windows.Forms.CurrencyManager.Count%2A> минус 1 (конец списка).  
  
 Таким образом <xref:System.Windows.Forms.CurrencyManager.Position%2A> определяет валюты, то есть место в списке всех элементов управления, привязанного к тому же <xref:System.Windows.Forms.CurrencyManager>. Например представьте список, состоящий из двух столбцов с именами «FirstName» и «LastName». Два <xref:System.Windows.Forms.TextBox> элементы управления привязаны к тому же списку; первый элемент управления привязан к первому столбцу и второй элемент управления связан со вторым столбцом. Когда <xref:System.Windows.Forms.CurrencyManager.Position%2A> общих <xref:System.Windows.Forms.CurrencyManager> имеет значение в третьей позиции, оба элемента управления отображает соответствующие значения для этой позиции в списке. Другими словами Если элемент в позиции три состоит из имени «John» и фамилии «Smith», связанные элементы управления отображаются «John» и «Smith».  
  
   
  
## Examples  
 В следующем примере кода используются <xref:System.Windows.Forms.CurrencyManager.Position%2A> свойства, которые позволяют выполнять навигацию по списку.  
  
 [!code-cpp[Classic CurrencyManager.Position Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.Position Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.Position Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.Position Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.Position Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.Position Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Count" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Current" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="currencyManager.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывает принудительное повторное заполнение списка с привязкой к данным.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.CurrencyManager.Refresh%2A> метод, если источник данных не поддерживает уведомление, когда он изменяется (например, в том случае, если это <xref:System.Array>).  
  
   
  
## Examples  
 В следующем примере кода создается массив и привязывает его к <xref:System.Windows.Forms.TextBox> элемента управления, а затем изменяется одно значение. <xref:System.Windows.Forms.CurrencyManager.Refresh%2A> Метод может вызываться для обновления значения, отображаемого элементом <xref:System.Windows.Forms.TextBox> элемента управления.  
  
 [!code-cpp[Classic CurrencyManager.Refresh Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.Refresh Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.Refresh Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.Refresh Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.Refresh Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.Refresh Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public override void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveAt : int -&gt; unit" Usage="currencyManager.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс элемента, удаляемого из списка.</param>
        <summary>Удаляет элемент с указанным индексом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A> Метод разработана для обеспечения сложных элементов управления, такие как <xref:System.Windows.Forms.DataGrid> элемента управления, чтобы удалить элементы из списка. Не следует использовать этот метод фактически удалить элементы. Вместо этого используйте <xref:System.Data.DataView.Delete%2A> метод <xref:System.Data.DataView> класса для удаления элементов.  
  
   
  
## Examples  
 В следующем примере кода используется <xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A> метод, чтобы удалить элемент в позиции 0 в списке.  
  
 [!code-cpp[Classic CurrencyManager.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">По указанному индексу <paramref name="index" /> нет строки.</exception>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.AddNew" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Count" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public override void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResumeBinding();" />
      <MemberSignature Language="F#" Value="override this.ResumeBinding : unit -&gt; unit" Usage="currencyManager.ResumeBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возобновляет привязку данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> и <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> два метода, которые позволяют временную приостановку и возобновление в сценарии привязки данных. Обычно привязка данных приостанавливается, если пользователь должен дать возможность внести несколько изменений в поля данных перед проверкой. Например если необходимо изменить одно поле в соответствии с секунды, но проверка первое поле приведет к второго поля, чтобы находиться в состоянии ошибки.  
  
> [!NOTE]
>  С помощью <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> предотвращает изменения принудительно отправлены в источнике данных до <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> вызывается, но не во избежание изменения в источнике данных влияния на связанные элементы управления. Элементы управления, использующие сложную привязку данных, такие как <xref:System.Windows.Forms.DataGridView> управления, обновите их значения, основанные на события изменения, такие как <xref:System.Windows.Forms.CurrencyManager.ListChanged> событий. Вызов этого метода не помешает этих событий происходит. По этой причине <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> и <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> предназначены для использования с элементами управления простой привязкой, такие как <xref:System.Windows.Forms.TextBox>. Кроме того, эти методы можно использовать в сложном сценарии при подавлении <xref:System.Windows.Forms.BindingSource.ListChanged> события, задав <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> свойства `false`.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A>.  
  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public override void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SuspendBinding();" />
      <MemberSignature Language="F#" Value="override this.SuspendBinding : unit -&gt; unit" Usage="currencyManager.SuspendBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Приостанавливает действие привязки данных, чтобы предотвратить обновление привязанного источника данных в результате изменений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> И <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> методы позволяют временную приостановку и возобновление привязки данных в случае простой привязки. Обычно привязка данных приостанавливается, если пользователю необходимо внести несколько изменений в поля данных, перед проверкой. Например если необходимо изменить одно поле в соответствии с секунды, но проверка первое поле приведет к второго поля, чтобы находиться в состоянии ошибки.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> предотвращает применение к источнику данных, пока изменения <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> вызывается, но не предотвратить фактически все события. Элементы управления, использующие сложную привязку данных, такие как <xref:System.Windows.Forms.DataGridView> управления, обновите их значения на основе изменение событий, таких как <xref:System.Windows.Forms.CurrencyManager.ListChanged> событий. Таким образом, вызов <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> не помешает элементов управления с привязкой комплексное получение событий для обновления источника данных. По этой причине <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> и <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> предназначены для использования с элементами управления простой привязкой, такие как <xref:System.Windows.Forms.TextBox> элемента управления. Кроме того, эти методы можно использовать в сложном сценарии при подавлении <xref:System.Windows.Forms.BindingSource.ListChanged> события, задав <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> свойства `false`.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A>.  
  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#1)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#1)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="UpdateIsBinding">
      <MemberSignature Language="C#" Value="protected override void UpdateIsBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateIsBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.UpdateIsBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateIsBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateIsBinding();" />
      <MemberSignature Language="F#" Value="override this.UpdateIsBinding : unit -&gt; unit" Usage="currencyManager.UpdateIsBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обновляет состояние привязки.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>