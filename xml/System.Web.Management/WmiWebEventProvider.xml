<Type Name="WmiWebEventProvider" FullName="System.Web.Management.WmiWebEventProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b323b69301d8e6976b22274fac3677b2f57abfce" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51894146" /></Metadata><TypeSignature Language="C#" Value="public class WmiWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WmiWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WmiWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class WmiWebEventProvider&#xA;Inherits WebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiWebEventProvider : System::Web::Management::WebEventProvider" />
  <TypeSignature Language="F#" Value="type WmiWebEventProvider = class&#xA;    inherit WebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Реализует поставщика событий, сопоставляющего события мониторинга рабочего состояния ASP.NET событиям Windows Management Instrumentation (WMI).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Наблюдение за работоспособностью ASP.NET позволяет рабочей среде и рабочего персонала для управления развернутых веб-приложений. <xref:System.Web.Management> Пространство имен содержит типы событий работоспособности, отвечающей за упаковку данных состояния работоспособности приложения и типы поставщиков, отвечающий за обработку этих данных. Он также содержит вспомогательные типы, которые помогут при управлении событиями состояния.  
  
 ASP.NET использует этот класс для сопоставления событий мониторинга состояния с событиями WMI. Чтобы включить доставку событий мониторинга состояния ASP.NET в подсистеме WMI, необходимо настроить <xref:System.Web.Management.WmiWebEventProvider> класс, добавив соответствующие параметры в `<healthMonitoring>` раздел файла конфигурации.  
  
 Сведения, содержащиеся в файле Aspnet.mof описаны параметры функции WMI события, возникающие при маршрутизации события мониторинга состояния ASP.NET <xref:System.Web.Management.WmiWebEventProvider> класса и сопоставлять события WMI. Aspnet.mof файл хранится в каталоге сборки .NET Framework, например %windir%\Microsoft.NET\Framework\\*BuildNumber*. Дополнительные сведения об отчетах наблюдение за работоспособностью события, как события WMI, см. в разделе [NIB: использование инструментария WMI, чтобы доставлять события мониторинга состояния ASP.NET](https://msdn.microsoft.com/library/e57fea2f-610f-4432-9dd6-dd10a6c5bd10).  
  
> [!NOTE]
>  В большинстве случаев можно использовать типы мониторинга состояния ASP.NET как реализованные и управлять системой мониторинга состояния, указав значения в `<healthMonitoring>` раздел конфигурации. Также можно извлекать данные из типов мониторинга состояния, чтобы создавать собственные пользовательские события и поставщиков. Пример создания пользовательского поставщика, см. в разделе [как: реализация примера мониторинга пользовательского поставщика работоспособности](https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).  
  
   
  
## Examples  
 В следующем примере показано, как создать объект-получатель события WMI, выданный в результате события работоспособности веб приложения мониторинга состояния ASP.NET.  
  
> [!NOTE]
>  <xref:System.Web.Management.WmiWebEventProvider> Класс и типы событий для отслеживания по умолчанию уже настроены. Единственное, что необходимо сделать является определение правила для всех событий работоспособности. Помните, что события работоспособности не переданных <xref:System.Web.Management.WmiWebEventProvider> поставщика по умолчанию.  
  
 [!code-csharp[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/CS/WmiWebEventListener.cs#1)]
 [!code-vb[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/VB/WmiWebEventListener.vb#1)]  
  
 Следующий пример является выдержкой из файла конфигурации, показывающий `<healthMonitoring>` раздел конфигурации, позволяющий ASP.NET использовать <xref:System.Web.Management.WmiWebEventProvider> поставщика для обработки всех событий, наблюдение за работоспособностью.  
  
```  
<healthMonitoring>  
  <rules>  
    <add   
      name="Using Wmi"  
      eventName="All Events"   
      provider="WmiWebEventProvider"   
      profile="Critical"/>  
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Обзор наблюдения за состоянием системы ASP.NET</related>
    <related type="Article" href="https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c">Мониторинг работоспособности ASP.NET образец пользовательского поставщика</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab894e83-7e2f-4af8-a116-b1bff8f815b2">Установка и настройка поставщиков ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiWebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiWebEventProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Management.WmiWebEventProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется внутренним образом системой мониторинга состояния ASP.NET. Вы никогда не будет использоваться для создания экземпляра <xref:System.Web.Management.TraceWebEventProvider> класс, но вы можете вызвать этот конструктор, при реализации собственного типа поставщика, который наследует от этого класса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="wmiWebEventProvider.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет все события из буфера поставщика.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове этого метода, все события в буфере поставщика будут немедленно удалены, независимо от того, сколько времени прошло с момента последней записи или сколько событий находятся в буфере. Время последней записи сбрасывается до времени выполнения очистки. Вызов этого метода в том случае, если не включен механизм буферизации не оказывает влияния.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="wmiWebEventProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Имя, используемое в файле конфигурации для определения этого поставщика.</param>
        <param name="config">Объект <see cref="T:System.Collections.Specialized.NameValueCollection" />, указывающий атрибуты, присвоенные этому поставщику в файле конфигурации.</param>
        <summary>Задает первоначальные значения для этого объекта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET вызывает <xref:System.Web.Management.WmiWebEventProvider.Initialize%2A> метод после вызова метода <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> конструктор. Этот метод вызывается для инициализации <xref:System.Web.Management.WmiWebEventProvider> класс с именем, указанным в файле конфигурации и параметры конфигурации.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberSignature Language="F#" Value="override this.ProcessEvent : System.Web.Management.WebBaseEvent -&gt; unit" Usage="wmiWebEventProvider.ProcessEvent eventRaised" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised">Объект <see cref="T:System.Web.Management.WebBaseEvent" />, который требуется обработать.</param>
        <summary>Обрабатывает событие, переданное поставщику.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это метод, который вызывается наблюдения за работоспособностью ASP.NET для запуска обработки события.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Не удалось создать событие.</exception>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberSignature Language="F#" Value="override this.Shutdown : unit -&gt; unit" Usage="wmiWebEventProvider.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет задачи, связанные с завершением работы поставщика.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET вызывает <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> метод при завершении работы домена приложения, на котором размещена веб-приложения. Метод вызывается для выполнения задач, позволяющих приложению корректно завершить работу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>