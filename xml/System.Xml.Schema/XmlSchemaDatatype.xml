<Type Name="XmlSchemaDatatype" FullName="System.Xml.Schema.XmlSchemaDatatype">
  <Metadata><Meta Name="ms.openlocfilehash" Value="053f3ea890fa51a1db1810976115694d66352712" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57912751" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlSchemaDatatype" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlSchemaDatatype extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaDatatype" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlSchemaDatatype" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaDatatype abstract" />
  <TypeSignature Language="F#" Value="type XmlSchemaDatatype = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Класс <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> является абстрактным классом для сопоставления типов XSD-схем с типами CLR.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано использование <xref:System.Xml.Schema.XmlSchemaDatatype> класса.  
  
 [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CPP/datatype.cpp#1)]
 [!code-csharp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CS/datatype.cs#1)]
 [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/VB/datatype.vb#1)]  
  
 Следующий XML-файл используется для предыдущего примера кода.  
  
 [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/XML/example.xsd#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlSchemaDatatype ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlSchemaDatatype();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор вызывается конструкторами производного класса для инициализации состояния данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangeType">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразование заданного значения, тип которого является одним из допустимых представлений CLR типа XML-схемы, представленных<see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, в другое допустимое представление CLR с тем же значением.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public virtual object ChangeType (object value, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeType (value As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ChangeType(System::Object ^ value, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="abstract member ChangeType : obj * Type -&gt; obj&#xA;override this.ChangeType : obj * Type -&gt; obj" Usage="xmlSchemaDatatype.ChangeType (value, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">Входное значение, преобразовываемое в заданный тип.</param>
        <param name="targetType">Конечный тип, в который преобразовывается входное значение.</param>
        <summary>Преобразование заданного значения, тип которого является одним из допустимых представлений CLR типа XML-схемы, представленных<see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, в заданный тип CLR.</summary>
        <returns>Преобразованное входное значение.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о типе поддержке в <xref:System.Xml?displayProperty=nameWithType> классы и преобразование типов данных XML, см. в разделе [тип поддерживает в классах System.Xml](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) раздела.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <see cref="T:System.Object" /> или параметра <see cref="T:System.Type" /> — <see langword="null" />.</exception>
        <exception cref="T:System.InvalidCastException">Тип, представленный <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, не поддерживает преобразование из типа заданного значения в заданный тип.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public virtual object ChangeType (object value, Type targetType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type targetType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeType (value As Object, targetType As Type, namespaceResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ChangeType(System::Object ^ value, Type ^ targetType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ChangeType : obj * Type * System.Xml.IXmlNamespaceResolver -&gt; obj&#xA;override this.ChangeType : obj * Type * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlSchemaDatatype.ChangeType (value, targetType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">Входное значение, преобразовываемое в заданный тип.</param>
        <param name="targetType">Конечный тип, в который преобразовывается входное значение.</param>
        <param name="namespaceResolver"><see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения префиксов пространства имен. Это единственный вариант использования, если <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> представляет тип xs:QName или тип, производный от него.</param>
        <summary>Преобразование заданного значения, тип которого является одним из допустимых представлений CLR типа XML-схемы, представленных <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> в тип CLR, заданный с помощью <see cref="T:System.Xml.IXmlNamespaceResolver" />, если<see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> представляет тип xs:QName или тип, производный от него.</summary>
        <returns>Преобразованное входное значение.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о типе поддержке в <xref:System.Xml?displayProperty=nameWithType> классы и преобразование типов данных XML, см. в разделе [тип поддерживает в классах System.Xml](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) раздела.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <see cref="T:System.Object" /> или параметра <see cref="T:System.Type" /> — <see langword="null" />.</exception>
        <exception cref="T:System.InvalidCastException">Тип, представленный <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, не поддерживает преобразование из типа заданного значения в заданный тип.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDerivedFrom">
      <MemberSignature Language="C#" Value="public virtual bool IsDerivedFrom (System.Xml.Schema.XmlSchemaDatatype datatype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDerivedFrom(class System.Xml.Schema.XmlSchemaDatatype datatype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDerivedFrom (datatype As XmlSchemaDatatype) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDerivedFrom(System::Xml::Schema::XmlSchemaDatatype ^ datatype);" />
      <MemberSignature Language="F#" Value="abstract member IsDerivedFrom : System.Xml.Schema.XmlSchemaDatatype -&gt; bool&#xA;override this.IsDerivedFrom : System.Xml.Schema.XmlSchemaDatatype -&gt; bool" Usage="xmlSchemaDatatype.IsDerivedFrom datatype" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datatype" Type="System.Xml.Schema.XmlSchemaDatatype" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="datatype"><see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</param>
        <summary>Метод <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> всегда возвращает <see langword="false" />.</summary>
        <returns>Всегда возвращает значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.IXmlNamespaceResolver nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseValue(string s, class System.Xml.XmlNameTable nameTable, class System.Xml.IXmlNamespaceResolver nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ParseValue (s As String, nameTable As XmlNameTable, nsmgr As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ParseValue(System::String ^ s, System::Xml::XmlNameTable ^ nameTable, System::Xml::IXmlNamespaceResolver ^ nsmgr);" />
      <MemberSignature Language="F#" Value="abstract member ParseValue : string * System.Xml.XmlNameTable * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlSchemaDatatype.ParseValue (s, nameTable, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="nsmgr" Type="System.Xml.IXmlNamespaceResolver" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><see langword="string" />, чтобы проверить на соответствие простому типу.</param>
        <param name="nameTable"><see cref="T:System.Xml.XmlNameTable" />, чтобы использовать для атомизации при синтаксическом разборе <see langword="string" />, если данный объект <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> представляет тип xs:NCName.</param>
        <param name="nsmgr">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" /> для использования при синтаксическом разборе <see langword="string" />, если данный объект <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> представляет тип  xs:QName.</param>
        <summary>При переопределении в производном классе выполняется проверка заданного <see langword="string" /> на соответствие со встроенным или пользовательским простым типом.</summary>
        <returns><see cref="T:System.Object" />, который может быть безопасно приведен к типу, возвращаемому свойством <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> Метод проверяет `string` адресован встроенных или пользовательских простого типа. Например, если это <xref:System.Xml.Schema.XmlSchemaDatatype> представляет типа xs: Date, то экземпляр <xref:System.DateTime> возвращается.  
  
 Ниже приведены шаги, выполняемые во время <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> процесс проверки метода.  
  
1.  Преобразовать значение, указанное как `string` тип к его соответствующий Common Language Runtime (CLR).  
  
2.  Убедитесь, что значение выходит за границы, определенные для простого типа.  
  
 Преобразованное значение затем возвращается как <xref:System.Object> и может быть безопасно приведен к типу, возвращаемому <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> свойство.  
  
 Когда <xref:System.Xml.Schema.XmlSchemaDatatype> объект представляет тип списка, входные данные `string` значение преобразуется в список один или несколько объектов. Когда <xref:System.Xml.Schema.XmlSchemaDatatype> представляет тип списка, предпринята попытка проанализировать входное значение в качестве типа члена объединения. При сбое попытки синтаксического анализа, затем производится попытка преобразования следующего элемента объединения до синтаксического анализа прошла успешно или нет других типов элементов для синтаксического анализа. Если синтаксический анализ завершается неудачно, создается исключение.  
  
   
  
## Examples  
 В следующем примере извлекается `LotteryNumber` простой тип, из файла example.xsd как <xref:System.Xml.Schema.XmlSchemaSimpleType> и затем проверяет `string` значение `5` с помощью <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> метод.  
  
 [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CPP/datatype.cpp#1)]
 [!code-csharp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CS/datatype.cs#1)]
 [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/VB/datatype.vb#1)]  
  
 Следующий XML-файл используется для предыдущего примера кода.  
  
 [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/XML/example.xsd#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Входное значение не является допустимым экземпляром типа W3C XML-схемы.</exception>
        <exception cref="T:System.ArgumentNullException">Значение для разбора не может являться <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseValue(string s, class System.Xml.XmlNameTable nameTable, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ParseValue (s As String, nameTable As XmlNameTable, nsmgr As XmlNamespaceManager) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ParseValue(System::String ^ s, System::Xml::XmlNameTable ^ nameTable, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="abstract member ParseValue : string * System.Xml.XmlNameTable * System.Xml.XmlNamespaceManager -&gt; obj" Usage="xmlSchemaDatatype.ParseValue (s, nameTable, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" Index="1" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" Index="2" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="s">Строка, чтобы проверить на соответствие простому типу.</param>
        <param name="nameTable"><see cref="T:System.Xml.XmlNameTable" />, чтобы использовать для атомизации при синтаксическом разборе строки, если данный объект <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> представляет тип xs:NCName.</param>
        <param name="nsmgr">Объект <see cref="T:System.Xml.XmlNamespaceManager" /> для использования при синтаксическом разборе строки, если данный объект <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> представляет тип xs:QName.</param>
        <summary>При переопределении в производном классе проверяет заданную строку на соответствие встроенному или пользовательскому простому типу.</summary>
        <returns>Объект <see cref="T:System.Object" />, который может быть безопасно приведен к типу, возвращаемому свойством <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> Метод проверяет указанную строку на наличие встроенных или пользовательских простого типа. Например, если это <xref:System.Xml.Schema.XmlSchemaDatatype> представляет типа xs: Date, то экземпляр <xref:System.DateTime> возвращается.

Ниже приведены шаги, выполняемые во время <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> процесс проверки метода.

1. Преобразует указанную строку в соответствующий тип Common Language Runtime (CLR).

2. Убедитесь, что значение выходит за границы, которые определены для простого типа.

Преобразованное значение затем возвращается как <xref:System.Object> и может быть безопасно приведен к типу, который возвращается <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType> свойство.

Когда <xref:System.Xml.Schema.XmlSchemaDatatype> представляет тип списка, со значением входной строки преобразуется в список один или несколько объектов. Когда <xref:System.Xml.Schema.XmlSchemaDatatype> представляет тип списка, предпринята попытка проанализировать входное значение в качестве типа члена объединения. При сбое попытки синтаксического анализа, затем производится попытка преобразования следующего элемента объединения до синтаксического анализа прошла успешно или нет других типов элементов для синтаксического анализа. Если синтаксический анализ завершается неудачно, создается исключение.

]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Входное значение не является допустимым экземпляром типа W3C XML-схемы.</exception>
        <exception cref="T:System.ArgumentNullException">Значение для анализа не может быть NULL (Nothing в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="TokenizedType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlTokenizedType TokenizedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlTokenizedType TokenizedType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TokenizedType As XmlTokenizedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlTokenizedType TokenizedType { System::Xml::XmlTokenizedType get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenizedType : System.Xml.XmlTokenizedType" Usage="System.Xml.Schema.XmlSchemaDatatype.TokenizedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlTokenizedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении в производном классе получение типа для <see langword="string" /> выполняется в соответствии со спецификацией консорциума World Wide Web (W3C) XML 1.0.</summary>
        <value>Значение <see cref="T:System.Xml.XmlTokenizedType" /> для <see langword="string" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Позволяет `string` может считываться как тип XML, например, тип раздела CDATA.  
  
 Ниже приведены типы маркеров.  
  
|XmlTokenizedType|Описание|  
|----------------------|-----------------|  
|`CDATA`|Тип CDATA|  
|`ID`|Тип идентификатора|  
|`IDREF`|Тип IDREF|  
|`IDREFS`|Тип IDREFS|  
|`ENTITY`|Тип СУЩНОСТИ|  
|`ENTITIES`|Тип СУЩНОСТИ|  
|`NMTOKEN`|Тип NMTOKEN языка|  
|`NMTOKENS`|Тип NMTOKENS языка|  
|`NOTATION`|Тип NOTATION|  
|`ENUMERATION`|Тип ПЕРЕЧИСЛЕНИЯ|  
|`QName`|Тип QName|  
|`NCName`|Тип NCName|  
|`None`|Без типа|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeCode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.XmlTypeCode TypeCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlTypeCode TypeCode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TypeCode As XmlTypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlTypeCode TypeCode { System::Xml::Schema::XmlTypeCode get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeCode : System.Xml.Schema.XmlTypeCode" Usage="System.Xml.Schema.XmlSchemaDatatype.TypeCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlTypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение <see cref="T:System.Xml.Schema.XmlTypeCode" /> для простого типа.</summary>
        <value>Значение <see cref="T:System.Xml.Schema.XmlTypeCode" /> для простого типа.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Типы схемы W3C XML списка, например xs: Entities, xs: NMTOKENS и xs: IDREF не представленных каким- <xref:System.Xml.Schema.XmlTypeCode> перечисления. Вместо этого они представлены <xref:System.Xml.Schema.XmlTypeCode> значения для типов xs:ENTITY, xs: NMTOKEN и xs: IDREF с <xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A> свойство <xref:System.Xml.Schema.XmlSchemaDatatype> присвоено <xref:System.Xml.Schema.XmlSchemaDatatypeVariety.List>.  
  
> [!NOTE]
>  Типы xs: anyType и xs:anySimpleType не представленных каким <xref:System.Xml.Schema.XmlTypeCode> перечисления. Они представлены в <xref:System.Xml.Schema.XmlSchemaDatatype> со <xref:System.Xml.Schema.XmlTypeCode> , значение которого равно <xref:System.Xml.Schema.XmlTypeCode.UntypedAtomic> для xs:anySimpleType или <xref:System.Xml.Schema.XmlTypeCode.Item> для xs: anyType.  
  
   
  
## Examples  
 Пример <xref:System.Xml.Schema.XmlSchemaDatatype.TypeCode%2A> свойство, см. в разделе <xref:System.Xml.Schema.XmlSchemaDatatype>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlTypeCode" />
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public abstract Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="System.Xml.Schema.XmlSchemaDatatype.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении в производном классе выполняется получение типа CLR данного элемента.</summary>
        <value>CLR-тип элемента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> Свойство получает тип CLR элемента. Например, элемент типа `xs:int` бы <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> из <xref:System.Int32> по умолчанию. Тем не менее <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> может принимать одно из допустимых типов, которые могут быть сопоставлены с `xs:int`, такие как <xref:System.Int16> или <xref:System.Double>.  
  
 Дополнительные сведения о типе поддержке в <xref:System.Xml?displayProperty=nameWithType> пространства имен, см. в разделе [тип поддерживает в классах System.Xml](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).  
  
   
  
## Examples  
 Пример <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> свойство, см. в разделе <xref:System.Xml.Schema.XmlSchemaDatatype>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Variety">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.XmlSchemaDatatypeVariety Variety { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaDatatypeVariety Variety" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.Variety" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Variety As XmlSchemaDatatypeVariety" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlSchemaDatatypeVariety Variety { System::Xml::Schema::XmlSchemaDatatypeVariety get(); };" />
      <MemberSignature Language="F#" Value="member this.Variety : System.Xml.Schema.XmlSchemaDatatypeVariety" Usage="System.Xml.Schema.XmlSchemaDatatype.Variety" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaDatatypeVariety</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> для простого типа.</summary>
        <value>Значение <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> для простого типа.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" />
      </Docs>
    </Member>
  </Members>
</Type>