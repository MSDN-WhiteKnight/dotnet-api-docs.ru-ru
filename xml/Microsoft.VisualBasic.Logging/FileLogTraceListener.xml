<Type Name="FileLogTraceListener" FullName="Microsoft.VisualBasic.Logging.FileLogTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5c8f4a74112262aff62d14801e197459fe889648" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57925686" /></Metadata><TypeSignature Language="C#" Value="public class FileLogTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileLogTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class FileLogTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileLogTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type FileLogTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет простой прослушиватель, который направляет вывод журнала в файл.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Класс предоставляет возможности по обслуживанию, автоматически архивировать файлы журналов, при необходимости на день или на уровне приложения. Эти функции автоматической архивации помогает сократить обслуживания ответственности группы разработчиков и администраторов.  
  
 Экземпляр <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> могут добавляться к <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> или <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> коллекций для перенаправления выходных данных ведения журнала в текстовый файл. Экземпляры этого класса также добавляются в `My.Application.Log` или `My.Log` (для веб-приложений) в приложениях Visual Basic. Дополнительные сведения см. в разделе [Пошаговое руководство: Изменение места записи информации для My.Application.Log](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`  
  
 Ниже приведены основные возможности этого класса.  
  
1.  *Функции архивации*. Файлы журналов, созданные этим классом присваиваются в соответствии с базовым именем и дату, а также номер для различения все последующие версии журнала в файле журнала. Новые файлы журнала создаются по мере необходимости.  
  
     Явное имя файла имеет `baseName`[-`dateStamp`] [-`version`] .log, где:  
  
    -   `baseName` Входит имя фундаментальные журнала, заданное <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> свойство.  
  
    -   `dateStamp` Часть имеет формат «Гггг-мм-дд», и он отображается, когда <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> — <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> или <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.  
  
    -   Если требуется несколько файлов журнала с тем же `baseName` и `dateStamp`, `version` часть положительное `Integer`, добавляется к имени файла.  
  
2.  *Несколько экземпляров класса*. Если экземпляр <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> класс записывает в файл, который уже используется:  
  
    -   Класс совместно использует файл, если он используется другим экземпляром <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> класс в тот же процесс.  
  
    -   Класс создает новый файл журнала, используя следующее доступное имя, если файл уже используется другим процессом.  
  
3.  *Потокобезопасность*. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Класс является потокобезопасным. Это позволяет безопасно записывать сообщения в журнал из нескольких потоков без использования блокировки.  
  
 **Расположение файла журнала**  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> Свойством <xref:Microsoft.VisualBasic.Logging.LogFileLocation> перечисления для указания одного из типичных каталоги для записи файла журнала.  
  
-   Для записи в журнал в другое расположение, задайте <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> свойство к этому расположению.  
  
 **Имя файла журнала**  
  
-   Базовое имя для файла журнала задается <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> свойство.  
  
-   Имя текущего файла журнала могут быть считаны из <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> свойство. Он является производным от еще несколько свойств и текущее состояние журнала в файловой системе.  
  
 **Обслуживание журнала**  
  
-   Минимальная частота создания новых файлов журнала определяется <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> свойство. Если значение равно <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> или <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, новый файл журнала создается по крайней мере один раз каждый день или неделю, и Метка даты является частью <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> имя.  
  
-   Максимальный размер (в байтах) файла журнала определяется <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> свойство. Если размер файла журнала превышает этот размер, дополнительные сообщения, записываемые в журнал отклоненных и, в зависимости от <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> свойство, создается исключение.  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> Свойство определяет, какой объем свободного места (в байтах) должны быть доступны. Это позволит гарантировать, что <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> класс не использует свободное место на диске. Используйте <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> свойство, чтобы указать поведение журнала записывает при наличии меньше, чем <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> свободных байтов.  
  
 **Параметры выходного файла журнала**  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> Свойство указывает ли базовый поток должен очищаться автоматически после каждой операции записи в файл журнала.  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> Свойство указывает, следует ли добавить сообщения к текущему файлу журнала, если это разрешено, или записывать их в новый файл журнала.  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> Свойство определяет строку, используемую для разграничения полей в сообщении журнала.  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> Свойство указывает, кодировка, используемая при создании нового файла журнала.  
  
 **Вывод в файл журнала**  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> И <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> методы записывают сообщения в файл журнала. Эти методы проверяют <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> свойства, а также любые существующие журналы, с тем же базовым именем, чтобы определить, должен будет создан новый журнал.  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> Метод очищает все сообщения, в настоящее время в буфер вывода в файле журнала.  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> Метод закрывает файл журнала, так что он может использоваться другими процессами.  
  
 **Включение выходных данных**  
  
 Необходимо включить отладку, чтобы использовать прослушиватель трассировки или трассировки. Следующий синтаксис зависит от компилятора. При использовании компиляторов, отличный от C# или Visual Basic, см. в документации по вашим компилятором.  
  
-   Чтобы включить отладку в C#, добавьте `/d:DEBUG` флаг в командную строку компилятора при компиляции кода, или можно добавить `#define DEBUG` в начало файла. В Visual Basic добавьте `/d:DEBUG=True` флаг в командную строку компилятора.  
  
-   Чтобы включить трассировку в C#, добавьте `/d:TRACE` флаг в командную строку компилятора при компиляции кода, или добавьте `#define TRACE` в начало файла. В Visual Basic добавьте `/d:TRACE=True` флаг в командную строку компилятора.  
  
 Чтобы задать уровень прослушивателя, измените файл конфигурации для приложения. В этом файле можно добавить прослушиватель, задайте для нее тип и параметры, удалить прослушиватель или удалить все прослушиватели, ранее установленный приложением. Файл конфигурации форматирования как в следующем примере.  
  
 Для выполнения этого примера необходимо указать полное имя сборки. Сведения о том, как получить полное имя сборки, см. в разделе [имена сборок](~/docs/framework/app-domains/assembly-names.md).  
  
```xml  
<configuration>  
    <system.diagnostics>  
        <sharedListeners>  
            <add name="FileLog"  
                type="Microsoft.VisualBasic.Logging.FileLogTraceListener,   
                      Microsoft.VisualBasic, Version=8.0.0.0,   
                      Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,   
                      processorArchitecture=MSIL"   
                initializeData="FileLogWriter"/>  
        </sharedListeners>  
    </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
    <related type="Article" href="https://msdn.microsoft.com/library/ecc74f95-743c-450d-93f6-09a30db0fe4a">Пошаговое руководство. Изменение места записи информации для My.Application.Log</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> и задает имя.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> с именем, используемым по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод задает имя экземпляра <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> класс FileLogTraceListener.  
  
 Можно получить доступ к имени экземпляра через <xref:System.Diagnostics.TraceListener.Name%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.FileLogTraceListener : string -&gt; Microsoft.VisualBasic.Logging.FileLogTraceListener" Usage="new Microsoft.VisualBasic.Logging.FileLogTraceListener name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see langword="String" />. Имя объекта экземпляра.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> с использованием предоставленного имени.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод задает имя экземпляра <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> класс `name`.  
  
 Получить доступ к имени экземпляра рассматривать <xref:System.Diagnostics.TraceListener.Name%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public bool Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Append" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Append { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Append : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет, следует ли добавить выходные данные в текущий файл или следует записать их в новый файл.</summary>
        <value>Значение типа <see langword="Boolean" />; значение <see langword="True" /> указывает, что выходные данные добавляются в текущий файл, а значение <see langword="False" /> указывает, что выходные данные записываются в новый файл. По умолчанию значение данного свойства равно <see langword="True" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> свойство `False`, выходные данные записываются в новый файл. Если это свойство имеет `True`, выходные данные добавляются в текущий файл, если:  
  
-   Выходной файл заблокирован другим процессом. В этом случае создается новый файл журнала с номером версии, которые встроены в <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> имя.  
  
-   Текущий размер файла больше, чем что <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> свойство позволяет. В этом случае дополнительных сообщений, отклоненных и, в зависимости от <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> свойство, создается исключение.  
  
-   Имя существующего файла является устаревшим в соответствии с расписанием создания журнала, определяемое <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> свойство. В этом случае создается новый файл журнала и является частью Отметка даты <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> имя.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает, очищается ли буфер при записи в файл журнала.</summary>
        <value>Значение типа <see langword="Boolean" />, значение <see langword="True" /> указывает, что поток очищается после каждой записи; в противном случае записи журнала буферизуются и записываются более эффективно. По умолчанию значение данного свойства равно <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `False` Для <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> свойство обеспечивает лучшую производительность для большинства приложений, так как он более эффективен для записи нескольких сообщений в файл журнала за один раз. Можно использовать <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> метод, чтобы очистить все сообщения, в настоящее время в файле журнала выходных данных буфера. Можно также использовать <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> метод, который неявно сохраняет поток перед закрытием файла журнала.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      </Docs>
    </Member>
    <Member MemberName="BaseFileName">
      <MemberSignature Language="C#" Value="public string BaseFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseFileName : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает базовое имя файлов журнала, используемое для создания полного имени файлов журнала.</summary>
        <value><see langword="String" />. Базовое имя файлов журнала. По умолчанию используется имя продукта приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> Определяет базовое имя для файлов журнала, который <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> записывает класс.  
  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> Свойство предоставляет имя текущего полного файла журнала. Он создается в соответствии с путь к журналу, базовое имя, дату и число, чтобы отличить его от разных версий журнала. Новые файлы журнала создаются по мере необходимости.  
  
 Указывается в явной форме полного имени файла `path` \\ `baseName`[-`dateStamp`] [-`iteration`] .log, где  
  
-   `path` Определяется часть <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> свойства и, если это значение присваивается <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> свойство.  
  
-   `baseName` Входит имя фундаментальные журнала, заданное <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> свойство.  
  
-   `dateStamp` Часть имеет формат «Гггг-мм-дд», и он отображается, когда <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> присваивается <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> или <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.  
  
-   Если требуется несколько файлов журнала с тем же `baseName` и `dateStamp`, `iteration` часть положительное `Integer`, добавляется к имени файла.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="fileLogTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает основной поток для текущего файла журнала и освобождает все ресурсы, связанные с текущим потоком.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Необходимо вызвать <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> метод явно, так как <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> класс управляет основной поток.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLocation">
      <MemberSignature Language="C#" Value="public string CustomLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomLocation : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает каталог файлов журнала, если для свойства <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> задано значение <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</summary>
        <value><see langword="String" /> — имя каталога, в котором размещаются файлы журнала. По умолчанию в качестве значения этого свойства задается каталог, выбранный пользователем для хранения данных приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> свойство имеет значение, он также задает <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> свойства <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.  
  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> Свойство будет генерирует исключение, если каталог не может быть разрешена.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает разделитель, используемый для разделения полей в сообщении журнала.</summary>
        <value><see langword="String" /> — разделитель, используемый для разделения полей в сообщении журнала. По умолчанию в качестве значения этого свойства задан символ табуляции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> Свойство предоставляет возможность изменения разделителя по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskSpaceExhaustedBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskSpaceExhaustedBehavior As DiskSpaceExhaustedOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption get(); void set(Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption value); };" />
      <MemberSignature Language="F#" Value="member this.DiskSpaceExhaustedBehavior : Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет, что делать при выполнении записи в файл журнала, когда на диске осталось меньше свободного места, чем указано в свойстве <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />.</summary>
        <value><see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />. Определяет, что делать при выполнении записи в файл журнала, когда на диске осталось меньше свободного места, чем указано в свойстве <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />, или когда размер файла журнала превышает допустимое значение, заданное в свойстве <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />. Значение по умолчанию — <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> свойству <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, сообщения журнала удаляются без уведомления, если не недостаточно зарезервированного дискового пространства. Это поведение по умолчанию и позволяет предотвратить сбои при переполнении диска простых приложений.  
  
 Можно задать более надежные приложения <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> свойства <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>и добавьте `Try...Catch` блоки весь код, который записывает в журнал.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="fileLogTraceListener.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="True" /> соответствует освобождению управляемых и неуправляемых ресурсов; значение <see langword="False" /> соответствует освобождению только неуправляемых ресурсов.</param>
        <summary>Закрывает основной поток и при необходимости освобождает управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если параметр `disposing` имеет значение `True`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>. Этот метод вызывает метод `Dispose` каждого объекта, на который есть ссылка.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Метод 
            <see langword="Dispose" /> может вызываться несколько раз другими объектами. При переопределении метода <see langword="Dispose" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />.  
  
Этот метод вызывает метод <see langword="Dispose" /> метод базового класса, <see langword="Dispose" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает кодировку, которая должна использоваться при создании нового файла журнала.</summary>
        <value><see cref="T:System.Text.Encoding" /> — кодировка, которая должна использоваться при создании нового файла журнала. По умолчанию этому свойству присваивается значение <see cref="T:System.Text.UTF8Encoding" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При добавлении текста к существующему файлу журнала, вместо кодировку, заданную кодировку для этого файла используется <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.Text.UTF8Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="fileLogTraceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Очищает основной поток, выполняющий запись в текущий файл журнала.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> метод для записи всех буферизованных данных в текущий файл журнала.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullLogFileName">
      <MemberSignature Language="C#" Value="public string FullLogFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullLogFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullLogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullLogFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullLogFileName : string" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает текущее полное имя файла журнала.</summary>
        <value><see langword="String" /> — текущее полное имя файла журнала.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> Свойство предоставляет имя текущего полного файла журнала. Он создается в соответствии с путь к журналу, базовое имя, дату и число, чтобы отличить его от разных версий журнала. Новые файлы журнала создаются по мере необходимости.  
  
 Явное имя полного файла журнала имеет `path` \\ `baseName`[-`dateStamp`] [-`iteration`] .log, где:  
  
-   `path` Определяется часть <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> свойства и, если это значение присваивается <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> свойство.  
  
-   `baseName` Входит имя фундаментальные журнала, заданное <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> свойство.  
  
-   `dateStamp` Часть имеет формат гггг-мм-дд, и он отображается, когда <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> — <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> или <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.  
  
-   Если требуется несколько файлов журнала с тем же `baseName` и `dateStamp`, `iteration` часть положительное `Integer`, добавляется к имени файла.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="override this.GetSupportedAttributes : unit -&gt; string[]" Usage="fileLogTraceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает настраиваемые атрибуты конфигурации XML, поддерживаемые прослушивателем трассировки.</summary>
        <returns>Массив типа <see langword="String" />, содержащий атрибуты конфигурации XML, распознаваемые данным прослушивателем.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Настраиваемых атрибутов для <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> можно использовать в XML-файл конфигурации для управления поведением экземпляра <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> класса. При использовании любого другого атрибута возникает исключение конфигурации.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IncludeHostName">
      <MemberSignature Language="C#" Value="public bool IncludeHostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeHostName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostName { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeHostName : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает, следует ли включать в выходные данные имя сайта компьютера, на котором ведется журнал.</summary>
        <value><see langword="Boolean" />. Если следует включить адрес сайта, используется значение <see langword="True" />; в противном случае — <see langword="False" />. Значение по умолчанию — <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство для настройки поведения <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> и <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> методы.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As LogFileLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileLocation Location { Microsoft::VisualBasic::Logging::LogFileLocation get(); void set(Microsoft::VisualBasic::Logging::LogFileLocation value); };" />
      <MemberSignature Language="F#" Value="member this.Location : Microsoft.VisualBasic.Logging.LogFileLocation with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает расположение файлов журнала.</summary>
        <value><see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" /> — расположение файла журнала. Значение по умолчанию — <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> свойство, чтобы задать путь к журналу стандартные пути, определяется <xref:Microsoft.VisualBasic.Logging.LogFileLocation> значений перечисления.  
  
|**Значение расположения**|**Путь**|  
|------------------------|--------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory>|Путь для данных приложения, которая является общей для всех пользователей, в формате:<br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> Стандартное значение для `BasePath` является:<br /><br /> C:\Documents and Settings\All Users\Application Data<br /><br /> Значения `CompanyName`, `ProductName`, и `ProductVersion` берутся из сборки.|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory>|Путь для исполняемого файла, запустившего приложение.|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory>|Путь для данных приложения пользователя, в формате:<br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> Стандартное значение для `BasePath` является:<br /><br /> C:\Documents and Settings\\`username`\Application Data<br /><br /> Значения `CompanyName`, `ProductName`, и `ProductVersion` поступать сборку.|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory>|Путь к временной папке текущей системы.|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>|Если строка, заданная свойством <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> не пуст, а затем использовать его в качестве пути; используйте путь для данных приложения пользователя.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />
      </Docs>
    </Member>
    <Member MemberName="LogFileCreationSchedule">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileCreationSchedule As LogFileCreationScheduleOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption LogFileCreationSchedule { Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption get(); void set(Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption value); };" />
      <MemberSignature Language="F#" Value="member this.LogFileCreationSchedule : Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет, какую дату включать в имена файлов журнала.</summary>
        <value><see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />. Указывает, какую дату включать в имена файлов журнала. Значение по умолчанию — <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Назначить один из <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> значения перечисления <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> свойство, чтобы указать, какую дату включать в имена файлов журнала.  
  
 Формат даты: гггг-мм-дд. Дополнительные сведения о формате имя файла журнала, см. в разделе <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.  
  
|**Значение LogFileCreationSchedule**|**Дата в имя файла журнала**|  
|---------------------------------------|-----------------------------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>|Включать текущую дату в имя файла журнала.|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None>|Не включать дату в имя файла журнала.|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>|Включать в имя файла журнала первый день текущей недели.<br /><br /> Неделя начинается в субботу.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="MaxFileSize">
      <MemberSignature Language="C#" Value="public long MaxFileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxFileSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxFileSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxFileSize : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает максимальный допустимый размер файла журнала (в байтах).</summary>
        <value><see langword="Long" />. Это максимальный допустимый размер файла журнала (в байтах). Значение по умолчанию — 5000000.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется, чтобы убедиться в том, что файлы журнала не слишком большой рост размера.  
  
 Если размер файла журнала (в байтах) больше, чем значение этого свойства, затем при <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> класс пытается записать сообщение в журнал сообщение отбрасывается и Сбой автоматической или исключение возникает в зависимости от значения <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>свойство. В противном случае сообщение записывается в журнал, если объем свободного места на диске (в байтах), меньше, чем <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Если для этого свойства задано значение меньше 1000.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="ReserveDiskSpace">
      <MemberSignature Language="C#" Value="public long ReserveDiskSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReserveDiskSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ReserveDiskSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReserveDiskSpace { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ReserveDiskSpace : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объем необходимого свободного дискового пространства в байтах перед записью сообщений в файл журнала.</summary>
        <value><see langword="Long" />. Необходимый объем свободного места на диске.  Значение по умолчанию — 10000000.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется, чтобы убедиться в том, что файлы журнала не полностью заполняет диска.  
  
 Если объем свободного дискового пространства (в байтах) меньше, чем значение этого свойства, затем при <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> класс пытается записать сообщение в журнал сообщение отбрасывается и Сбой автоматической или исключение возникает в зависимости от значения < C2 настроек <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>  свойство. В противном случае сообщение записывается в журнал, если размер файла журнала (в байтах) больше, чем <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Если для этого свойства задано значение меньше 0.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает данные трассировки в выходной файл.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> методы не предназначены для вызова в коде приложения. Эти методы вызываются члены <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, и <xref:System.Diagnostics.TraceSource> классы для записи данных трассировки для вывода.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий текущие идентификаторы процесса, идентификаторы потока и сведения о трассировке стека.</param>
        <param name="source">Имя источника трассировки, вызвавшего этот метод.</param>
        <param name="eventType">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="data">Выдаваемые данные трассировки.</param>
        <summary>Записывает сведения трассировки, объект данных и сведения о событии в исходящий файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод:  
  
1.  Форматирует сведения о данных и контекст для выходных данных.  
  
2.  Создает новый файл журнала, при необходимости.  
  
3.  Записывает сведения в файл журнала.  
  
 Дополнительные сведения о создании файлов журнала, см. в разделе <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.  
  
 Ниже перечислены поля вывода в порядке их следования. Поля разделяются с помощью строки, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> указывает свойство и следует признак конца строки.  
  
|**Поле**|**Выходные данные условия**|**Описание**|  
|---------------|--------------------------|---------------------|  
|`source`|Всегда|Значение `name`.|  
|`severity`|Всегда|Значение перечисления имя `eventType`.|  
|`id`|Всегда|Строковое представление параметра `id`.|  
|`message`|Всегда|Строковое представление параметра `data`.|  
|`callStack`|Когда <xref:System.Diagnostics.TraceOptions.Callstack> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|<xref:System.Diagnostics.TraceEventCache.Callstack%2A> Свойство `eventCache`.|  
|`CorrelationID`|Когда <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|<xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Свойство `eventCache`.|  
|`DateTime`|Когда <xref:System.Diagnostics.TraceOptions.DateTime> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|Строковое представление <xref:System.Diagnostics.TraceEventCache.DateTime%2A> свойство `eventCache`. Инвариантный язык и региональные параметры, используется для преобразования строк.|  
|`ProcessID`|Когда <xref:System.Diagnostics.TraceOptions.ProcessId> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|Строковое представление <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> свойство `eventCache`. Инвариантный язык и региональные параметры, используется для преобразования строк.|  
|`ThreadID`|Когда <xref:System.Diagnostics.TraceOptions.ThreadId> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|<xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Свойство `eventCache`.|  
|`Timestamp`|Когда <xref:System.Diagnostics.TraceOptions.Timestamp> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|Строковое представление <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> свойство `eventCache`. Инвариантный язык и региональные параметры, используется для преобразования строк.|  
|`HostName`|Когда <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> свойство `True`.|Имя компьютера.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий текущие идентификаторы процесса, идентификаторы потока и сведения о трассировке стека.</param>
        <param name="source">Имя источника трассировки, вызвавшего этот метод.</param>
        <param name="eventType">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="data">Выдаваемые данные массива объектов.</param>
        <summary>Записывает сведения трассировки, массив объектов данных и сведения о событии в выходной файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод:  
  
1.  Форматирует сведения о данных и контекста для выходного файла  
  
2.  Создает новый файл журнала, при необходимости  
  
3.  Записывает сведения в файл журнала.  
  
 Дополнительные сведения о создании файлов журнала, см. в разделе <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.  
  
 В этой таблице перечислены поля вывода в порядке их следования. Поля разделяются с помощью строки, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> указывает свойство и следует признак конца строки.  
  
|**Поле**|**Выходные данные условия**|**Описание**|  
|---------------|--------------------------|---------------------|  
|`source`|Всегда|Значение `name`.|  
|`severity`|Всегда|Значение перечисления имя `eventType`.|  
|`id`|Всегда|Строковое представление параметра `id`.|  
|`message`|Всегда|Строка, содержащая строковое представление каждого элемента в `data`, разделяя их <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.|  
|`callStack`|Когда <xref:System.Diagnostics.TraceOptions.Callstack> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|<xref:System.Diagnostics.TraceEventCache.Callstack%2A> Свойство `eventCache`.|  
|`CorrelationID`|Когда <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|<xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Свойство `eventCache`.|  
|`DateTime`|Когда <xref:System.Diagnostics.TraceOptions.DateTime> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|Строковое представление <xref:System.Diagnostics.TraceEventCache.DateTime%2A> свойство `eventCache`. Инвариантный язык и региональные параметры, используется для преобразования строк.|  
|`ProcessID`|Когда <xref:System.Diagnostics.TraceOptions.ProcessId> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|Строковое представление <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> свойство `eventCache`. Инвариантный язык и региональные параметры, используется для преобразования строк.|  
|`ThreadID`|Когда <xref:System.Diagnostics.TraceOptions.ThreadId> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|<xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Свойство `eventCache`.|  
|`Timestamp`|Когда <xref:System.Diagnostics.TraceOptions.Timestamp> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|Строковое представление <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> свойство `eventCache`. Инвариантный язык и региональные параметры, используется для преобразования строк.|  
|`HostName`|Когда <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> свойство `True`.|Имя компьютера.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает сведения трассировки и сведения о событиях в выходной файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> методы не предназначены для вызова в коде приложения. Эти методы вызываются члены <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, и <xref:System.Diagnostics.TraceSource> классы для записи данных трассировки для вывода.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий текущие идентификаторы процесса, идентификаторы потока и сведения о трассировке стека.</param>
        <param name="source">Имя источника трассировки, вызвавшего этот метод.</param>
        <param name="eventType">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="message">Записываемое сообщение.</param>
        <summary>Записывает сведения трассировки, сообщение и сведения о событии в выходной файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод:  
  
1.  Форматирует сведения о данных и контекст для выходных данных.  
  
2.  Создает новый файл журнала, при необходимости.  
  
3.  Записывает сведения в файл журнала.  
  
 Дополнительные сведения о создании файлов журнала, см. в разделе <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.  
  
 В этой таблице перечислены поля вывода в порядке, в котором они появляются. Поля разделяются с помощью строки, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> указывает свойство и следует признак конца строки.  
  
|**Поле**|**Выходные данные условия**|**Описание**|  
|---------------|--------------------------|---------------------|  
|`source`|Всегда.|Значение `name`.|  
|`severity`|Всегда.|Значение перечисления имя `eventType`.|  
|`id`|Всегда.|Строковое представление параметра `id`.|  
|`message`|Всегда.|Значение `message`.|  
|`callStack`|Когда <xref:System.Diagnostics.TraceOptions.Callstack> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|<xref:System.Diagnostics.TraceEventCache.Callstack%2A> Свойство `eventCache`.|  
|`CorrelationID`|Когда <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|<xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Свойство `eventCache`.|  
|`DateTime`|Когда <xref:System.Diagnostics.TraceOptions.DateTime> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|Строковое представление <xref:System.Diagnostics.TraceEventCache.DateTime%2A> свойство `eventCache`. Инвариантный язык и региональные параметры, используется для преобразования строк.|  
|`ProcessID`|Когда <xref:System.Diagnostics.TraceOptions.ProcessId> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|Строковое представление <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> свойство `eventCache`. Инвариантный язык и региональные параметры, используется для преобразования строк.|  
|`ThreadID`|Когда <xref:System.Diagnostics.TraceOptions.ThreadId> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|<xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Свойство `eventCache`.|  
|`Timestamp`|Когда <xref:System.Diagnostics.TraceOptions.Timestamp> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|Строковое представление <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> свойство `eventCache`. Инвариантный язык и региональные параметры, используется для преобразования строк.|  
|`HostName`|Когда <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> свойство `True`.|Имя компьютера.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий текущие идентификаторы процесса, идентификаторы потока и сведения о трассировке стека.</param>
        <param name="source">Имя источника трассировки, вызвавшего этот метод.</param>
        <param name="eventType">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="format">Строка формата, не содержащая элементов формата или содержащая один либо несколько элементов формата, связанных с объектами в массиве <paramref name="args" />.</param>
        <param name="args">Массив <see langword="Object" />, содержащий несколько (или ни одного) объектов, которые необходимо форматировать.</param>
        <summary>Записывает сведения трассировки, форматированный массив объектов данных и сведения о событии в исходящий файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод:  
  
1.  Форматирует сведения о данных и контекст для выходных данных.  
  
2.  Создает новый файл журнала, при необходимости.  
  
3.  Записывает сведения в файл журнала.  
  
 Дополнительные сведения о создании нового файла журнала см. в разделе <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.  
  
 В этой таблице перечислены поля вывода в порядке, в котором они появляются. Поля разделяются с помощью строки, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> указывает свойство, а также с признаком конца строки.  
  
|**Поле**|**Выходные данные условия**|**Описание**|  
|---------------|--------------------------|---------------------|  
|`source`|Всегда|Значение `name`.|  
|`severity`|Всегда|Значение перечисления имя `eventType`.|  
|`id`|Всегда|Строковое представление параметра `id`.|  
|`message`|Всегда|Данные в `args` отформатирован `format` строку и с помощью инвариантного языка и региональных параметров для преобразования строк.|  
|`callStack`|Когда <xref:System.Diagnostics.TraceOptions.Callstack> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|<xref:System.Diagnostics.TraceEventCache.Callstack%2A> Свойство `eventCache`.|  
|`CorrelationID`|Когда <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|<xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Свойство `eventCache`.|  
|`DateTime`|Когда <xref:System.Diagnostics.TraceOptions.DateTime> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|Строковое представление <xref:System.Diagnostics.TraceEventCache.DateTime%2A> свойство `eventCache`. Инвариантный язык и региональные параметры, используется для преобразования строк.|  
|`ProcessID`|Когда <xref:System.Diagnostics.TraceOptions.ProcessId> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|Строковое представление <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> свойство `eventCache`. Инвариантный язык и региональные параметры, используется для преобразования строк.|  
|`ThreadID`|Когда <xref:System.Diagnostics.TraceOptions.ThreadId> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|<xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Свойство `eventCache`.|  
|`Timestamp`|Когда <xref:System.Diagnostics.TraceOptions.Timestamp> флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|Строковое представление <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> свойство `eventCache`. Инвариантный язык и региональные параметры, используется для преобразования строк.|  
|`HostName`|Когда <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> свойство `True`.|Имя компьютера.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="fileLogTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><see langword="String" />. Настраиваемое сообщение для записи.</param>
        <summary>Дословно записывает сообщение на диск без какой-либо дополнительной контекстной информации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> Метод записывает сообщение в файл журнала без любой дополнительной контекстной информации.  
  
 Используйте одну из <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> методы, чтобы включить сведения о контексте выходные данные журнала.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="fileLogTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><see langword="String" />. Настраиваемое сообщение для записи.</param>
        <summary>Дословно записывает сообщение на диск без какой-либо дополнительной контекстной информации, после сообщения ставится текущий разделитель строк.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> Метод записывает сообщение в файл журнала без любой дополнительной контекстной информации.  
  
 Используйте одну из <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> методы, чтобы включить сведения о контексте выходные данные журнала.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>