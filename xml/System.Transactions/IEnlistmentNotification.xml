<Type Name="IEnlistmentNotification" FullName="System.Transactions.IEnlistmentNotification">
  <Metadata><Meta Name="ms.openlocfilehash" Value="515c5331c81a97a49b80dee630ada21a4e303897" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58696254" /></Metadata><TypeSignature Language="C#" Value="public interface IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnlistmentNotification" />
  <TypeSignature Language="F#" Value="type IEnlistmentNotification = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Описывает интерфейс, который должен реализовать диспетчер ресурсов, чтобы предоставить обратные вызовы уведомлений о двухфазной фиксации диспетчеру транзакций при внесении в список для участия.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы диспетчер ресурсов мог участвовать в транзакции он должен зачислиться в транзакцию с помощью диспетчера транзакций. Класс <xref:System.Transactions.Transaction> определяет набор методов, имена которых начинаются с `Enlist`, обеспечивающий данную функциональную возможность. Различные `Enlist` методы соответствуют различные виды зачислением, которые ресурсов могут использоваться.  
  
 Этот класс описывает интерфейс, который должен реализовать диспетчер ресурсов для обеспечения двух обратных вызовов уведомлений фазы фиксации диспетчеру транзакций при присоединении к участию. Для реализации каждого диспетчера ресурсов <xref:System.Transactions.IEnlistmentNotification> интерфейс, необходимо зачислить его с помощью <xref:System.Transactions.Transaction.EnlistVolatile%2A> метод или <xref:System.Transactions.Transaction.EnlistDurable%2A> метод <xref:System.Transactions.Transaction> класса, в зависимости от того, является ли ресурс неустойчивым и постоянным. Дополнительные сведения о присоединении и 2PC см. в разделе [ресурсы прикрепление в транзакции, в качестве участников](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md) и [Фиксация транзакции однофазная и Многофазная](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md) соответственно.  
  
 Диспетчер транзакций Уведомляет включенный в список объект на разных этапах протокола двухфазной фиксации следующими методами.  
  
|Метод|Описание|  
|------------|-----------------|  
|<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>|Этот метод присоединенного объекта используется как обратный вызов диспетчером транзакций во время первой фазы транзакции, когда диспетчер транзакций опрашивает участников, могут ли они зафиксировать транзакцию.|  
|<xref:System.Transactions.IEnlistmentNotification.Commit%2A>|Этот метод присоединенного объекта используется как обратный вызов диспетчером транзакций на втором этапе транзакции, если транзакция фиксируется.|  
|<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>|Этот метод присоединенного объекта используется как обратный вызов диспетчером транзакций на втором этапе транзакции, если транзакция прерывается (который откат).|  
|<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>|Этот метод присоединенного объекта используется как обратный вызов диспетчером транзакций на втором этапе транзакции, если транзакция сомнительна.|  
  
> [!NOTE]
>  Следует иметь в виду, что уведомления не могут быть отправлены, последовательно или в определенном порядке.  
  
   
  
## Examples  
 В следующем примере показана реализация этого интерфейса, а также прикрепление объекта в качестве участника в транзакцию с помощью <xref:System.Transactions.Transaction.EnlistVolatile%2A> метод.  
  
 [!code-csharp[Tx_Enlist#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#1)]
 [!code-vb[Tx_Enlist#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.ISinglePhaseNotification" />
    <related type="Article" href="https://msdn.microsoft.com/library/786a12c2-d530-49f4-9c59-5c973e15a11d">Зачисление ресурсов в транзакцию в качестве участников</related>
    <related type="Article" href="https://msdn.microsoft.com/library/694ea153-e4db-41ae-96ac-9ac66dcb69a9">Однофазная и многофазная фиксация транзакции</related>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Commit : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Commit enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Объект <see cref="T:System.Transactions.Enlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
        <summary>Уведомляет включенный в список объект о том, что транзакция фиксируется.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Диспетчер транзакций вызывает этот метод присоединенного объекта во время второй фазы фиксации, когда он указывает, что все участники, чтобы зафиксировать транзакцию.  
  
 Диспетчер ресурсов должен выполнить любые действия, необходимые для завершения транзакции и затем информировать о завершении, вызвав <xref:System.Transactions.Enlistment.Done%2A> метод `enlistment` параметра.  
  
 Если диспетчер ресурсов включен в список, но не отвечает, вызвав <xref:System.Transactions.Enlistment.Done%2A> , диспетчер транзакций сомнения в том, что диспетчер ресурсов получил <xref:System.Transactions.IEnlistmentNotification.Commit%2A> вызова. Таким образом диспетчер транзакций находится в состоянии ожидания ответа и сохраняет сведения, относящиеся к этой транзакции.  Если <xref:System.Transactions.Enlistment.Done%2A> — никогда не вызывается, этот элемент информации хранятся бессрочно в памяти или в системном ресурсе. Это приводит к ресурсам, не может быть освобождена. В случае распределенной транзакции это со временем заполняет журнала MSDTC, которое останавливает процесс MSDTC. В случае транзакции, управляемой координатором <xref:System.Transactions>, это приводит к постепенному увеличению потребления памяти процессом диспетчера ресурсов. Таким образом, важно вызывать <xref:System.Transactions.Enlistment.Done%2A> метод диспетчер ресурсов по окончании с вашей операции подготовки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDoubt">
      <MemberSignature Language="C#" Value="public void InDoubt (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InDoubt(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InDoubt(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member InDoubt : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.InDoubt enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Объект <see cref="T:System.Transactions.Enlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
        <summary>Уведомляет включенный в список объект о сомнительном состоянии транзакции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается для неустойчивых ресурсов, когда диспетчер транзакций вызывает операции однофазной фиксации для один устойчивый ресурс, а затем подключение к устойчивых ресурсов было разорвано до получения результата транзакции. В таком случае результат транзакции не удается определить безопасно.  
  
 Как <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> является считается конечное состояние для транзакции, не следует вызывать <xref:System.Transactions.IEnlistmentNotification.Commit%2A> или <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> после вызова метода <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>.  
  
> [!NOTE]
>  Реализации этого метода для непостоянных ресурсов следует выполнять любые операции восстановления или проверки, он понимает затронутых данных.  Он также должен вызвать <xref:System.Transactions.Enlistment.Done%2A> метод на `enlistment` параметр, если он завершил работу.  
  
 Если диспетчер ресурсов включен в список, но не отвечает, вызвав <xref:System.Transactions.Enlistment.Done%2A> , диспетчер транзакций сомнения в том, что диспетчер ресурсов получил <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> вызова. Таким образом диспетчер транзакций находится в состоянии ожидания ответа и сохраняет сведения, относящиеся к этой транзакции.  Если <xref:System.Transactions.Enlistment.Done%2A> — никогда не вызывается, этот элемент информации хранятся бессрочно в памяти или в системном ресурсе. Это приводит к ресурсам, не может быть освобождена. В случае распределенной транзакции это со временем заполняет журнала MSDTC, которое останавливает процесс MSDTC. В случае транзакции, управляемой координатором <xref:System.Transactions>, это приводит к постепенному увеличению потребления памяти процессом диспетчера ресурсов. Таким образом, важно вызывать <xref:System.Transactions.Enlistment.Done%2A> метод диспетчер ресурсов по окончании с вашей операции подготовки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class System.Transactions.PreparingEnlistment preparingEnlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare(System::Transactions::PreparingEnlistment ^ preparingEnlistment);" />
      <MemberSignature Language="F#" Value="abstract member Prepare : System.Transactions.PreparingEnlistment -&gt; unit" Usage="iEnlistmentNotification.Prepare preparingEnlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparingEnlistment" Type="System.Transactions.PreparingEnlistment" />
      </Parameters>
      <Docs>
        <param name="preparingEnlistment">Объект <see cref="T:System.Transactions.PreparingEnlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
        <summary>Уведомляет включенный в список объект о том, что транзакция подготавливается для фиксации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Диспетчер транзакций вызывает этот метод, включенный в список ресурсов manager во время первой фазы фиксации, когда он опрашивает участников, могут ли они зафиксировать транзакцию.  
  
 При реализации диспетчер долгосрочных ресурсов, следует записывать в журнал вашей подготовки записи во время этого этапа. Запись должна включать всю необходимую информацию для выполнения восстановления. Сюда входят <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> свойство, которое передается диспетчеру транзакций в <xref:System.Transactions.TransactionManager.Reenlist%2A> метод во время восстановления. Дополнительные сведения о восстановлении см. в разделе [выполнение восстановления](https://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).  
  
 Диспетчер ресурсов должен завершить всю работу, которая должна быть выполнена перед вызовом <xref:System.Transactions.PreparingEnlistment.Prepared%2A> метод `preparingEnlistment` параметр, чтобы указать свой голос за для сроков действия обязательства. Следует убедиться, что для этого перед получением уведомлений фазы 2 таких фиксации, отката или под сомнением. Это потому, что уведомления фазы 2 могут быть встроены в том же потоке, который вызвал <xref:System.Transactions.PreparingEnlistment.Prepared%2A> метод на этапе 1. Таким образом, после вызова метода <xref:System.Transactions.PreparingEnlistment.Prepared%2A> не нужно выполнять никаких действий (например, снимать блокировки), которые должны были быть выполнены перед получением уведомлений второго этапа.  
  
 Можно также вызвать метод `preparingEnlistment` параметр, чтобы указать голос для отката.  
  
 Если объект просто наблюдать и реагировать на ход выполнения операции, не участвующих в его реализации этого метода необходимо вызвать <xref:System.Transactions.Enlistment.Done%2A> метод `preparingEnlistment` параметр, если он завершил работу. Таким образом, диспетчер ресурсов не будет получать никаких уведомлений фазы 2.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Rollback : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Rollback enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Объект <see cref="T:System.Transactions.Enlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
        <summary>Уведомляет включенный в список объект о том, что выполняется откат транзакции (ее прерывание).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Диспетчер транзакций вызывает этот метод присоединенного объекта, если транзакция выполняет откат (прервано), из-за неспособности один или несколько участников транзакции зафиксировать транзакцию.  
  
 Диспетчер ресурсов должен выполнить любые действия, необходимые для завершения транзакции и затем информировать о завершении, вызвав <xref:System.Transactions.Enlistment.Done%2A> метод `enlistment` параметра.  
  
 Если диспетчер ресурсов включен в список, но не отвечает, вызвав <xref:System.Transactions.Enlistment.Done%2A> , диспетчер транзакций сомнения в том, что диспетчер ресурсов получил <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> вызова. Таким образом диспетчер транзакций находится в состоянии ожидания ответа и сохраняет сведения, относящиеся к этой транзакции.  Если <xref:System.Transactions.Enlistment.Done%2A> — никогда не вызывается, этот элемент информации хранятся бессрочно в памяти или в системном ресурсе. Это приводит к ресурсам, не может быть освобождена. В случае распределенной транзакции это со временем заполняет журнала MSDTC, которое останавливает процесс MSDTC. В случае транзакции, управляемой координатором <xref:System.Transactions>, это приводит к постепенному увеличению потребления памяти процессом диспетчера ресурсов. Таким образом, важно вызывать <xref:System.Transactions.Enlistment.Done%2A> метод диспетчер ресурсов по окончании с вашей операции подготовки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>