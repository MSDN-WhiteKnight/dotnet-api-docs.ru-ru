<Type Name="InPlaceHostingManager" FullName="System.Deployment.Application.InPlaceHostingManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37a2d5acb62923ae574d83fa0e8f1aa751bfbd07" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51866132" /></Metadata><TypeSignature Language="C#" Value="public class InPlaceHostingManager : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InPlaceHostingManager extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.InPlaceHostingManager" />
  <TypeSignature Language="VB.NET" Value="Public Class InPlaceHostingManager&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class InPlaceHostingManager : IDisposable" />
  <TypeSignature Language="F#" Value="type InPlaceHostingManager = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Устанавливает или обновляет развернутый на компьютере экземпляр ClickOnce.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Deployment.Application.InPlaceHostingManager> для написания программ установку [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] приложения программным способом. Например этот класс можно использовать в среде управляемой системы управления программного обеспечения (SMS) или в ситуациях, которые требуют сложной установки, который выполняет ряд операций до или после установки на локальном компьютере. Как правило требуется использовать члены этого класса в определенном порядке:  
  
1.  Создайте новый экземпляр класса <xref:System.Deployment.Application.InPlaceHostingManager>.  
  
2.  Загрузить манифест развертывания с помощью <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>.  
  
3.  Убедитесь, что приложение может выполняться с соответствующими разрешениями с помощью <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.  
  
4.  Скачайте и установите приложение с помощью <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  
  
-   При вызове любого из этих параметров не по порядку, они вызовет исключение.  
  
 <xref:System.Deployment.Application.InPlaceHostingManager> можно установить [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] приложения, но не может выполнить его. Некоторые методы в этом классе, такие как <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>, зарезервированы для использования при загрузке приложения на базе Windows Presentation Foundation, выполняющегося в веб-браузере.  
  
 Чтобы использовать <xref:System.Deployment.Application.InPlaceHostingManager> для загрузки и установки приложений, необходимо убедиться в том, сертификат для подписи [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] приложений, которые вы планируете установить уже установлен на клиентских компьютерах в качестве доверенного издателя. Дополнительные сведения о доверенных издателей см. в разделе [Общие сведения о развертывании доверенных приложений](https://msdn.microsoft.com/library/b24a1702-8fbe-45b1-87a0-9618a0708f1d).  
  
> [!NOTE]
>  В данный момент ограничений продукта, которая предотвращает <xref:System.Deployment.Application.InPlaceHostingManager> правильно работать при отладке кода с помощью Visual Studio. При отладке приложения в Visual Studio с помощью клавиши F5, образец, исключения загадочным при вызове <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>. Чтобы выполнить отладку с помощью Visual Studio, запустите приложение без отладки, а затем подключите отладчик. Кроме того можно использовать другой отладчик, как WinDbg.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Deployment.Application.InPlaceHostingManager> установка [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] приложения программным способом на клиентском компьютере.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#1)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> для загрузки и установки заданного приложения.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentManifest As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InPlaceHostingManager(Uri ^ deploymentManifest);" />
      <MemberSignature Language="F#" Value="new System.Deployment.Application.InPlaceHostingManager : Uri -&gt; System.Deployment.Application.InPlaceHostingManager" Usage="new System.Deployment.Application.InPlaceHostingManager deploymentManifest" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">Универсальный код ресурса (<see cref="T:System.Uri" />) для манифеста развертывания приложения [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> для загрузки и установки заданного приложения, размещенного в браузере.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется, если требуется загрузить в приложение Windows Presentation Foundation, размещенного в веб-браузере. Для загрузки приложений на основе Windows Forms, которые развертываются с помощью [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)], использовать <xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A> конструктор с `launchInHostProcess` параметру присвоить `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><see cref="T:System.Deployment.Application.InPlaceHostingManager" /> может использоваться только в операционной системе Microsoft Windows XP или более поздних версиях операционной системы Microsoft Windows.</exception>
        <exception cref="T:System.ArgumentNullException">Невозможно передать <see langword="null" /> аргументу <paramref name="deploymentManifest" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="deploymentManifest" /> использует схему URI, которая не поддерживается [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest, bool launchInHostProcess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest, bool launchInHostProcess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentManifest As Uri, launchInHostProcess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InPlaceHostingManager(Uri ^ deploymentManifest, bool launchInHostProcess);" />
      <MemberSignature Language="F#" Value="new System.Deployment.Application.InPlaceHostingManager : Uri * bool -&gt; System.Deployment.Application.InPlaceHostingManager" Usage="new System.Deployment.Application.InPlaceHostingManager (deploymentManifest, launchInHostProcess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
        <Parameter Name="launchInHostProcess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">Универсальный код ресурса (URI) для манифеста развертывания устанавливаемого приложения.</param>
        <param name="launchInHostProcess">Будет ли данное приложение запускаться в узле, например веб-браузере. Для отдельного приложения установите значение <see langword="false" />.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> для загрузки и установки определенного приложения, которое может быть как независимым приложением типа Windows Forms, так и приложением, которое выполняется в браузере.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода демонстрируется создание экземпляра <xref:System.Deployment.Application.InPlaceHostingManager> , позволяет загружать приложения на основе Windows Forms развернуто с помощью [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><see cref="T:System.Deployment.Application.InPlaceHostingManager" /> может использоваться только в операционной системе Microsoft Windows XP или более поздних версиях операционной системы Microsoft Windows.</exception>
        <exception cref="T:System.ArgumentNullException">Невозможно передать <see langword="null" /> аргументу <paramref name="deploymentManifest" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="deploymentManifest" /> использует схему URI, которая не поддерживается [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AssertApplicationRequirements">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, имеет ли приложение ClickOnce необходимые разрешения и платформозависимые данные для запуска на локальном компьютере.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertApplicationRequirements ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssertApplicationRequirements();" />
      <MemberSignature Language="F#" Value="member this.AssertApplicationRequirements : unit -&gt; unit" Usage="inPlaceHostingManager.AssertApplicationRequirements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Определяет, имеет ли приложение [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] необходимые разрешения и платформозависимые данные для запуска на локальном компьютере.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Необходимо вызвать <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> после <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> возвращает успешный результат. Не следует вызывать <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A> только при вызове <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>, и возвращается без ошибок.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>, который вызывается в теле успешное <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> обработчик событий.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Исключение возникает, если этот метод был вызван перед методом <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements (bool grantApplicationTrust);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements(bool grantApplicationTrust) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertApplicationRequirements (grantApplicationTrust As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssertApplicationRequirements(bool grantApplicationTrust);" />
      <MemberSignature Language="F#" Value="member this.AssertApplicationRequirements : bool -&gt; unit" Usage="inPlaceHostingManager.AssertApplicationRequirements grantApplicationTrust" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grantApplicationTrust" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="grantApplicationTrust">Если равно <see langword="true" />, приложение пытается поднять свои права до требуемого уровня.</param>
        <summary>Определяет, имеет ли приложение [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] необходимые разрешения и платформозависимые данные для запуска на локальном компьютере.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `grantApplicationTrust` — `true`, <xref:System.Deployment.Application.InPlaceHostingManager> предоставит приложение повышенными разрешениями, если они необходимы. Это возможно только если <xref:System.Deployment.Application.InPlaceHostingManager> сможет предоставить эти разрешения. Например если [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] приложения устанавливаются как часть большего размера пакета, установщик было предоставлено полное доверие, <xref:System.Deployment.Application.InPlaceHostingManager> будут иметь возможность предоставить [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] приложению полный уровень доверия. Если `grantApplicationTrust` является `false`, приложение не следует предоставлять любые разрешения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="inPlaceHostingManager.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отменяет асинхронную операцию загрузки.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="inPlaceHostingManager.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, занятые модулем <see cref="T:System.Deployment.Application.InPlaceHostingManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите метод <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> по окончании использования класса <xref:System.Deployment.Application.InPlaceHostingManager>. Метод <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> оставляет класс <xref:System.Deployment.Application.InPlaceHostingManager> в непригодном для использования состоянии. После вызова метода <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Deployment.Application.InPlaceHostingManager> , сборщик мусора мог освободить память, <xref:System.Deployment.Application.InPlaceHostingManager> занимаемую. Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Всегда вызывайте метод <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.Deployment.Application.InPlaceHostingManager>. В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Deployment.Application.InPlaceHostingManager> метод `Finalize`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationAsync">
      <MemberSignature Language="C#" Value="public void DownloadApplicationAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadApplicationAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadApplicationAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadApplicationAsync();" />
      <MemberSignature Language="F#" Value="member this.DownloadApplicationAsync : unit -&gt; unit" Usage="inPlaceHostingManager.DownloadApplicationAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Загружает обновление приложения в фоновом режиме.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Необходимо вызвать этот метод после вызова метода <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>, который вызывается в конце успешной <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> обработчик событий.  
  
 В следующих примерах кода предполагается, что вы уже определены и создан экземпляр <xref:System.Deployment.Application.InPlaceHostingManager> с именем `iphm`.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Исключение возникает, если этот метод был вызван перед методами <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" /> и <see cref="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event DownloadApplicationCompleted As EventHandler(Of DownloadApplicationCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::DownloadApplicationCompletedEventArgs ^&gt; ^ DownloadApplicationCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadApplicationCompleted : EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; " Usage="member this.DownloadApplicationCompleted : System.EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит того, как загрузка приложения на локальный компьютер завершена.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При установке приложения на основе Windows Forms, необходимо попросить пользователей для запуска приложения отдельно. не удается запустить приложения на основе Windows Forms программными средствами с помощью <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется работа обработчика <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted> событий.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#7)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DownloadProgressChanged As EventHandler(Of DownloadProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::DownloadProgressChangedEventArgs ^&gt; ^ DownloadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadProgressChanged : EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; " Usage="member this.DownloadProgressChanged : System.EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда изменяется состояние загрузки приложения или манифеста.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В консольном приложении события назначаются потоки из пула потоков. Таким образом может появиться события обновления хода выполнения по порядку, при этом последующее событие показывать меньшее по сравнению с предыдущего события. Вы увидите такое поведение в приложении на базе Windows Forms, не так, как события в формах Windows Forms обрабатываются последовательно, из очереди сообщений потока пользовательского интерфейса (UI).  
  
   
  
## Examples  
 В следующем примере кода показано, как обновить <xref:System.Windows.Forms.ToolStripProgressBar> содержится в <xref:System.Windows.Forms.StatusStrip>.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#6)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.Remoting.ObjectHandle Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute () As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ Execute();" />
      <MemberSignature Language="F#" Value="member this.Execute : unit -&gt; System.Runtime.Remoting.ObjectHandle" Usage="inPlaceHostingManager.Execute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Запускает приложение [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] только в том случае, если это приложение типа Windows Presentation Foundation, которое выполняется в браузере.</summary>
        <returns>Класс <see cref="T:System.Runtime.Remoting.ObjectHandle" /> соответствует запущенному приложению.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод допустим только для приложений на основе Windows Presentation Foundation, которые могут размещаться в веб-браузере (то есть определить манифестах развертывания `hostInBrowser` XML-элемент).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestAsync">
      <MemberSignature Language="C#" Value="public void GetManifestAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetManifestAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetManifestAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetManifestAsync();" />
      <MemberSignature Language="F#" Value="member this.GetManifestAsync : unit -&gt; unit" Usage="inPlaceHostingManager.GetManifestAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Загружает манифест развертывания приложения [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] в фоновом режиме, после чего будет сгенерировано событие независимо от результата завершении операции (операция может быть завершена успешно или с ошибкой).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для получения уведомлений о завершении этого события, создайте обработчик событий для <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> событий. Если это событие вызывается, и сообщение об ошибке не обозначается <xref:System.Deployment.Application.GetManifestCompletedEventArgs>, Далее следует вызывать <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> чтобы убедиться, что приложение будет иметь разрешения на запуск на локальном компьютере.  
  
   
  
## Examples  
 В следующих примерах кода показано, как вызвать <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> метод. Обработчик <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> проверяет событие обратного вызова, если загрузки манифеста выполнена успешно и если да, запрашивает у пользователя с дополнительными сведениями о приложении. Если пользователь соглашается с тем продолжить установку, обработчик вызывает <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  
  
 В следующих примерах кода предполагается, что вы уже определены и создан экземпляр <xref:System.Deployment.Application.InPlaceHostingManager> с именем `iphm`.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event GetManifestCompleted As EventHandler(Of GetManifestCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::GetManifestCompletedEventArgs ^&gt; ^ GetManifestCompleted;" />
      <MemberSignature Language="F#" Value="member this.GetManifestCompleted : EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; " Usage="member this.GetManifestCompleted : System.EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после того, как загрузка манифеста развертывания на локальный компьютер была завершена.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> свойство <xref:System.Deployment.Application.GetManifestCompletedEventArgs> проверяемый ли <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> завершилась успешно или вернул ошибку. Если <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> имеет значение null, <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> успешно завершена, и вы можете вызвать <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.  
  
   
  
## Examples  
 В следующих примерах кода показано, как вызвать <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> метод. Обработчик <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> проверяет событие обратного вызова, если загрузки манифеста выполнена успешно и если да, запрашивает у пользователя с дополнительными сведениями о приложении. Если пользователь соглашается с тем продолжить установку, обработчик вызывает <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  
  
 В следующих примерах кода предполагается, что вы уже определены и создан экземпляр <xref:System.Deployment.Application.InPlaceHostingManager> с именем `iphm`.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomAddIn">
      <MemberSignature Language="C#" Value="public static void UninstallCustomAddIn (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomAddIn(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallCustomAddIn (subscriptionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallCustomAddIn(System::String ^ subscriptionId);" />
      <MemberSignature Language="F#" Value="static member UninstallCustomAddIn : string -&gt; unit" Usage="System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn subscriptionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">Строка, содержащая идентификатор подписки, который задает удаляемую надстройку.</param>
        <summary>Удаляет все ранее установленные пользовательские компоненты приложения.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="subscriptionId" /> не является допустимым удостоверением подписки или не содержит имени, маркера открытого ключа, сведений об архитектуре процессора или номере версии.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="subscriptionId" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomUXApplication">
      <MemberSignature Language="C#" Value="public static void UninstallCustomUXApplication (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomUXApplication(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallCustomUXApplication (subscriptionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallCustomUXApplication(System::String ^ subscriptionId);" />
      <MemberSignature Language="F#" Value="static member UninstallCustomUXApplication : string -&gt; unit" Usage="System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication subscriptionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">Строка, содержащая идентификатор подписки, который задает удаляемое приложение [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</param>
        <summary>Удаляет приложение [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)], которое содержит элемент &lt;customUX&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод удаляет ранее установленные [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] приложение, использующее `<customUX>` элемент в [ &lt;entryPoint&gt; элемент](/visualstudio/deployment/entrypoint-element-clickonce-application).  
  
 Собственные установщики, которые не создают запись "Установка и удаление программ" для [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] приложение должно сохранять идентификатор подписки, найденный в <xref:System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity%2A> свойство во время установки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>