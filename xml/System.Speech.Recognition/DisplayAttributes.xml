<Type Name="DisplayAttributes" FullName="System.Speech.Recognition.DisplayAttributes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a5d81b380cc735b7f525ee892366134b545396e5" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55371125" /></Metadata><TypeSignature Language="C#" Value="public enum DisplayAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DisplayAttributes extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.DisplayAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Enum DisplayAttributes" />
  <TypeSignature Language="C++ CLI" Value="public enum class DisplayAttributes" />
  <TypeSignature Language="F#" Value="type DisplayAttributes = " />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Список параметров, которые объект <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> может использовать для указания пробела для отображения слова или знака препинания.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Desktop Speech возвращает распознанной фразы в виде коллекции <xref:System.Speech.Recognition.RecognizedWordUnit> или <xref:System.Speech.Recognition.ReplacementText> объектов. Каждый объект соответствует одному слову или знак пунктуации. `DisplayAttributes` Свойство <xref:System.Speech.Recognition.RecognizedWordUnit> или <xref:System.Speech.Recognition.ReplacementText> использует членом <xref:System.Speech.Recognition.DisplayAttributes> перечисление для описания способа печати интервал обрабатывается определенное слово или знак пунктуации.  
  
 Два или несколько членов `DisplayAttributes` перечисления можно объединить с побитовым `OR` чтобы указать способ отображения конкретного слова.  
  
> [!NOTE]
>  Форматирование, что в распознаватель речи использует отображения — зависит от языка.  
  
 Например, предположим, что входная фраза для механизма распознавания, применяя грамматику системы по умолчанию, предоставляемые <xref:System.Speech.Recognition.DictationGrammar> — «Hello запятая, сказал он период». Возвращает модуль распознавания <xref:System.Speech.Recognition.RecognizedPhrase> содержащий пять <xref:System.Speech.Recognition.RecognizedWordUnit> объектов, содержащий следующие строки со следующими `DisplayAttributes` значения.  
  
|Элемент|`DisplayAttributes`|  
|----------|-------------------------|  
|Здравствуйте|OneTrailingSpace|  
|,|OneTrailingSpace &#124; ConsumeLeadingSpaces|  
|he|OneTrailingSpace|  
|говорят, что|OneTrailingSpace|  
|.|OneTrailingSpace &#124; ConsumeLeadingSpaces|  
  
 Текст, возвращаемый для данная распознанная фраза печатается как: «Hello, сказал он.»  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> свойство список <xref:System.Speech.Recognition.RecognizedWordUnit> объектов в виде слова и фразы.  
  
```csharp  
  
// Use the DisplayAttributes property to format speech as text.   
  
static string GetDisplayText(List<RecognizedWordUnit> words)  
{  
  StringBuilder sb = new StringBuilder();  
  
  // Concatenate the word units together. Use the DisplayAttributes  
  // property of each word unit to add or remove white space around  
  // the word unit.  
  foreach (RecognizedWordUnit word in words)  
  {  
    if ((word.DisplayAttributes  
      & DisplayAttributes.ConsumeLeadingSpaces) != 0))  
    {  
      sb = new StringBuilder(sb.ToString().TrimEnd());  
    }  
  
    sb.Append(word.Text);  
  
    if ((word.DisplayAttributes  
      & DisplayAttributes.OneTrailingSpace) != 0)  
    {  
      sb.Append(" ");  
    }  
    else if ((word.DisplayAttributes  
      & DisplayAttributes.TwoTrailingSpaces) != 0)  
    {  
      sb.Append("  ");  
    }  
  }  
  
  return sb.ToString();  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.RecognizedPhrase" />
    <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
    <altmember cref="T:System.Speech.Recognition.RecognizedWordUnit" />
    <altmember cref="T:System.Speech.Recognition.ReplacementText" />
  </Docs>
  <Members>
    <Member MemberName="ConsumeLeadingSpaces">
      <MemberSignature Language="C#" Value="ConsumeLeadingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes ConsumeLeadingSpaces = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces" />
      <MemberSignature Language="VB.NET" Value="ConsumeLeadingSpaces" />
      <MemberSignature Language="C++ CLI" Value="ConsumeLeadingSpaces" />
      <MemberSignature Language="F#" Value="ConsumeLeadingSpaces = 16" Usage="System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Элемент не содержит пробелов перед собой.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Speech.Recognition.DisplayAttributes.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Элемент не определяет, как обрабатывать пробелы.</summary>
      </Docs>
    </Member>
    <Member MemberName="OneTrailingSpace">
      <MemberSignature Language="C#" Value="OneTrailingSpace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes OneTrailingSpace = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.OneTrailingSpace" />
      <MemberSignature Language="VB.NET" Value="OneTrailingSpace" />
      <MemberSignature Language="C++ CLI" Value="OneTrailingSpace" />
      <MemberSignature Language="F#" Value="OneTrailingSpace = 4" Usage="System.Speech.Recognition.DisplayAttributes.OneTrailingSpace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Элемент содержит один пробел после себя.</summary>
      </Docs>
    </Member>
    <Member MemberName="TwoTrailingSpaces">
      <MemberSignature Language="C#" Value="TwoTrailingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes TwoTrailingSpaces = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces" />
      <MemberSignature Language="VB.NET" Value="TwoTrailingSpaces" />
      <MemberSignature Language="C++ CLI" Value="TwoTrailingSpaces" />
      <MemberSignature Language="F#" Value="TwoTrailingSpaces = 8" Usage="System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Элемент содержит два пробела после себя.</summary>
      </Docs>
    </Member>
    <Member MemberName="ZeroTrailingSpaces">
      <MemberSignature Language="C#" Value="ZeroTrailingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes ZeroTrailingSpaces = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces" />
      <MemberSignature Language="VB.NET" Value="ZeroTrailingSpaces" />
      <MemberSignature Language="C++ CLI" Value="ZeroTrailingSpaces" />
      <MemberSignature Language="F#" Value="ZeroTrailingSpaces = 2" Usage="System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Элемент не содержит пробелов после себя.</summary>
      </Docs>
    </Member>
  </Members>
</Type>