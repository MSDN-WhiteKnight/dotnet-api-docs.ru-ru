<Type Name="Choices" FullName="System.Speech.Recognition.Choices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6799d9bc8ae5006f82ba9a22cc0d7a3faad0720b" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57919927" /></Metadata><TypeSignature Language="C#" Value="public class Choices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Choices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.Choices" />
  <TypeSignature Language="VB.NET" Value="Public Class Choices" />
  <TypeSignature Language="C++ CLI" Value="public ref class Choices" />
  <TypeSignature Language="F#" Value="type Choices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_oneOf.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет набор вариантов в ограничениях грамматики распознавания речи.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Speech.Recognition.Choices> объект представляет собой компонент фразу, которая может иметь одно из следующих значений. Этот класс используется при создании грамматики распознавания речи из <xref:System.Speech.Recognition.GrammarBuilder> объекта.  
  
 Например <xref:System.Speech.Recognition.Choices> объект может представлять компонент *colorChoice* из фразы «измените цвет на *colorChoice*«, где допустимые значения для *colorChoice* «red» или «зеленый» или «blue».  
  
> [!NOTE]
>  Для использования <xref:System.Speech.Recognition.Choices> как дополнительный компонент во фразе следует создать <xref:System.Speech.Recognition.Choices> и добавьте его к <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> со `minRepeat` и `maxRepeat` равным 0 и 1, соответственно. Независимо от того, имеется ли необязательный компонент произнесении фразы, содержащий дополнительные компоненты можно распознать.  
  
 <xref:System.Speech.Recognition.Choices> Класс выполняет ту же функцию, что `one-of` элементу XML, определенному в [спецификации грамматики распознавания речи (SRGS) версии 1.0](https://www.w3.org/TR/speech-grammar/) и аналогичен <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> в класс <xref:System.Speech.Recognition.SrgsGrammar> пространство имен.  
  
 Дополнительные сведения об определении грамматики распознавания речи см. в разделе [распознавания речи](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) и [создание грамматики GrammarBuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).  
  
   
  
## Examples  
 В следующем примере создается грамматики распознавания речи для фразы «Меняем цвет фона на *colorChoice*«, где *colorChoice* может принимать одно из определенных цветов. <xref:System.Speech.Recognition.GrammarBuilder> Используется для определения ограничения для грамматики.  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a Choices object that contains a set of alternative colors.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  colorChoice.Add(new string[] {"cyan", "yellow", "magenta"});  
  
  // Construct the phrase.  
  GrammarBuilder builder = new GrammarBuilder("Set background to");  
  builder.Append(colorChoice);  
  
  // Create a grammar for the phrase.  
  Grammar colorGrammar = new Grammar(builder);  
  colorGrammar.Name = "SetBackground";  
  
  return colorGrammar;  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Спецификации грамматики распознавания речи (SRGS)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.Choices" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы можете создать <xref:System.Speech.Recognition.Choices> с помощью конструктора по умолчанию (который возвращает пустой объект), из группы <xref:System.String> объектов, или из набора <xref:System.Speech.Recognition.GrammarBuilder> объектов.  
  
 Так как <xref:System.Speech.Recognition.GrammarBuilder> объект поддерживает неявное преобразование из <xref:System.Speech.Recognition.SemanticResultValue> и <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices> могут создаваться из массив этих объектов, с помощью приведения.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Speech.Recognition.Choices> объекты для создания двух списков из альтернатив.  
  
 Первый <xref:System.Speech.Recognition.Choices> объект создается из массива <xref:System.String> объектов. Другой <xref:System.Speech.Recognition.Choices> объект создается из массива <xref:System.Speech.Recognition.GrammarBuilder> объектов, которые неявно преобразовать путем приведения.  
  
 В примере используется <xref:System.Speech.Recognition.GrammarBuilder> объект сборка фразу, с помощью <xref:System.Speech.Recognition.Choices> объектов и двух дополнительных строк, которые могут использоваться для распознавания речи ввода в форме «Call [contactlList] на [phoneType] телефона», например «Jane вызова на мобильный телефон».  
  
```  
public GrammarBuilder ChoicesContructor2 ()  
{  
    GrammarBuilder gb = new GrammarBuilder ();  
    Choices phoneType = new Choices (new string[] {"cell", "home", "work"});  
    Choices contactList = new Choices (new GrammarBuilder[] {(GrammarBuilder) "Mark", (GrammarBuilder) "Jane", (GrammarBuilder) "Frank"});  
    gb.Append ("Call");  
    gb.Append (contactList);  
    gb.Append ("on");  
    gb.Append (phoneType);  
    gb.Append ("phone");  
    return gb;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.Choices" />, содержащий пустой набор вариантов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор возвращает допустимый, пустой набор вариантов. Можно добавить альтернативные варианты, с помощью любого из <xref:System.Speech.Recognition.Choices.Add%2A> методы.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Speech.Recognition.Choices> и <xref:System.Speech.Recognition.GrammarBuilder> объекты для создания фразу, которая может использоваться для распознавания речи входных данных, например «Anne вызов на свой ячейки» и «James вызов на свой рабочий телефон». В примере используется неявные преобразования из <xref:System.Speech.Recognition.Choices> и <xref:System.String> для <xref:System.Speech.Recognition.GrammarBuilder>.  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices (params System.Speech.Recognition.GrammarBuilder[] alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder[] alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray alternateChoices As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices(... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Choices : System.Speech.Recognition.GrammarBuilder[] -&gt; System.Speech.Recognition.Choices" Usage="new System.Speech.Recognition.Choices alternateChoices" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="alternateChoices">Массив, содержащий набор альтернатив.</param>
        <summary>Инициализирует экземпляр класса <see cref="T:System.Speech.Recognition.Choices" /> из массива, содержащего один или несколько объектов <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый <xref:System.Speech.Recognition.GrammarBuilder> в `alternateChoices` определяет один из них. Если `alternateChoices` — пустой массив, конструктор возвращает пустой набор вариантов. Можно добавить альтернативные варианты, с помощью любого из <xref:System.Speech.Recognition.Choices.Add%2A> методы.  
  
 Конструктор создает <xref:System.ArgumentNullException> при `alternateChoices` — `null` или любой из элементов массива при `null`.  
  
 Так как <xref:System.Speech.Recognition.GrammarBuilder> класс обеспечивает поддержку неявное преобразование <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultValue>, и <xref:System.Speech.Recognition.SemanticResultKey> объектов <xref:System.Speech.Recognition.GrammarBuilder> экземпляров, с надлежащим образом при использовании приведения, этот конструктор может также использоваться для создания <xref:System.Speech.Recognition.Choices> объект из списка любые из этих объектов.  
  
   
  
## Examples  
 В следующем примере используется `Choices` и <xref:System.Speech.Recognition.GrammarBuilder> объекты для создания <xref:System.Speech.Recognition.Grammar> для фразах, таких как «Anne вызов на свой ячейки» и «James вызов на свой рабочий телефон». В примере используется неявные преобразования из `Choices` и <xref:System.String> для <xref:System.Speech.Recognition.GrammarBuilder>.  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices (params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices(... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Choices : string[] -&gt; System.Speech.Recognition.Choices" Usage="new System.Speech.Recognition.Choices phrases" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="phrases">Массив, содержащий набор альтернатив.</param>
        <summary>Инициализирует экземпляр класса <see cref="T:System.Speech.Recognition.Choices" /> из массива, содержащего один или несколько объектов <see cref="T:System.String" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый <xref:System.String> в `phrases` определяет один из них. Модуль распознавания речи можно использовать один из элементов в массиве строк для соответствия текстовому вводу. Если `phrases` — пустой массив, конструктор возвращает пустой набор вариантов. Можно добавить альтернативные варианты, с помощью любого из <xref:System.Speech.Recognition.Choices.Add%2A> методы.  
  
 Конструктор создает <xref:System.ArgumentNullException> при `phrases` — `null` или какой-либо из элементов массива `null`. Конструктор создает <xref:System.ArgumentException> Если любой элемент в массиве является пустой строкой (»»).  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Speech.Recognition.Choices> и <xref:System.Speech.Recognition.GrammarBuilder> объекты для создания <xref:System.Speech.Recognition.Grammar> для фразах, таких как «Anne вызов на свой ячейки» и «James вызов на свой рабочий телефон». В примере используется неявные преобразования из `Choices` и <xref:System.String> для <xref:System.Speech.Recognition.GrammarBuilder>.  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет элементы в набор вариантов.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (params System.Speech.Recognition.GrammarBuilder[] alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Speech.Recognition.GrammarBuilder[] alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (ParamArray alternateChoices As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Speech.Recognition.GrammarBuilder[] -&gt; unit" Usage="choices.Add alternateChoices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="alternateChoices">Объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, добавляемый в данный объект <see cref="T:System.Speech.Recognition.Choices" />.</param>
        <summary>Добавляет массив, содержащий один или несколько объектов <see cref="T:System.Speech.Recognition.GrammarBuilder" />, в набор вариантов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Благодаря поддержке неявное преобразование из <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, и <xref:System.Speech.Recognition.SemanticResultValue> объектов <xref:System.Speech.Recognition.GrammarBuilder>, эти три класса может быть добавлена к <xref:System.Speech.Recognition.Choices> также экземпляра.  
  
 Если `alternateChoices` — пустой массив, этот метод не обновляет набор вариантов.  
  
 Приложения могут использовать оба <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> и <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> Добавление альтернативы <xref:System.Speech.Recognition.Choices> объекта.  
  
 Этот метод вызывает исключение <xref:System.ArgumentNullException> при `alternateChoices` — `null` или какой-либо из элементов массива `null`.  
  
   
  
## Examples  
 В следующем примере создается грамматики распознавания речи для фразах, таких как «Anne вызов на свой ячейки» и «James вызов на свой рабочий телефон». В примере используется обе перегрузки <xref:System.Speech.Recognition.Choices.Add%2A> метод для создания грамматики.  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.Add(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberSignature Language="F#" Value="member this.Add : string[] -&gt; unit" Usage="choices.Add phrases" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="phrases">Строки для добавления в этот объект <see cref="T:System.Speech.Recognition.Choices" />.</param>
        <summary>Добавляет массив, содержащий один или несколько объектов <see cref="T:System.String" />, в набор вариантов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения могут использовать оба <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> и <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> Добавление альтернативы <xref:System.Speech.Recognition.Choices> объекта.  
  
 Если `phrases` — пустой массив, этот метод не обновляет набор альтернатив.  
  
 Этот метод вызывает исключение <xref:System.ArgumentNullException> при `phrases` — `null` или какой-либо из элементов массива `null`. Этот метод вызывает исключение <xref:System.ArgumentException> Если любой элемент в массиве является пустой строкой (»»).  
  
   
  
## Examples  
 В следующем примере создается грамматики распознавания речи для фраз, аналогичную «Anne вызов на свой ячейки» и «James вызов на свой рабочий телефон». В примере используется обе перегрузки <xref:System.Speech.Recognition.Choices.Add%2A> метод для создания грамматики.  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToGrammarBuilder : unit -&gt; System.Speech.Recognition.GrammarBuilder" Usage="choices.ToGrammarBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Speech.Recognition.GrammarBuilder" /> из данного объекта <see cref="T:System.Speech.Recognition.Choices" />.</summary>
        <returns><see cref="T:System.Speech.Recognition.GrammarBuilder" />, соответствующий данному объекту <see cref="T:System.Speech.Recognition.Choices" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Recognition.GrammarBuilder> Возвращается с помощью данного метода эквивалентен один возвращается по одной из следующих.  
  
-   Вызов <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> конструктор с этим объектом в качестве параметра.  
  
-   С помощью явного или неявного приведения этого объекта к <xref:System.Speech.Recognition.GrammarBuilder>.  
  
   
  
## Examples  
 В следующем примере создается грамматики распознавания речи для изменения цвета фона.  
  
```csharp  
  
private Grammar CreateColorChoice()  
{  
  
  // Create a Choices object that contains a set of alternative colors.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append(new Choices(new string[] {"Set", "Change"}));  
  gb.Append("background to");  
  gb.Append(colorChoice.ToGrammarBuilder());  
  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "modify background color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>