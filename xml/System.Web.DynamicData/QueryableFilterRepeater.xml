<Type Name="QueryableFilterRepeater" FullName="System.Web.DynamicData.QueryableFilterRepeater">
  <Metadata><Meta Name="ms.openlocfilehash" Value="65b3373022808503a216e38c903e0a1fb9a594d3" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55353042" /></Metadata><TypeSignature Language="C#" Value="public class QueryableFilterRepeater : System.Web.UI.Control, System.Web.DynamicData.IFilterExpressionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryableFilterRepeater extends System.Web.UI.Control implements class System.Web.DynamicData.IFilterExpressionProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.QueryableFilterRepeater" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryableFilterRepeater&#xA;Inherits Control&#xA;Implements IFilterExpressionProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryableFilterRepeater : System::Web::UI::Control, System::Web::DynamicData::IFilterExpressionProvider" />
  <TypeSignature Language="F#" Value="type QueryableFilterRepeater = class&#xA;    inherit Control&#xA;    interface IFilterExpressionProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFilterExpressionProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет элемент управления-шаблон, который автоматически создает пользовательский интерфейс для фильтрации строк таблицы по поддерживаемым типам столбцов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#introduction)  
  
-   [Класс контекста](#ClassContext)  
  
-   [Декларативный синтаксис](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 <xref:System.Web.DynamicData.QueryableFilterRepeater> Элемент управления используется в разметке страницы для автоматического создания пользовательского интерфейса для фильтрации строк таблицы. По умолчанию используя шаблоны фильтров по умолчанию, которые находятся в каталоге ~\DynamicData\Filters динамических данных создает пользовательский Интерфейс для каждого поддерживаемого типа столбца.  
  
 Эти шаблоны по умолчанию поддерживают типы столбцов внешнего ключа, логическое значение и перечисления.  
  
 В следующей таблице перечислены задачи, связанные с <xref:System.Web.DynamicData.QueryableFilterRepeater> типа.  
  
|Задача|Описание|  
|----------|-----------------|  
|Создание пользовательского интерфейса для фильтрации строк таблицы.|Добавить <xref:System.Web.DynamicData.DynamicFilter> элементы управления для создания пользовательского интерфейса с помощью <xref:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate%2A> свойство.|  
|Проверьте ли <xref:System.Web.DynamicData.QueryableFilterRepeater> содержит элемент управления фильтры полей данных.|Выполнить проверку в <xref:System.Web.DynamicData.QueryableFilterRepeater.OnPreRender%2A> метод.|  
  
<a name="ClassContext"></a>   
## <a name="class-context"></a>Класс контекста  
 <xref:System.Web.DynamicData.QueryableFilterRepeater> Управления предназначен для работы с <xref:System.Web.UI.WebControls.QueryExtender> элемента управления. Он должен ссылаться на <xref:System.Web.DynamicData.DynamicFilterExpression> экземпляра внутри <xref:System.Web.UI.WebControls.QueryExtender> объекта в разметке страницы.  
  
 На следующем рисунке показана действия, выполняемые для реализации автоматической фильтрации строк таблицы динамических данных.  
  
 ![Элементы фильтрации строк таблицы динамических данных](~/add/media/dynamic-autofilter.png "элементы фильтрации строк таблицы динамических данных")  
  
1.  <xref:System.Web.DynamicData.DynamicFilter> Элементов управления (которые содержатся в <xref:System.Web.DynamicData.QueryableFilterRepeater> управления), передайте значение столбца для <xref:System.Web.UI.WebControls.QueryExtender> элемента управления.  
  
2.  <xref:System.Web.UI.WebControls.QueryExtender> Элемент управления использует это значение для создания запроса, фильтрации данных, которая затем передается в элемент управления источником данных.  
  
3.  Элемент управления источником данных передает информацию о поставщика источника данных фильтрации запроса.  
  
4.  Поставщик источника данных передает запрос к базе данных.  
  
5.  База данных возвращает отфильтрованные строки таблицы.  
  
6.  Поставщик источника данных отправляет эти данные обратно в элемент управления источником данных.  
  
7.  Этот элемент управления передает отфильтрованные строки таблицы для отображения элемента управления с привязкой.  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:QueryableFilterRepeater   
    ID="string"  
    DynamicFilterContainerId="string"   
    EnableViewState="True|False"   
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"   
    Visible="true"  
    runat="server" />  
```  
  
   
  
## Examples  
 Проект Visual Studio с исходным кодом доступен здесь: [Формирование шаблонов динамических данных](https://go.microsoft.com/fwlink/?LinkId=168914).  
  
 В следующем примере показано, как использовать <xref:System.Web.DynamicData.QueryableFilterRepeater> элементу управления для создания пользовательского интерфейса для фильтрации строк таблицы. Шаблон элемента управления repeater содержит <xref:System.Web.DynamicData.DynamicFilter> элемента управления, который создает пользовательский Интерфейс для всех поддерживаемых тип столбца.  
  
 В примере требуется следующее:  
  
-   Динамические данные веб-сайта или динамические данные веб-приложения. Дополнительные сведения см. в разделе `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`.  
  
 [!code-aspx-csharp[System.Web.DynamicData.QueryableFilterRepeater#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/cs/queryablefilterrepeater.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.QueryableFilterRepeater#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/vb/queryablefilterrepeater.aspx#1)]  
  
 [!code-csharp[System.Web.DynamicData.QueryableFilterRepeater#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/cs/queryablefilterrepeater.aspx.cs#3)]
 [!code-vb[System.Web.DynamicData.QueryableFilterRepeater#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/vb/queryablefilterrepeater.aspx.vb#3)]  
  
 [!code-csharp[System.Web.DynamicData.QueryableFilterRepeater#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/cs/awltl2spartials.cs#4)]
 [!code-vb[System.Web.DynamicData.QueryableFilterRepeater#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/vb/awltpartiall2sclasses.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c86f5d5-795c-4b28-8733-8ea9c0802d0f">Пошаговое руководство. Фильтрация строк в таблицах, которые имеют связь «родители потомки»</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryableFilterRepeater ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterRepeater.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryableFilterRepeater();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно вы не используйте этот конструктор для инициализации нового экземпляра класса <xref:System.Web.DynamicData.QueryableFilterRepeater> класса. Вместо этого указать <xref:System.Web.DynamicData.QueryableFilterRepeater> управления в разметке страницы и инициализируется автоматически при запуске страницы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicFilterContainerId">
      <MemberSignature Language="C#" Value="public string DynamicFilterContainerId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicFilterContainerId" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.QueryableFilterRepeater.DynamicFilterContainerId" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicFilterContainerId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicFilterContainerId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicFilterContainerId : string with get, set" Usage="System.Web.DynamicData.QueryableFilterRepeater.DynamicFilterContainerId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("DynamicFilter")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty(typeof(System.Web.DynamicData.QueryableFilterUserControl))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает идентификатор элемента управления <see cref="T:System.Web.DynamicData.DynamicFilter" /> внутри шаблона, настроенного как фильтр по столбцу.</summary>
        <value>Идентификатор элемента управления <see cref="T:System.Web.DynamicData.DynamicFilter" /> внутри шаблона, настроенного как фильтр по столбцу.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если идентификатор не задано, значение по умолчанию для идентификатора — «DynamicFilter».  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.INamingContainer))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает элементы управления, заполняющие класс <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" />.</summary>
        <value>Объект, определяющий способ отображения элементов в элементе управления <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate%2A> Свойство определяет поведение, которое используется для заполнения <xref:System.Web.DynamicData.QueryableFilterRepeater> с дочерними элементами управления. Дочерние элементы управления представляют встроенные шаблоны, которые определены на странице.  
  
   
  
## Examples  
 В следующем примере показано, как задать <xref:System.Web.DynamicData.QueryableFilterRepeater> элемента управления <xref:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate%2A> свойство, чтобы он содержал <xref:System.Web.DynamicData.DynamicFilter> элементы управления для создания пользовательского интерфейса для каждого поддерживаемый тип столбца.  
  
 [!code-aspx-csharp[System.Web.DynamicData.QueryableFilterRepeater#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/cs/queryablefilterrepeater.aspx#2)]
 [!code-aspx-vb[System.Web.DynamicData.QueryableFilterRepeater#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/vb/queryablefilterrepeater.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterRepeater.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="queryableFilterRepeater.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Данные события.</param>
        <summary>Проверяет, содержит ли элемент управления фильтры полей данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если ни одного фильтра поля данных, этот метод задает <xref:System.Web.UI.Control.Visible%2A> свойство <xref:System.Web.DynamicData.QueryableFilterRepeater> объект `false`. Этот метод вызывается после <xref:System.Web.DynamicData.QueryableFilterRepeater> загрузить элемент управления, но до его отображения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFilterExpressionProvider.GetQueryable">
      <MemberSignature Language="C#" Value="System.Linq.IQueryable IFilterExpressionProvider.GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Linq.IQueryable System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterRepeater.System#Web#DynamicData#IFilterExpressionProvider#GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Function GetQueryable (source As IQueryable) As IQueryable Implements IFilterExpressionProvider.GetQueryable" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Linq::IQueryable ^ System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(System::Linq::IQueryable ^ source) = System::Web::DynamicData::IFilterExpressionProvider::GetQueryable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(System.Linq.IQueryable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Запрос источника данных.</param>
        <summary>Получает измененный запрос с помощью текущего значения фильтра.</summary>
        <returns>Фильтр.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный элемент является явной реализацией элемента интерфейса. Он может использоваться только при условии, что экземпляр класса <xref:System.Web.DynamicData.QueryableFilterRepeater> приведен к типу интерфейса <xref:System.Web.DynamicData.IFilterExpressionProvider>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFilterExpressionProvider.Initialize">
      <MemberSignature Language="C#" Value="void IFilterExpressionProvider.Initialize (System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.DynamicData.IFilterExpressionProvider.Initialize(class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterRepeater.System#Web#DynamicData#IFilterExpressionProvider#Initialize(System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Sub Initialize (dataSource As IQueryableDataSource) Implements IFilterExpressionProvider.Initialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.DynamicData.IFilterExpressionProvider.Initialize(System::Web::UI::WebControls::IQueryableDataSource ^ dataSource) = System::Web::DynamicData::IFilterExpressionProvider::Initialize;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFilterExpressionProvider.Initialize(System.Web.UI.WebControls.IQueryableDataSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="dataSource">Источник данных.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный элемент является явной реализацией элемента интерфейса. Он может использоваться только при условии, что экземпляр класса <xref:System.Web.DynamicData.QueryableFilterRepeater> приведен к типу интерфейса <xref:System.Web.DynamicData.IFilterExpressionProvider>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>