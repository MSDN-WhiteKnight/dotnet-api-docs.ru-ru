<Type Name="SecurityToken" FullName="System.IdentityModel.Tokens.SecurityToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67881ad20a428df0b74bdede54027b38fd235e07" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58456917" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityToken extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityToken abstract" />
  <TypeSignature Language="F#" Value="type SecurityToken = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет базовый класс, используемый для реализации всех маркеров безопасности.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте маркер безопасности, чтобы обеспечить учетные данные для проверки подлинности или защитить сообщение.  
  
 Маркер безопасности можно использовать для предоставления учетных данных проверки подлинности, материал криптографического ключа, или, в случае маркер безопасности, выданный службой маркеров безопасности (STS), коллекцию заявок о субъекте. Все маркеры безопасности являются производными от <xref:System.IdentityModel.Tokens.SecurityToken> класса.  
  
 Начиная с .NET 4.5 Windows Identity Foundation (WIF) полностью интегрирована в .NET Framework и классов, предоставляемых WIF являются предпочтительным способом обработки маркеров безопасности в коде. В WIF, маркеры безопасности сериализуются и десериализуются в и из XML-представление и являются проверены с помощью классов, производных от <xref:System.IdentityModel.Tokens.SecurityTokenHandler> базового класса. Проверив токен, включает в себя не только, гарантируя, что маркер является допустимым, но также возврат <xref:System.Security.Claims.ClaimsIdentity> экземпляр из маркера, который может использоваться в принятии решений проверки подлинности и авторизации. <xref:System.Security.Claims.ClaimsIdentity> Создается путем реализации данного обработчика токенов, <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> метод на основе утверждений, содержащихся в маркере вводе также как и утверждения, которые являются внутренними для маркера из самого.  
  
 WIF поставляется с поддержкой для следующих типов маркеров безопасности:  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityToken>: Представляет маркер безопасности, основанный на утверждении SAML 2.0. Этот тип токена обычно выдается службой маркеров безопасности в ответ на WS-Trust или WS-Federation запросе токена безопасности (RST).  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityToken>:  Представляет маркер безопасности, основанный на утверждении SAML 1.1. Этот тип токена обычно выдается службой маркеров безопасности в ответ на WS-Trust или WS-Federation запросе токена безопасности (RST).  
  
-   <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> и <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: Представляет маркер безопасности, основанный на билете Kerberos, при получении или в сообщении SOAP  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityToken>: Представляет маркер безопасности, который основан на ключе, созданном с помощью алгоритма RSA.  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityToken>: Представляет маркер безопасности, который содержит информацию о сеансе.  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityToken>: Представляет маркер безопасности, основанный на имени пользователя и пароля.  
  
-   <xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Представляет маркер безопасности, основанный на удостоверении домена Windows или учетной записи пользователя.  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityToken>: Представляет маркер безопасности, основанный на сертификате X.509.  
  
-   <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Представляет маркер безопасности, основанный на сертификате X.509, сопоставленный с пользователя домена Windows или учетной записи пользователя на локальном компьютере.  
  
 Два других маркеров классы безопасности, <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> и <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>, можно использовать для обработки общих случаях.  
  
 Вообще говоря, безопасности, маркеры делятся на три основные категории:  
  
-   Маркеры, которые содержат или ссылаться на криптографических ключей материал. Например <xref:System.IdentityModel.Tokens.RsaSecurityToken> и <xref:System.IdentityModel.Tokens.X509SecurityToken> типов часто используются для этой цели.  
  
-   Маркеры, которые представляют учетные данные для пользователей, которые уже прошли проверку подлинности. Например <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, <xref:System.IdentityModel.Tokens.WindowsSecurityToken>, а в случае пользователь прошел проверку подлинности с помощью сертификата, <xref:System.IdentityModel.Tokens.X509SecurityToken> типов.  
  
-   Маркеры, выпущенные службой маркеров безопасности (STS) в ответ на запрос маркера безопасности, с помощью протокола WS-Federation или WS-Trust. Обычно они возвращаются в `wst:RequestSecurityTokenResponse` XML-фрагмент. <xref:System.IdentityModel.Tokens.Saml2SecurityToken> И <xref:System.IdentityModel.Tokens.SamlSecurityToken> типов чаще всего используются для представления этих токенов.  
  
 Это специальный тип маркера, <xref:System.IdentityModel.Tokens.SessionSecurityToken>, содержит сведения, необходимые для повторного создания участника при использовании сеансов в активных или пассивных сценариях.  
  
 Добавление функциональных возможностей существующих типов маркеров, могут быть порождены от конкретного типа и соответствующий обработчик токенов для поддержки любых новых элементов, добавляемые к маркеру. Чтобы добавить поддержку для новых типов маркеров, можно получить непосредственно из <xref:System.IdentityModel.Tokens.SecurityToken> класса. При этом также необходимо будет создать класс обработчика токенов путем наследования от <xref:System.IdentityModel.Tokens.SecurityTokenHandler> класса. В зависимости от того, как маркер будет использоваться, могут также необходимо создать пользовательский Сопоставитель токена путем наследования от <xref:System.IdentityModel.Tokens.IssuerTokenResolver> класса также как один или несколько типов конструкции пользовательского идентификатора ключа путем наследования от <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> класса.  
  
   
  
## Examples  
 Примеры кода, которые используются в <xref:System.IdentityModel.Tokens.SecurityToken> разделы берутся из `Custom Token` образца. В этом примере пользовательские классы, позволяющие обработки токены Simple Web (SWT). Он включает в себя реализацию `SimpleWebToken` класс и `SimpleWebTokenHandler` класса, а также другие классы, поддерживающие маркеры SWT. В этом примере и другие примеры, доступные для WIF и о том, как загрузить их, узнать о [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md). Следующий код показывает реализацию `SimpleWebToken` класса. Этот класс расширяет <xref:System.IdentityModel.Tokens.SecurityToken>.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Необходимо переопределить <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />, и <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> свойства. <see cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />, И <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> все методы поддерживают идентификаторов ключей типа <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />. Необходимо переопределить эти методы для поддержки других типов идентификатора ключа в производном классе.</para></block>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
    <altmember cref="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
    <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Вызывается конструкторами в производных классах для инициализации класса <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual bool CanCreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CanCreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Предложение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающее создаваемый идентификатор ключа.</typeparam>
        <summary>Возвращает значение, определяющее, может ли маркер безопасности создать указанный идентификатор ключа.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="T" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A>, чтобы определить, может ли маркер безопасности создать определенный идентификатор ключа. Чтобы создать идентификатор ключа, вызовите метод <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A>.  
  
 Реализация по умолчанию поддерживает конструкции идентификатора ключа типа <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T CreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual T CreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Предложение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающее создаваемый идентификатор ключа.</typeparam>
        <summary>Создает предложение заданного идентификатора ключа.</summary>
        <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, являющийся предложением идентификатора ключа для маркера безопасности.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A>, чтобы определить, может ли маркер безопасности создать определенный идентификатор ключа. Чтобы создать идентификатор ключа, вызовите метод <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A>.  
  
 Реализация по умолчанию поддерживает конструкции идентификатора ключа типа <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>. Если предложение идентификатора ключа типа <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> не может быть создан, <xref:System.NotSupportedException> возникает исключение.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает уникальный идентификатор маркера безопасности.</summary>
        <value>Уникальный идентификатор маркера безопасности.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, если маркер безопасности сериализуется в формат XML, для атрибута `Id` маркера безопасности задается значение свойства <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A>.  
  
   
  
## Examples  
 Примеры кода, которые используются в <xref:System.IdentityModel.Tokens.SecurityToken> разделы берутся из `Custom Token` образца. В этом примере пользовательские классы, позволяющие обработки токены Simple Web (SWT). Он включает в себя реализацию `SimpleWebToken` класс и `SimpleWebTokenHandler` класса, а также другие классы, поддерживающие маркеры SWT. В этом примере и другие примеры, доступные для WIF и о том, как загрузить их, узнать о [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md). В следующем коде показано переопределение метода <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> свойство.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Необходимо переопределить <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> свойство.</para></block>
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, сравниваемый с данным экземпляром.</param>
        <param name="skiClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, сравниваемый с данным экземпляром.</param>
        <summary>Возвращает значение, указывающее, можно ли идентификатор ключа данного экземпляра разрешить в определенный идентификатор ключа.</summary>
        <returns>Значение <see langword="true" />, если <paramref name="keyIdentifierClause" /> является объектом <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> и имеет такой же уникальный идентификатор, что и свойство <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация по умолчанию поддерживает конструкции идентификатора ключа типа <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="ResolveKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, для которого получается ключ.</param>
        <param name="skiClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, для которого получается ключ.</param>
        <summary>Возвращает ключ для указанной конструкции идентификатора ключа.</summary>
        <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, который представляет ключ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> вызывает метод <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>, чтобы определить, совпадает ли указанная конструкция идентификатора ключа с данным экземпляром.  
  
 Реализация по умолчанию возвращает первый элемент <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> коллекции, если коллекция не пуста и <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> возвращает `true`; в противном случае он возвращает `null`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Если при наследовании класса <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> и реализации метода <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> не удается разрешить <paramref name="keyIdentifierClause" />, необходимо возвратить <see langword="null" />. Метод <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> не должен выдавать исключения.</para></block>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ключи шифрования, связанные с маркером безопасности.</summary>
        <value>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, содержащая набор ключей, связанных с маркером безопасности.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> свойство, чтобы задать ключи шифрования для данного маркера безопасности для защиты маркеров или сообщение SOAP. Ключи можно, помимо прочего, для создания цифровой подписи и шифрования токенов или сообщений SOAP.  
  
   
  
## Examples  
 Примеры кода, которые используются в <xref:System.IdentityModel.Tokens.SecurityToken> разделы берутся из `Custom Token` образца. В этом примере пользовательские классы, позволяющие обработки токены Simple Web (SWT). Он включает в себя реализацию `SimpleWebToken` класс и `SimpleWebTokenHandler` класса, а также другие классы, поддерживающие маркеры SWT. В этом примере и другие примеры, доступные для WIF и о том, как загрузить их, узнать о [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md). В следующем коде показано переопределение метода <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> свойство.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Необходимо переопределить <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" /> свойство.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает первый момент времени, когда данный маркер безопасности становиться действительным.</summary>
        <value>Значение <see cref="T:System.DateTime" />, соответствующее моменту времени, когда данный маркер безопасности становится действительным.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойства <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> и <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> для определения периода времени, в течение которого действителен маркер <xref:System.IdentityModel.Tokens.SecurityToken>. Свойства <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> и <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> представляют соответственно первый и последний моменты времени, когда данный маркер безопасности является действительным.  
  
   
  
## Examples  
 Примеры кода, которые используются в <xref:System.IdentityModel.Tokens.SecurityToken> разделы берутся из `Custom Token` образца. В этом примере пользовательские классы, позволяющие обработки токены Simple Web (SWT). Он включает в себя реализацию `SimpleWebToken` класс и `SimpleWebTokenHandler` класса, а также другие классы, поддерживающие маркеры SWT. В этом примере и другие примеры, доступные для WIF и о том, как загрузить их, узнать о [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md). В следующем коде показано переопределение метода <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> свойство.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#6)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Необходимо переопределить <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> свойство.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает момент времени, когда данный маркер безопасности становится недействительным.</summary>
        <value>Значение <see cref="T:System.DateTime" />, соответствующее последнему моменту времени, когда данный маркер безопасности является действительным.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойства <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> и <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> для определения периода времени, в течение которого действителен маркер <xref:System.IdentityModel.Tokens.SecurityToken>. Свойства <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> и <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> представляют соответственно первый и последний моменты времени, когда данный маркер безопасности является действительным.  
  
   
  
## Examples  
 Примеры кода, которые используются в <xref:System.IdentityModel.Tokens.SecurityToken> разделы берутся из `Custom Token` образца. В этом примере пользовательские классы, позволяющие обработки токены Simple Web (SWT). Он включает в себя реализацию `SimpleWebToken` класс и `SimpleWebTokenHandler` класса, а также другие классы, поддерживающие маркеры SWT. В этом примере и другие примеры, доступные для WIF и о том, как загрузить их, узнать о [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md). В следующем коде показано переопределение метода <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> свойство.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#7)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Необходимо переопределить <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> свойство.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>