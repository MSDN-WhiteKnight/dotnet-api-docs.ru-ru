<Type Name="JavaScriptSerializer" FullName="System.Web.Script.Serialization.JavaScriptSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9c600895e998de3cd0606108f6b2c1c3b3b6beb3" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57927363" /></Metadata><TypeSignature Language="C#" Value="public class JavaScriptSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JavaScriptSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JavaScriptSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptSerializer" />
  <TypeSignature Language="F#" Value="type JavaScriptSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see href="https://www.newtonsoft.com/json">Json.NET</see> следует использовать для сериализации и десериализации. Предоставляет возможности сериализации и десериализации для приложений с поддержкой AJAX.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer> Класс используется внутренне слой асинхронного взаимодействия для сериализации и десериализации данных, который передается между браузером и веб-сервера. Не удается получить доступ к этот экземпляр сериализатора. Тем не менее этот класс предоставляет общедоступные API-Интерфейсы. Таким образом можно использовать класс, если вы хотите работать с использованием нотации объектов JavaScript (JSON) в управляемом коде.  
  
 Чтобы сериализовать объект, используйте <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> метод. Для десериализации строки JSON, используйте <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> или <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> методы. Для сериализации и десериализации типов, которые изначально не поддерживаются службой <xref:System.Web.Script.Serialization.JavaScriptSerializer>, реализовать пользовательские преобразователи с помощью <xref:System.Web.Script.Serialization.JavaScriptConverter> класса. Затем зарегистрируйте преобразователи с помощью <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> метод.  
  
## <a name="mapping-between-managed-types-and-json"></a>Сопоставление управляемых типов и JSON  
 Следующая таблица показывает сопоставление управляемых типов и JSON для процесса сериализации. Эти управляемые типы встроена в <xref:System.Web.Script.Serialization.JavaScriptSerializer>. При выполнении десериализации строки JSON в управляемый тип, применяется такое же сопоставление. Однако десериализация может быть асимметричной; не все сериализуемые типы управляемых может быть десериализован из JSON.  
  
> [!NOTE]
>  Многомерный массив сериализуется как одномерный массив, и его следует использовать как плоский.  
  
|Управляемый тип|Эквивалент в формате JSON|  
|------------------|---------------------|  
|<xref:System.String> (Кодировка UTF-8 только).|String|  
|<xref:System.Char>|String|  
|Одиночное null-значение (например, \0)|Null|  
|<xref:System.Boolean>|Логическое. Представленные в формате JSON как `true` или `false`|  
|`null` (`null` ссылки на объекты и <xref:System.Nullable> типы значений).|Строковое значение null|  
|<xref:System.DBNull>|Строковое значение null|  
|Типы-примитивы числовое (или совместимый числовые): <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Double>, и <xref:System.Single>. Используется независимое от языка и региональных параметров строковое представление.|Число|  
|<xref:System.DateTime>|Объект Date, представленные в формате JSON, как "\\/Date (число тактов)\\/». Количество тактов — положительное или отрицательное значение long, указывающее количество тактов (в миллисекундах), истекших с полуночи 01 января 1970 года в формате UTC.<br /><br /> Максимальный поддерживаемый даты, значение — <xref:System.DateTime.MaxValue> (12/31/9999 11:59:59 PM), а значение минимальная поддерживаемая Дата — <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 AM).|  
|Перечисления типа integer|Целое число, эквивалентное значение перечисления|  
|Типы, реализующие <xref:System.Collections.IEnumerable> или <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> , также не являются реализациями <xref:System.Collections.IDictionary> или <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>. Сюда входят типы, такие как <xref:System.Array>, <xref:System.Collections.ArrayList>, и <xref:System.Collections.Generic.List%601>.|Массив, который использует синтаксис массива JSON|  
|Типы, реализующие <xref:System.Collections.IDictionary> или <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>. Сюда входят типы, такие как <xref:System.Collections.Generic.Dictionary%602> и <xref:System.Collections.Hashtable>.|Объект JavaScript, который использует синтаксис словаря JSON|  
|Пользовательские конкретных (неабстрактных) типов, имеющих открытые свойства экземпляра имеют методами доступа get или открытые экземпляры полей.<br /><br /> Обратите внимание, что открытые свойства только для записи, открытого свойства или атрибуты открытое поле, отмеченный <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>, и открытый индексированных свойств в этих типах учитываются.|Объект JavaScript, который использует синтаксис словаря JSON. Особое свойство метаданных с именем «__type» включено для обеспечения правильности десериализации. Убедитесь, что открытые свойства экземпляра имеют get и set для обеспечения правильности десериализации.|  
|<xref:System.Guid>|Строковое представление идентификатора GUID|  
|<xref:System.Uri>|Строковое представление возвращаемое значение <xref:System.Uri.GetComponents%2A>|  
  
   
  
## Examples  
 Первый пример иллюстрирует это того, как сериализовывать и десериализовывать объекты данных. Требуется класс с именем пользователя, которая представлена ниже.  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 В следующем примере показано более сложными и полный проект, использующий <xref:System.Web.Script.Serialization.JavaScriptSerializer> класс сохранять и восстанавливать состояние объекта с помощью сериализации JSON. Этот код использует пользовательский преобразователь, который предоставляется в целях <xref:System.Web.Script.Serialization.JavaScriptConverter> класса.  
  
 [!code-aspx-csharp[System.Web.Script.Serialization#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#4)]
 [!code-aspx-vb[System.Web.Script.Serialization#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#4)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/4e876911-6276-4de8-b22a-d326a2033582">Использование веб-служб в AJAX для ASP.NET</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fc06c224-f01a-45be-94af-bd71afbc07b0">Вызов веб-служб из клиентского сценария в ASP.NET AJAX</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />, для которого не предусмотрен распознаватель типов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Экземпляр <xref:System.Web.Script.Serialization.JavaScriptSerializer> класса без распознавателю типов не будут включены свойства метаданных типа (с именем «__type») в сериализованной строки JSON. Свойство метаданных типа используется <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> и <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> метод для определения соответствующего управляемого типа в который будет преобразован в строку JSON. Сведения о типов, см. в разделе <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> класса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Script.Serialization.JavaScriptTypeResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As JavaScriptTypeResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer(System::Web::Script::Serialization::JavaScriptTypeResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Serialization.JavaScriptSerializer : System.Web.Script.Serialization.JavaScriptTypeResolver -&gt; System.Web.Script.Serialization.JavaScriptSerializer" Usage="new System.Web.Script.Serialization.JavaScriptSerializer resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Web.Script.Serialization.JavaScriptTypeResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">Объект пользовательского распознавателя типов.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />, для которого предусмотрен пользовательский распознаватель типов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сериализуется объект, <xref:System.Web.Script.Serialization.JavaScriptSerializer> класс использует `resolver` параметр, чтобы определить соответствующее значение для включения в сериализованной строки JSON для свойства метаданных тип («__type»). Аналогичным образом, если <xref:System.Web.Script.Serialization.JavaScriptSerializer> класс десериализации строки JSON, он разрешает значения свойства метаданных типа в соответствующий управляемый тип, используя экземпляр распознавателя.  
  
 Можно задать `resolver` параметр `null`, что эквивалентно вызову <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A> конструктор.  
  
 Экземпляр <xref:System.Web.Script.Serialization.JavaScriptSerializer> , используемый на асинхронной передачи данных для вызова веб-служб из клиентского сценария использует специальный тип сопоставителя. Этот распознаватель типов ограничивает типы, которые могут быть десериализованы, определенных в сигнатуре метода веб службы, или те, которые имеют <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> применения. Этот распознаватель встроенный тип нельзя изменить программным способом.  
  
> [!IMPORTANT]
>  Используя экземпляр этого объекта, инициализируется настраиваемый распознаватель типов может представлять угрозу безопасности. Используйте этот объект только с надежными данными. Дополнительные сведения: [Data Validation](https://www.owasp.org/index.php/Data_Validation) (Проверка данных).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
        <altmember cref="T:System.Web.Script.Serialization.SimpleTypeResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/4e876911-6276-4de8-b22a-d326a2033582">Использование веб-служб в AJAX для ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType">
      <MemberSignature Language="C#" Value="public object ConvertToType (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertToType(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertToType(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj * Type -&gt; obj" Usage="javaScriptSerializer.ConvertToType (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="obj">Преобразуемый объект.</param>
        <param name="targetType">Тип, в который требуется преобразовать объект.</param>
        <summary>Преобразует указанный объект в заданный тип.</summary>
        <returns>Сериализованная строка формата JSON.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляра сериализации типа для которого регистрируется пользовательский преобразователь, вызовы сериализатор <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> метод, чтобы получить словарь пар "имя значение", которые будут преобразованы в строку в формате JSON.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> Метод также может выдавать исключения, если граф объекта является слишком сложным или зарегистрированные экземпляры <xref:System.Web.Script.Serialization.JavaScriptConverter> вызвали преобразователь рекурсии.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Результирующая строка формата JSON превышает значение свойства <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
-или- 
 Параметр <paramref name="obj" /> содержит циклическую ссылку. Циклическая ссылка возникает, если дочерний объект ссылается на родительский объект, а родительский объект ссылается на дочерний.</exception>
        <exception cref="T:System.ArgumentException">Превышено ограничение на рекурсию, заданное свойством <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ConvertToType&lt;T&gt; (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ConvertToType&lt;T&gt;(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType(Of T) (obj As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ConvertToType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj -&gt; 'T" Usage="javaScriptSerializer.ConvertToType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">Тип, которому будет приведен параметр <paramref name="obj" />.</typeparam>
        <param name="obj">Преобразуемый объект.</param>
        <summary>Приводит заданный объект к указанному типу.</summary>
        <returns>Объект, приведенный к целевому типу.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> Метод пытается преобразовать экземпляр объекта, представленного `obj` для экземпляра типа `T`. Во время преобразования нет никакой гарантии, что равенство ссылок объекта сохраняется. Поэтому, нельзя предполагать, что `obj` и `T` ссылаться на тот же объект.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> предназначен для использования при реализации класса, производного от <xref:System.Web.Script.Serialization.JavaScriptConverter>. Код преобразователя должен принимать значение в словарь, который передает ему сериализатор и затем преобразовать это значение в экземпляр типа `T`. Вместо повторной реализации кода настраиваемое преобразование для выполнения этой задачи, можно вызвать <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> метод из кода преобразователь.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> метод, чтобы получить <xref:System.Web.UI.WebControls.ListItem> объекта из значения в словаре, который передается преобразователю. Данный пример кода является частью большего примера для <xref:System.Web.Script.Serialization.JavaScriptSerializer> класса.  
  
 [!code-csharp[System.Web.Script.Serialization#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#5)]
 [!code-vb[System.Web.Script.Serialization#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Параметр <paramref name="obj" /> (или вложенный член параметра <paramref name="obj" />) содержит свойство __type, которым обозначается пользовательский тип, однако связанному с сериализатором распознавателю типов не удалось найти соответствующий управляемый тип.  
  
-или- 
 Параметр <paramref name="obj" /> (или вложенный член параметра <paramref name="obj" />) содержит свойство __type, которым обозначается пользовательский тип, однако результат десериализации соответствующей строки формата JSON не может быть назначен ожидаемому целевому типу.  
  
-или- 
 Параметр <paramref name="obj" /> (или вложенный член параметра <paramref name="obj" />) содержит свойство __type, которым обозначается объект <see cref="T:System.Object" /> или тип, не поддерживающий создание экземпляров (например, абстрактный тип или интерфейс).  
  
-или- 
Предпринята попытка приведения параметра <paramref name="obj" /> к управляемому типу, относящемуся к классу массивов, использование которого как целевого типа десериализации не поддерживается.  
  
-или- 
Не удается привести параметр <paramref name="obj" /> к типу <paramref name="T" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="obj" /> является типом словаря и при этом обнаружено значение ключа не строчного типа.  
  
-или- 
 Параметр <paramref name="obj" /> содержит определения членов, которые недоступны для типа <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string input, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string input, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (input As String, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ input, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string * Type -&gt; obj" Usage="javaScriptSerializer.Deserialize (input, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input">Десериализуемая строка формата JSON.</param>
        <param name="targetType">Тип результирующего объекта.</param>
        <summary>Преобразует строку формата JSON в объект заданного типа.</summary>
        <returns>Десериализованный объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод десериализации не пытается привести корне графа объектов определенного типа, так что <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> делает метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Длина параметра <paramref name="input" /> превышает значение свойства <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
-или- 
Превышено ограничение на рекурсию, заданное свойством <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />.  
  
-или- 
 Параметр <paramref name="input" /> содержит неизвестную последовательность символов.  
  
-или- 
 Параметр <paramref name="input" /> является типом словаря и при этом обнаружено значение ключа не строчного типа.  
  
-или- 
 Параметр <paramref name="input" /> содержит определения членов, которые недоступны для целевого типа.</exception>
        <exception cref="T:System.InvalidOperationException">Параметр <paramref name="input" /> содержит свойство "__type", которым обозначается пользовательский тип, однако распознавателю типов, связанному в данный момент с сериализатором, не удалось найти соответствующий управляемый тип.  
  
-или- 
 Параметр <paramref name="input" /> содержит свойство "__type", которым обозначается пользовательский тип, однако результат десериализации соответствующей строки формата JSON не удалось присвоить ожидаемому целевому типу.  
  
-или- 
 Параметр <paramref name="input" /> содержит свойство "__type", которым обозначается объект <see cref="T:System.Object" /> или тип, не поддерживающий создание экземпляров (например, абстрактный тип или интерфейс).  
  
-или- 
Предпринята попытка привести массив JSON к управляемому типу, относящемуся к классу массивов, использование которого в качестве целевого типа десериализации JSON не поддерживается.  
  
-или- 
Не удается привести параметр <paramref name="input" /> к целевому типу.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Deserialize&lt;T&gt;(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (input As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Deserialize(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; 'T" Usage="javaScriptSerializer.Deserialize input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Тип результирующего объекта.</typeparam>
        <param name="input">Строка формата JSON, подлежащая десериализации.</param>
        <summary>Преобразует указанную строку формата JSON в объект типа <paramref name="T" />.</summary>
        <returns>Десериализованный объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> Метод равнозначно использованию первого <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> метод, чтобы получить граф объектов и затем пытается привести результат к типу `T`.  
  
 Во время десериализации связан текущий распознаватель типов сериализатора, который определяет управляемый тип, используемый при преобразовании элементов, вложенных в массивы и типы словаря. Таким образом, в процессе десериализации итерацию всех вложенных элементам `input`. Дополнительные сведения о типов, см. в разделе <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> класса.  
  
   
  
## Examples  
Следующий пример иллюстрирует это того, как сериализовывать и десериализовывать объекты данных.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

Требуется класс с именем `Person`, как показано в следующем примере. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Длина параметра <paramref name="input" /> превышает значение свойства <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
-или- 
Превышено ограничение на рекурсию, заданное свойством <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />.  
  
-или- 
 Параметр <paramref name="input" /> содержит неизвестную последовательность символов.  
  
-или- 
 Параметр <paramref name="input" /> является типом словаря и при этом обнаружено значение ключа не строчного типа.  
  
-или- 
 Параметр <paramref name="input" /> содержит определения членов, которые недоступны для типа <paramref name="T" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> — <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Параметр <paramref name="input" /> содержит свойство __type, которым обозначается пользовательский тип, однако связанному с сериализатором распознавателю типов не удалось найти соответствующий управляемый тип.  
  
-или- 
 Параметр <paramref name="input" /> содержит свойство "__type", которым обозначается пользовательский тип, однако результат десериализации соответствующей строки формата JSON не удалось присвоить ожидаемому целевому типу.  
  
-или- 
 Параметр <paramref name="input" /> содержит свойство __type, которым обозначается объект <see cref="T:System.Object" /> или тип, не поддерживающий создание экземпляров (например, абстрактные типы или интерфейс).  
  
-или- 
Предпринята попытка привести массив JSON к управляемому типу, относящемуся к классу массивов, использование которого в качестве целевого типа десериализации JSON не поддерживается.  
  
-или- 
Не удается привести параметр <paramref name="input" /> к типу <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeObject">
      <MemberSignature Language="C#" Value="public object DeserializeObject (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeObject(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeObject (input As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeObject(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.DeserializeObject : string -&gt; obj" Usage="javaScriptSerializer.DeserializeObject input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Строка формата JSON, подлежащая десериализации.</param>
        <summary>Преобразует указанную строку формата JSON в граф объекта.</summary>
        <returns>Десериализованный объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод десериализации не пытается привести корне графа объектов определенного типа, как и в <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Длина параметра <paramref name="input" /> превышает значение свойства <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
-или- 
Превышено ограничение на рекурсию, заданное свойством <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />.  
  
-или- 
 Параметр <paramref name="input" /> содержит неизвестную последовательность символов.  
  
-или- 
 Параметр <paramref name="input" /> является типом словаря и при этом обнаружено значение ключа не строчного типа.  
  
-или- 
 Параметр <paramref name="input" /> содержит определения членов, которые недоступны для целевого типа.</exception>
        <exception cref="T:System.InvalidOperationException">Параметр <paramref name="input" /> содержит свойство "__type", которым обозначается пользовательский тип, однако распознавателю типов, связанному в данный момент с сериализатором, не удалось найти соответствующий управляемый тип.  
  
-или- 
 Параметр <paramref name="input" /> содержит свойство "__type", которым обозначается пользовательский тип, однако результат десериализации соответствующей строки формата JSON не удалось присвоить ожидаемому целевому типу.  
  
-или- 
 Параметр <paramref name="input" /> содержит свойство "__type", которым обозначается объект <see cref="T:System.Object" /> или тип, не поддерживающий создание экземпляров (например, абстрактный тип или интерфейс).  
  
-или- 
Предпринята попытка привести массив JSON к управляемому типу, относящемуся к классу массивов, использование которого в качестве целевого типа десериализации JSON не поддерживается.  
  
-или- 
Не удается привести параметр <paramref name="input" /> к целевому типу.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxJsonLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxJsonLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxJsonLength : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает максимальную длину строки формата JSON, которую может принять класс <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />.</summary>
        <value>Максимальная длина строки формата JSON. По умолчанию используется 2097152 символам, что эквивалентно 4 МБ данных строки Юникода.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A> свойство применяется, только когда вы явно создаете экземпляр <xref:System.Web.Script.Serialization.JavaScriptSerializer> класса. Используйте `jsonSerialization` элемент файла конфигурации, чтобы задать максимальную длину внутреннего экземпляра сериализатора, используемый слой асинхронного взаимодействия. Дополнительные сведения об элементах конфигурации для сериализации см. в разделе [как: Настройка служб ASP.NET в Microsoft Ajax](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Задаваемое значение свойства меньше единицы.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RecursionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecursionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RecursionLimit : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает ограничение на количество обрабатываемых уровней объекта.</summary>
        <value>Количество уровней объекта. Значение по умолчанию — 100.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> Свойство ссылается на число уровней в иерархии объектов, <xref:System.Web.Script.Serialization.JavaScriptSerializer> будет обрабатывать в следующих случаях:  
  
-   Когда <xref:System.Web.Script.Serialization.JavaScriptSerializer> класс десериализации строки JSON.  
  
-   Когда <xref:System.Web.Script.Serialization.JavaScriptSerializer> класс проход графа объекта во время сериализации.  
  
 Значение <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> применяется, только когда вы явно создаете экземпляр <xref:System.Web.Script.Serialization.JavaScriptSerializer> класса. Используйте `jsonSerialization` элемент файла конфигурации, чтобы задать количество обрабатываемых для внутреннего экземпляра сериализатора, используемый слой асинхронного взаимодействия уровней объекта. Дополнительные сведения об элементах конфигурации для сериализации см. в разделе [как: Настройка служб ASP.NET в Microsoft Ajax](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Задаваемое значение свойства меньше единицы.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      </Docs>
    </Member>
    <Member MemberName="RegisterConverters">
      <MemberSignature Language="C#" Value="public void RegisterConverters (System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; converters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterConverters(class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Script.Serialization.JavaScriptConverter&gt; converters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConverters (converters As IEnumerable(Of JavaScriptConverter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterConverters(System::Collections::Generic::IEnumerable&lt;System::Web::Script::Serialization::JavaScriptConverter ^&gt; ^ converters);" />
      <MemberSignature Language="F#" Value="member this.RegisterConverters : seq&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; -&gt; unit" Usage="javaScriptSerializer.RegisterConverters converters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converters" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="converters">Массив, в котором содержатся пользовательские преобразователи для регистрации.</param>
        <summary>Регистрирует пользовательский преобразователь в экземпляре <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы можете зарегистрировать один или несколько пользовательские преобразователи с <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляра с помощью <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> метод. При регистрации пользовательские преобразователи <xref:System.Web.Script.Serialization.JavaScriptSerializer> использует преобразователи для сериализации управляемых типов и для десериализации строки JSON для управляемых типов.  
  
 Можно зарегистрировать несколько конвертеров с тем же <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляр и эти преобразователи можно указать поддержку для одного типа. В результате последнего преобразователь, который зарегистрирован для определенного типа является тот, который будет использоваться <xref:System.Web.Script.Serialization.JavaScriptSerializer> для сериализации типа.  
  
 Дополнительные сведения о пользовательские преобразователи, см. в разделе <xref:System.Web.Script.Serialization.JavaScriptConverter> класса.  
  
   
  
## Examples  
 В следующем примере показано, как зарегистрировать пользовательский преобразователь <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляра. Данный пример кода является частью большего примера для <xref:System.Web.Script.Serialization.JavaScriptSerializer> класса.  
  
 [!code-csharp[System.Web.Script.Serialization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#1)]
 [!code-vb[System.Web.Script.Serialization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="converters" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует объект в строку формата JSON.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (obj As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="javaScriptSerializer.Serialize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект для сериализации.</param>
        <summary>Преобразует объект в строку формата JSON.</summary>
        <returns>Сериализованная строка формата JSON.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляра сериализации типа для которого регистрируется пользовательский преобразователь, вызовы сериализатор <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> метод, чтобы получить словарь пар "имя значение", которые будут преобразованы в строку JSON.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> Метод также может выдавать исключения, если граф объекта является слишком сложным или зарегистрированные экземпляры <xref:System.Web.Script.Serialization.JavaScriptConverter> вызвали преобразователь рекурсии.  
  
   
  
## Examples  
Следующий пример иллюстрирует это того, как сериализовывать и десериализовывать объекты данных.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

Требуется класс с именем `Person`, как показано в следующем примере. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Результирующая строка формата JSON превышает значение свойства <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
-или- 
 Параметр <paramref name="obj" /> содержит циклическую ссылку. Циклическая ссылка возникает, если дочерний объект ссылается на родительский объект, а родительский объект ссылается на дочерний.</exception>
        <exception cref="T:System.ArgumentException">Превышено ограничение на рекурсию, заданное свойством <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (object obj, System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(object obj, class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (obj As Object, output As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Object ^ obj, System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj * System.Text.StringBuilder -&gt; unit" Usage="javaScriptSerializer.Serialize (obj, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="obj">Объект для сериализации.</param>
        <param name="output">Объект <see cref="T:System.Text.StringBuilder" />, используемый для записи строки формата JSON.</param>
        <summary>Сериализует объект и записывает результирующую строку формата JSON в указанный объект <see cref="T:System.Text.StringBuilder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляра сериализации типа для которого регистрируется пользовательский преобразователь, вызовы сериализатор <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> метод, чтобы получить словарь пар "имя значение", которые будут преобразованы в строку JSON.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> Метод также может выдавать исключения, если граф объекта является слишком сложным или зарегистрированные экземпляры <xref:System.Web.Script.Serialization.JavaScriptConverter> вызвали преобразователь рекурсии.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Результирующая строка формата JSON превышает значение свойства <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
-или- 
 Параметр <paramref name="obj" /> содержит циклическую ссылку. Циклическая ссылка возникает, если дочерний объект ссылается на родительский объект, а родительский объект ссылается на дочерний.</exception>
        <exception cref="T:System.ArgumentException">Превышено ограничение на рекурсию, заданное свойством <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="output" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>