<Type Name="CacheDependency" FullName="System.Web.Caching.CacheDependency">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9974303165fcb48008a7ca6cb76926c385f74985" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57911178" /></Metadata><TypeSignature Language="C#" Value="public class CacheDependency : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CacheDependency extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.CacheDependency" />
  <TypeSignature Language="VB.NET" Value="Public Class CacheDependency&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheDependency : IDisposable" />
  <TypeSignature Language="F#" Value="type CacheDependency = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Устанавливает отношения зависимости между элементом, который хранится в объекте приложения ASP.NET <see cref="T:System.Web.Caching.Cache" />, и файлом, ключом кэша, массивом или другим объектом <see cref="T:System.Web.Caching.CacheDependency" />. Класс <see cref="T:System.Web.Caching.CacheDependency" /> отслеживает отношения зависимости на предмет изменений, автоматически удаляя кэшированный элемент.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При добавлении элемента в кэш, зависящий от другого объекта, например файла или массив файлов, зависимый элемент автоматически удаляется из кэша при изменении объекта. Предположим, например, можно создать <xref:System.Data.DataSet> объекта на основе данных в XML-файл. Вы можете добавить <xref:System.Data.DataSet> в кэш с <xref:System.Web.Caching.CacheDependency> объект, который делает <xref:System.Data.DataSet> зависит от XML-файле. При изменении XML-файле <xref:System.Data.DataSet> удаляется из кэша.  
  
 Можно добавить элементы с зависимостями кэша приложения с помощью <xref:System.Web.Caching.Cache.Add%2A> и <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> методы. Нельзя использовать <xref:System.Web.Caching.Cache.Item%2A> свойство для добавления элементов в кэш с зависимостями.  
  
 Чтобы установить зависимости, создайте экземпляр <xref:System.Web.Caching.CacheDependency> класса, указав файлы, ключи или каталоги, от которых зависит элемент, а затем передать зависимость от <xref:System.Web.Caching.Cache.Add%2A> или <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> метод. <xref:System.Web.Caching.CacheDependency> Экземпляр может представлять один файл или каталог, массив файлов или каталогов или массив файлов или каталогов, а также массив ключей кэша (представляющих другие элементы, хранящиеся в <xref:System.Web.Caching.Cache> объекта).  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Web.Caching.CacheDependency.HasChanged%2A> свойства, чтобы определить ли <xref:System.Web.Caching.CacheDependency> изменены с момента предыдущего запроса для элемента в <xref:System.Web.Caching.Cache>. `dt` Значение, переданное в `start` параметр имеет значение <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Caching.Cache" />
    <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
    <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CacheDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CacheDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если требуется собственный производный класс от <xref:System.Web.Caching.CacheDependency>, реализация этой версии <xref:System.Web.Caching.CacheDependency.%23ctor%2A> конструктор.  
  
   
  
## Examples  
 В следующем примере кода — это класс, реализующий эту версию <xref:System.Web.Caching.CacheDependency> конструктор в качестве все классы, производные от <xref:System.Web.Caching.CacheDependency> потребуется.  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Путь к файлу или каталогу, от которого зависит кэшированный объект. При изменении ресурса кэшированный объект становится устаревшим и удаляется из кэша.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, отслеживающий изменения файла или каталога.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если каталог или файл, указанный в `filename` параметр не найден в файловой системе, он будет считаться отсутствующими. Если отсутствует каталога или файла при добавлении объекта с зависимостью для <xref:System.Web.Caching.Cache>, кэшированный объект будет удален из <xref:System.Web.Caching.Cache> при создании каталога или файла.  
  
 Например, предположим, что добавляется объект <xref:System.Web.Caching.Cache> с зависимостью от следующего пути к файлу: c:\stocks\xyz.dat. Если этот файл не найден при <xref:System.Web.Caching.CacheDependency> объект создается, но впоследствии будет создан, кэшированный объект удаляется при создании файла xyz.dat.  
  
   
  
## Examples  
 В следующем примере кода создается экземпляр <xref:System.Web.Caching.CacheDependency> класс с зависимостью от XML-файла. <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> Метод добавляет элемент к <xref:System.Web.Caching.Cache> , зависит от этого файла.  
  
 [!code-csharp[Classic CacheDependency.CacheDependency Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CacheDependency.CacheDependency Example/CS/source.cs#1)]
 [!code-vb[Classic CacheDependency.CacheDependency Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CacheDependency.CacheDependency Example/VB/source.vb#1)]  
  
 Также можно использовать следующий способ для добавления элемента к <xref:System.Web.Caching.Cache> с зависимостью от файла.  
  
 [!code-csharp[Single File Dependency Cache entry#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Single File Dependency Cache entry/CS/DependencySingleFilecs.aspx#1)]
 [!code-vb[Single File Dependency Cache entry#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Single File Dependency Cache entry/VB/DependencySingleFilevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency filenames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames">Массив путей (к файлам или каталогам), от которого зависит кэшированный объект. При изменении любого из ресурсов кэшированный объект становится устаревшим и удаляется из кэша.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, отслеживающий изменения массива путей (к файлам или каталогам).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если любой из файлов или каталогов в массиве изменяется, либо удален из массива, кэшированный объект становится устаревшим и оно удаляется из приложения <xref:System.Web.Caching.Cache> объекта.  
  
 Кроме того Если какой-либо из каталогов или файлов, указанных в `filenames` параметр не найден в файловой системе, он будет считаться отсутствующим. Если отсутствует каталога или файла при добавлении объекта с зависимостью для <xref:System.Web.Caching.Cache>, кэшированный объект будет удален из <xref:System.Web.Caching.Cache> при создании этого каталога или файла.  
  
 Например, предположим, что добавляется объект <xref:System.Web.Caching.Cache> с зависимостью от следующего пути к файлу: c:\stocks\xyz.dat. Если этот файл не найден при <xref:System.Web.Caching.CacheDependency> объект создается, но впоследствии будет создан, кэшированный объект удаляется при создании файла xyz.dat.  
  
> [!NOTE]
>  При создании массива, содержащего зависимости файлов, необходимо определить количество файлов, что элемент добавляется к <xref:System.Web.Caching.Cache> зависит.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> метод, чтобы добавить элемент к <xref:System.Web.Caching.Cache> с зависимостями от массива файлов. Вы также можете элемента зависит от массив каталогов.  
  
 [!code-csharp[Multiple file based dependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Multiple file based dependency/CS/DependencyMultiFilecs.aspx#1)]
 [!code-vb[Multiple file based dependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Multiple file based dependency/VB/DependencyMultiFilevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string filename, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(System::String ^ filename, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filename, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filename">Путь к файлу или каталогу, от которого зависит кэшированный объект. При изменении ресурса кэшированный объект становится устаревшим и удаляется из кэша.</param>
        <param name="start">Время, по которому проверяется дата последнего изменения каталога или файла.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, отслеживающий изменения файла или каталога.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если каталог или файл, указанный в `filename` параметр не найден в файловой системе, он будет считаться отсутствующими. Если отсутствует каталога или файла при добавлении объекта с зависимостью для <xref:System.Web.Caching.Cache>, кэшированный объект будет удален из <xref:System.Web.Caching.Cache> при создании каталога или файла.  
  
 Например, предположим, что добавляется объект <xref:System.Web.Caching.Cache> с зависимостью от следующего пути к файлу: c:\stocks\xyz.dat. Если этот файл не найден при <xref:System.Web.Caching.CacheDependency> объект создается, но впоследствии будет создан, кэшированный объект удаляется при создании файла xyz.dat.  
  
> [!NOTE]
>  Отслеживание изменений начинается немедленно и не зависит от непосредственно `start` параметра. Используйте `start` параметр для передачи даты и времени в прошлом, для которой нужно проверить состояние последнего изменения даты каталога или переданный файл `filename` параметра. Если дата последнего изменения дата позднее даты и времени переданной `start` параметра, кэшируемый элемент удаляется из <xref:System.Web.Caching.Cache>.  
  
   
  
## Examples  
 В следующем примере кода использует этот конструктор для создания экземпляра <xref:System.Web.Caching.CacheDependency> объекта, а затем вставляет элемент в <xref:System.Web.Caching.Cache> с этой зависимостью. `dt` Значение, переданное в `start` параметр имеет значение <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">Массив путей (к файлам или каталогам), от которого зависит кэшированный объект. При изменении любого из ресурсов кэшированный объект становится устаревшим и удаляется из кэша.</param>
        <param name="start">Время, по которому проверяется дата последнего изменения объектов массива.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, отслеживающий изменения массива путей (к файлам или каталогам) и определяющий время начала отслеживания изменений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если какие-либо из каталогов или файлов, указанных в `filenames` параметр не найден в файловой системе, он будет считаться отсутствующим. Если отсутствует каталога или файла при добавлении объекта с зависимостью для <xref:System.Web.Caching.Cache>, кэшированный объект будет удален из <xref:System.Web.Caching.Cache> при создании этого каталога или файла.  
  
 Например, предположим, что добавляется объект <xref:System.Web.Caching.Cache> с зависимостью от следующего пути к файлу: c:\stocks\xyz.dat. Если этот файл не найден при <xref:System.Web.Caching.CacheDependency> объект создается, но впоследствии будет создан, кэшированный объект удаляется при создании файла xyz.dat.  
  
> [!NOTE]
>  Отслеживание изменений начинается немедленно и не зависит от непосредственно `start` параметра. Используйте `start` переданный параметр для передачи даты и времени в прошлом, с которым вы хотите проверить дату последнего изменения массива `filenames` параметра. Если дата последнего изменения даты любого объекта в массиве позже даты, и переданный набор временного `start` параметра, кэшируемый элемент удаляется из <xref:System.Web.Caching.Cache>.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Web.Caching.CacheDependency> объект, который передает два XML-файла и <xref:System.DateTime.Now%2A?displayProperty=nameWithType> значение в объект включается в качестве аргумента параметра в <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> вызов метода.  
  
 [!code-csharp[CacheDependency Constructor4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor4/CS/depmultifilestimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor4/VB/depmultifilestimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames">Массив путей (к файлам или каталогам), от которого зависит кэшированный объект. При изменении любого из ресурсов кэшированный объект становится устаревшим и удаляется из кэша.</param>
        <param name="cachekeys">Массив ключей кэша, изменения которых отслеживает новый объект. При изменении любого из ключей кэша кэшированный объект, связанный с этой зависимостью, становится устаревшим и удаляется из кэша.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, отслеживающий изменения массива путей (к файлам или каталогам), массива ключей кэша, или обоих сразу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Кроме того Если какой-либо из каталогов или файлов, указанных в `filenames` параметр не найден в файловой системе, он будет считаться отсутствующим. Если отсутствует каталога или файла при добавлении объекта с зависимостью для <xref:System.Web.Caching.Cache>, кэшированный объект будет удален из <xref:System.Web.Caching.Cache> при создании этого каталога или файла.  
  
 Например, предположим, что добавляется объект <xref:System.Web.Caching.Cache> с зависимостью от следующего пути к файлу: c:\stocks\xyz.dat. Если этот файл не найден при <xref:System.Web.Caching.CacheDependency> объект создается, но впоследствии будет создан, кэшированный объект удаляется при создании файла xyz.dat.  
  
 Тем не менее `cachekeys` зависимостей работает одинаково. Если по крайней мере одно значение в `cachekeys` параметра не существует во время вставки, то возникает ошибка insert. Обратите внимание, что исключение не создано для этого сценария.  
  
## Examples  
 В следующем фрагменте кода показано, как Вставка элемента в приложении <xref:System.Web.Caching.Cache> с зависимостью от ключа к другому элементу, помещаются в кэш. Поскольку этот метод использует синтаксис массива, необходимо определить число ключей в которой элемент добавлении <xref:System.Web.Caching.Cache> зависит.  
  
 [!code-csharp[Key based dependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Key based dependency/CS/DependencyKeycs.aspx#1)]
 [!code-vb[Key based dependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Key based dependency/VB/DependencyKeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">Массив путей (к файлам или каталогам), от которого зависит кэшированный объект. При изменении любого из ресурсов кэшированный объект становится устаревшим и удаляется из кэша.</param>
        <param name="cachekeys">Массив ключей кэша, изменения которых отслеживает новый объект. При изменении любого из ключей кэша кэшированный объект, связанный с этой зависимостью, становится устаревшим и удаляется из кэша.</param>
        <param name="start">Дата и время, по которым проверяется дата последнего изменения объектов, переданных в <paramref name="filenames" /> и <paramref name="cachekeys" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, отслеживающий изменения массива путей (к файлам или каталогам), массива ключей кэша, или обоих сразу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Кроме того Если какой-либо из каталогов или файлов, указанных в `filenames` параметр не найден в файловой системе, он будет считаться отсутствующим. Если отсутствует каталога или файла при добавлении объекта с зависимостью для <xref:System.Web.Caching.Cache>, кэшированный объект будет удален из <xref:System.Web.Caching.Cache> при создании этого каталога или файла.  
  
 Например, предположим, что добавляется объект <xref:System.Web.Caching.Cache> с зависимостью от следующего пути к файлу: c:\stocks\xyz.dat. Если этот файл не найден при <xref:System.Web.Caching.CacheDependency> объект создается, но впоследствии будет создан, кэшированный объект удаляется при создании файла xyz.dat.  
  
 Тем не менее `cachekeys` зависимостей работает одинаково. Если по крайней мере одно значение в `cachekeys` параметра не существует во время вставки, то возникает ошибка insert. Обратите внимание, что исключение не создано для этого сценария.

> [!NOTE]
>  Отслеживание изменений начинается немедленно и не зависит от непосредственно `start` параметра. Используйте `start` переданный параметр для передачи даты и времени в прошлом, с которым вы хотите проверить дату последнего изменения любого объекта `filenames` или `cachekeys` параметров. Если дата последнего изменения любого из этих объектов дата позднее даты и переданный набор временного `start` параметра, кэшируемый элемент удаляется из <xref:System.Web.Caching.Cache>.  
  
   
  
## Examples  
 В следующем примере кода создается `CreateDependency` метод. При вызове этого метода, он создает <xref:System.DateTime> объекта и <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> свойство используется для добавления элемента в кэш с `key` параметр `key1` и значение `Value 1`. Массив строк, `dependencyKey`, затем создается со значением `key1` также. Это <xref:System.Web.Caching.CacheDependency> создает экземпляр конструктора <xref:System.Web.Caching.CacheDependency> объект, который передает `dependencyKey` и <xref:System.DateTime> объект в качестве аргументов параметра. <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> Метод вызывается после этого с помощью <xref:System.Web.Caching.CacheDependency> объект в качестве параметра. Это приводит к добавлению в кэш с помощью объекта <xref:System.Web.Caching.Cache.Insert%2A> метода `key1` ключ.  
  
 [!code-csharp[CacheDependency Constructor6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor6/CS/depkeytimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor6/VB/depkeytimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, class System.Web.Caching.CacheDependency dependency) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), dependency As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, System::Web::Caching::CacheDependency ^ dependency);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * System.Web.Caching.CacheDependency -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, dependency)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="filenames">Массив путей (к файлам или каталогам), от которого зависит кэшированный объект. При изменении любого из ресурсов кэшированный объект становится устаревшим и удаляется из кэша.</param>
        <param name="cachekeys">Массив ключей кэша, изменения которых отслеживает новый объект. При изменении любого из ключей кэша кэшированный объект, связанный с этой зависимостью, становится устаревшим и удаляется из кэша.</param>
        <param name="dependency">Другой экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, от которого зависит этот экземпляр.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, отслеживающий изменения массива путей (к файлам или каталогам), массива ключей кэша, или обоих сразу. Он также становится зависимым от отдельного экземпляра класса <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Кроме того Если какой-либо из каталогов или файлов, указанных в `filenames` параметр не найден в файловой системе, он будет считаться отсутствующим. Если отсутствует каталога или файла при добавлении объекта с зависимостью для <xref:System.Web.Caching.Cache>, кэшированный объект будет удален из <xref:System.Web.Caching.Cache> при создании этого каталога или файла.  
  
 Например, предположим, что добавляется объект <xref:System.Web.Caching.Cache> с зависимостью от следующего пути к файлу: c:\stocks\xyz.dat. Если этот файл не найден при <xref:System.Web.Caching.CacheDependency> объект создается, но впоследствии будет создан, кэшированный объект удаляется при создании файла xyz.dat.  
  
 Тем не менее `cachekeys` зависимостей работает одинаково. Если по крайней мере одно значение в `cachekeys` параметра не существует во время вставки, то возникает ошибка insert. Обратите внимание, что исключение не создано для этого сценария.
  
## Examples  
 В следующем примере кода создается `CreateDependency` метод. Когда этот метод вызывается, он использует <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> свойство, чтобы добавить элемент в кэш с `key` параметр `key1` и значение `Value 1`. Массив строк, `dependencyKey`, затем создается со значением `key1` также. <xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType> Конструктор используется для создания <xref:System.Web.Caching.CacheDependency> объекта, `dep1`, который передает `dependencyKey` как аргумент параметра. Секунды <xref:System.Web.Caching.CacheDependency> объекта, `dep2`, создается с помощью этого конструктора с `dep1` передается в качестве третьего аргумента параметра. Вторая зависимость является зависимым от первого. <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> Метод вызывается после этого с помощью второй <xref:System.Web.Caching.CacheDependency> объект в качестве параметра. Если первая зависимость изменяется каким-либо образом, станут недействительными кэшированного элемента.  
  
 [!code-csharp[CacheDependency Constructor7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor7/CS/dependencycs.aspx#1)]
 [!code-vb[CacheDependency Constructor7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor7/VB/dependencyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, class System.Web.Caching.CacheDependency dependency, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), dependency As CacheDependency, start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, System::Web::Caching::CacheDependency ^ dependency, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * System.Web.Caching.CacheDependency * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, dependency, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">Массив путей (к файлам или каталогам), от которого зависит кэшированный объект. При изменении любого из ресурсов кэшированный объект становится устаревшим и удаляется из кэша.</param>
        <param name="cachekeys">Массив ключей кэша, изменения которых отслеживает новый объект. При изменении любого из ключей кэша кэшированный объект, связанный с этой зависимостью, становится устаревшим и удаляется из кэша.</param>
        <param name="dependency">Другой экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, от которого зависит этот экземпляр.</param>
        <param name="start">Время, по которому проверяется дата последнего изменения объектов массивов и объекта <see cref="T:System.Web.Caching.CacheDependency" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, отслеживающий изменения массива путей (к файлам или каталогам), массива ключей кэша, или обоих сразу. Он также становится зависимым от другого экземпляра класса <see cref="T:System.Web.Caching.CacheDependency" /> и времени начала отслеживания изменений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Кроме того Если какой-либо из каталогов или файлов, указанных в `filenames` параметр не найден в файловой системе, он будет считаться отсутствующим. Если отсутствует каталога или файла при добавлении объекта с зависимостью для <xref:System.Web.Caching.Cache>, кэшированный объект будет удален из <xref:System.Web.Caching.Cache> при создании этого каталога или файла.  
  
 Например, предположим, что добавляется объект <xref:System.Web.Caching.Cache> с зависимостью от следующего пути к файлу: c:\stocks\xyz.dat. Если этот файл не найден при <xref:System.Web.Caching.CacheDependency> объект создается, но впоследствии будет создан, кэшированный объект удаляется при создании файла xyz.dat.  
 
 Тем не менее `cachekeys` зависимостей работает одинаково. Если по крайней мере одно значение в `cachekeys` параметра не существует во время вставки, то возникает ошибка insert. Обратите внимание, что исключение не создано для этого сценария.

> [!NOTE]
>  Отслеживание изменений начинается немедленно и не зависит от непосредственно `start` параметра. Используйте `start` переданный параметр для передачи даты и времени в прошлом, с которым вы хотите проверить дату последнего изменения любого из объектов `filenames`, `cachekeys`, или `dependency` параметров. Если дата последнего изменения даты для любого из этих объектов позже даты и времени прошло в `start` параметра, кэшируемый элемент удаляется из <xref:System.Web.Caching.Cache>.  
  
   
  
## Examples  
 В следующем коде показано в примере `CreateDependency` метод. При вызове этого метода, он создает <xref:System.DateTime> объекта и <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> свойство используется для добавления элемента в кэш с параметром ключа `key1` и значение `Value 1`. Массив строк, `dependencyKey`, затем создается со значением по его индексу первый (и единственный) присвоено значение `key1` также. <xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType> Конструктор используется для создания <xref:System.Web.Caching.CacheDependency> объекта, `dep1`, который передает `dependencyKey` как аргумент параметра. Секунды <xref:System.Web.Caching.CacheDependency> объекта, `dep2`, создается с помощью этого конструктора с `dep1` и <xref:System.DateTime> объект, передаваемый в качестве аргументов параметра. Вторая зависимость зависит от первой, и отслеживание зависимостей начинается 10 секунд после `CreateDependency` вызывается метод. <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> Метод вызывается после этого с помощью второй <xref:System.Web.Caching.CacheDependency> объект в качестве параметра. Если первая зависимость изменяется каким-либо образом, станут недействительными кэшированного элемента.  
  
 [!code-csharp[CacheDependency Constructor8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor8/CS/dependencytimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor8/VB/dependencytimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="DependencyDispose">
      <MemberSignature Language="C#" Value="protected virtual void DependencyDispose ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DependencyDispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.DependencyDispose" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DependencyDispose ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DependencyDispose();" />
      <MemberSignature Language="F#" Value="abstract member DependencyDispose : unit -&gt; unit&#xA;override this.DependencyDispose : unit -&gt; unit" Usage="cacheDependency.DependencyDispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает ресурсы, используемые классом <see cref="T:System.Web.Caching.CacheDependency" /> и любыми классами, производными от <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Любой класс, производный от <xref:System.Web.Caching.CacheDependency> класс должен реализовывать этот метод для освобождения ресурсов, использовал производного класса.  
  
   
  
## Examples  
 В следующем примере кода показан класс, наследуемый от <xref:System.Web.Caching.CacheDependency> класс и переопределяет <xref:System.Web.Caching.CacheDependency.DependencyDispose%2A> метод. При вызове этого метода, он устанавливает настраиваемое логическое свойство с именем `Disposed` для `true`.  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cacheDependency.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает ресурсы, используемые объектом <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishInit">
      <MemberSignature Language="C#" Value="protected internal void FinishInit ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void FinishInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.FinishInit" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub FinishInit ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void FinishInit();" />
      <MemberSignature Language="F#" Value="member this.FinishInit : unit -&gt; unit" Usage="cacheDependency.FinishInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Завершает инициализацию объекта <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.CacheDependency.FinishInit%2A> Метод завершения инициализации <xref:System.Web.Caching.CacheDependency> объекта. Этот метод вызывается для всех <xref:System.Web.Caching.CacheDependency> конструкторы.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.Caching.CacheDependency.FinishInit" /> Метод должен вызываться в конце конструктор для производных классов для завершения инициализации <see cref="T:System.Web.Caching.CacheDependency" /> объекта.</para></block>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="GetFileDependencies">
      <MemberSignature Language="C#" Value="public virtual string[] GetFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.GetFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileDependencies () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFileDependencies();" />
      <MemberSignature Language="F#" Value="abstract member GetFileDependencies : unit -&gt; string[]&#xA;override this.GetFileDependencies : unit -&gt; string[]" Usage="cacheDependency.GetFileDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает зависимости файлов.</summary>
        <returns>Зависимости файлов.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueID">
      <MemberSignature Language="C#" Value="public virtual string GetUniqueID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUniqueID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.GetUniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUniqueID () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetUniqueID();" />
      <MemberSignature Language="F#" Value="abstract member GetUniqueID : unit -&gt; string&#xA;override this.GetUniqueID : unit -&gt; string" Usage="cacheDependency.GetUniqueID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает уникальный идентификатор для объекта <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <returns>Уникальный идентификатор объекта <see cref="T:System.Web.Caching.CacheDependency" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может быть особенно полезен для отслеживания нескольких экземпляров <xref:System.Web.Caching.CacheDependency> класс, связанный с элементом или приложения.  
  
 Идентификатор представляет собой сочетание имя файла (зависимость) или имя ключа (для зависимости кэш – ключевое) и строка, этот метод назначает зависимости. В классах, производных от <xref:System.Web.Caching.CacheDependency> класса, можно переопределить этот метод для настройки, как он создает уникальный идентификатор.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Web.Caching.AggregateCacheDependency> объект, названный `aggDep`, с двумя <xref:System.Web.Caching.CacheDependency> объектов в массиве его. Один раз `aggDep` создается экземпляр, этот код вызывает <xref:System.Web.Caching.CacheDependency.GetUniqueID%2A> метод для создания уникального идентификатора для обоих зависимостей, `aggDep` содержит и отображает идентификаторы страницу. Затем добавляется элемент <xref:System.Web.Caching.Cache>, с использованием <xref:System.Web.Caching.Cache.Insert%2A> метод, с помощью `aggDep` как зависимость.  
  
 [!code-vb[CachingSamples_AggregateCacheDependency1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CachingSamples_AggregateCacheDependency1/VB/aggregatecachedependencysamplevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.CacheDependency.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanged : bool" Usage="System.Web.Caching.CacheDependency.HasChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, изменился ли объект <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <value><see langword="true" />, если объект <see cref="T:System.Web.Caching.CacheDependency" /> изменился; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно добавить элемент к приложению ASP.NET <xref:System.Web.Caching.Cache> с <xref:System.Web.Caching.CacheDependency>. Когда <xref:System.Web.Caching.CacheDependency> элемент, добавляемый <xref:System.Web.Caching.Cache> аннулируется и удаляется из кэша. Это свойство можно использовать для определения ли <xref:System.Web.Caching.CacheDependency> был изменен и повторного создания элемента в <xref:System.Web.Caching.Cache> случае наличия таковых.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Web.Caching.CacheDependency.HasChanged%2A> свойства, чтобы определить ли <xref:System.Web.Caching.CacheDependency> изменены с момента предыдущего запроса для элемента в <xref:System.Web.Caching.Cache>. `dt` Значение, переданное в `start` параметр имеет значение <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="ItemRemoved">
      <MemberSignature Language="C#" Value="public void ItemRemoved ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ItemRemoved() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.ItemRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Sub ItemRemoved ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ItemRemoved();" />
      <MemberSignature Language="F#" Value="member this.ItemRemoved : unit -&gt; unit" Usage="cacheDependency.ItemRemoved " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывается при удалении отслеживаемой записи кэша.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepDependenciesAlive">
      <MemberSignature Language="C#" Value="public void KeepDependenciesAlive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void KeepDependenciesAlive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.KeepDependenciesAlive" />
      <MemberSignature Language="VB.NET" Value="Public Sub KeepDependenciesAlive ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void KeepDependenciesAlive();" />
      <MemberSignature Language="F#" Value="member this.KeepDependenciesAlive : unit -&gt; unit" Usage="cacheDependency.KeepDependenciesAlive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обновляет время последнего обращения к каждому элементу кэша, который зависит от этого элемента.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyDependencyChanged">
      <MemberSignature Language="C#" Value="protected void NotifyDependencyChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void NotifyDependencyChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub NotifyDependencyChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void NotifyDependencyChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.NotifyDependencyChanged : obj * EventArgs -&gt; unit" Usage="cacheDependency.NotifyDependencyChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="e" Type="System.EventArgs" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sender">Источник события.</param>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные о событии.</param>
        <summary>Уведомляет базовый объект <see cref="T:System.Web.Caching.CacheDependency" /> об изменении зависимости, представленной производным классом <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Любой класс, производный от <xref:System.Web.Caching.CacheDependency> класс должен реализовывать этот метод.  
  
 При наследовании от <xref:System.Web.Caching.CacheDependency> , использовать базовые функции любой метод или свойство, которое не был переопределен. При создании экземпляра производного класса, он представляет файлы, ключи кэша, таблицы базы данных или других произвольных объектов, которые вы хотите сделать зависимой от кэшированного элемента. При изменении элемента зависимости, этот метод уведомляет базовую функциональность <xref:System.Web.Caching.CacheDependency> класс, который был изменен элемент, таким образом, чтобы значения <xref:System.Web.Caching.CacheDependency.HasChanged%2A> и <xref:System.Web.Caching.CacheDependency.UtcLastModified%2A> могут быть обновлены.  
  
   
  
## Examples  
 В следующем примере кода показан класс, наследуемый от <xref:System.Web.Caching.CacheDependency> класса. Он создает открытый метод, `ResetDependency`, который использует <xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A> метод, чтобы изменить время, по которому был изменен зависимости, а затем вызывает <xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A> метод.  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="SetCacheDependencyChanged">
      <MemberSignature Language="C#" Value="public void SetCacheDependencyChanged (Action&lt;object,EventArgs&gt; dependencyChangedAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCacheDependencyChanged(class System.Action`2&lt;object, class System.EventArgs&gt; dependencyChangedAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.SetCacheDependencyChanged(System.Action{System.Object,System.EventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCacheDependencyChanged (dependencyChangedAction As Action(Of Object, EventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCacheDependencyChanged(Action&lt;System::Object ^, EventArgs ^&gt; ^ dependencyChangedAction);" />
      <MemberSignature Language="F#" Value="member this.SetCacheDependencyChanged : Action&lt;obj, EventArgs&gt; -&gt; unit" Usage="cacheDependency.SetCacheDependencyChanged dependencyChangedAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyChangedAction" Type="System.Action&lt;System.Object,System.EventArgs&gt;" Index="0" FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dependencyChangedAction">Действие изменения зависимости.</param>
        <summary>Добавляет метод действия для обработки уведомления заинтересованной стороны об изменениях в этой зависимости.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUtcLastModified">
      <MemberSignature Language="C#" Value="protected void SetUtcLastModified (DateTime utcLastModified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetUtcLastModified(valuetype System.DateTime utcLastModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetUtcLastModified (utcLastModified As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetUtcLastModified(DateTime utcLastModified);" />
      <MemberSignature Language="F#" Value="member this.SetUtcLastModified : DateTime -&gt; unit" Usage="cacheDependency.SetUtcLastModified utcLastModified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utcLastModified" Type="System.DateTime" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="utcLastModified">Время последнего изменения зависимости.</param>
        <summary>Помечает время последнего изменения зависимости.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показан класс, наследуемый от <xref:System.Web.Caching.CacheDependency> класса. Он создает открытый метод, `ResetDependency`, который использует <xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A> метод, чтобы изменить время, по которому был изменен зависимости, а затем вызывает <xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A> метод.  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="TakeOwnership">
      <MemberSignature Language="C#" Value="public bool TakeOwnership ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TakeOwnership() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.TakeOwnership" />
      <MemberSignature Language="VB.NET" Value="Public Function TakeOwnership () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TakeOwnership();" />
      <MemberSignature Language="F#" Value="member this.TakeOwnership : unit -&gt; bool" Usage="cacheDependency.TakeOwnership " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Позволяет первому пользователю объявлять монопольный доступ к этой зависимости.</summary>
        <returns><see langword="true" />, если элемент был первым владельцем; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод объявляет, что используется зависимость. Если другой элемент уже вызван этот метод и стал владельцем, `false` возвращается. Объект <xref:System.Web.Caching.CacheDependency> можно использовать только одну запись. При добавлении элемента в кэш с любой зависимости кэша, указанные кэш должен стать владельцем этих зависимостей, чтобы убедиться в том, что они не используются повторно где-то иначе.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcLastModified">
      <MemberSignature Language="C#" Value="public DateTime UtcLastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime UtcLastModified" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.CacheDependency.UtcLastModified" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcLastModified As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime UtcLastModified { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcLastModified : DateTime" Usage="System.Web.Caching.CacheDependency.UtcLastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает время последнего изменения зависимости.</summary>
        <value>Время последнего изменения зависимости.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство измеряется в формате UTC (UTC) (также известный как время по Гринвичу).  
  
   
  
## Examples  
 В следующем примере кода используется <xref:System.Web.Caching.AggregateCacheDependency> класс, чтобы добавить элемент, с двумя <xref:System.Web.Caching.CacheDependency> на объект зависимости, <xref:System.Web.Caching.Cache>. Когда запрос <xref:System.Web.Caching.Cache> элемента, код проверяет, является ли элемент в <xref:System.Web.Caching.Cache>. Если это так, <xref:System.Web.Caching.CacheDependency.UtcLastModified%2A> свойство преобразуется в строку и отображаются на странице. Если это не так, элемент и его две зависимости создаются и добавляются к <xref:System.Web.Caching.Cache>.  
  
 [!code-vb[CachingSamples_AggregateCacheDependency1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CachingSamples_AggregateCacheDependency1/VB/aggregatecachedependencysamplevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
  </Members>
</Type>