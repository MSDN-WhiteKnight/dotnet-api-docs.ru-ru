<Type Name="WSFederationAuthenticationModule" FullName="System.IdentityModel.Services.WSFederationAuthenticationModule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="84794e52ef0e355ba168bb4ee4a2b5b1926e30a9" /><Meta Name="ms.sourcegitcommit" Value="9802d4c6745a8ae514b26f144fb3969265b224ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/22/2018" /><Meta Name="ms.locfileid" Value="53751249" /></Metadata><TypeSignature Language="C#" Value="public class WSFederationAuthenticationModule : System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSFederationAuthenticationModule extends System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Class WSFederationAuthenticationModule&#xA;Inherits HttpModuleBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationAuthenticationModule : System::IdentityModel::Services::HttpModuleBase" />
  <TypeSignature Language="F#" Value="type WSFederationAuthenticationModule = class&#xA;    inherit HttpModuleBase" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.HttpModuleBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> представляет собой HTTP-модуль, используемый для защиты приложения ASP.NET путем применения параметров федеративной проверки подлинности к входящим запросам. <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> представляет собой готовый главный модуль, который WIF предлагает для обработки доступа по удостоверениям на основе утверждений в приложениях ASP.NET.  
  
Класс <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> вызывает несколько событий, что позволяет разработчикам ASP.NET изменять поведение по умолчанию и отслеживать сведения о порядке выполнения аутентификации и обработки утверждений. Функциональные возможности класса <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> разделены на методы, специфичные для задач.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> Класс реализует модуль HTTP, известный как модуль аутентификации WS-Federation (WSFAM). WSFAM реализуется без дополнительной настройки Windows Identity Foundation (WIF). WSFAM добавляется в конвейер ASP.NET путем создания записи в файле web.config. Он является производным от <xref:System.IdentityModel.Services.HttpModuleBase>, который реализует <xref:System.Web.IHttpModule>. Он регистрирует со средой выполнения ASP.NET для прослушивания <xref:System.Web.HttpApplication.EndRequest> и <xref:System.Web.HttpApplication.AuthenticateRequest> события. Прослушивание <xref:System.Web.HttpApplication.EndRequest> событий, позволяет WSFAM перенаправления клиентов в службе маркеров безопасности (STS), чтобы получить маркер безопасности, при сбое авторизации в запрошенный ресурс. Прослушивание <xref:System.Web.HttpApplication.AuthenticateRequest> событие позволяет WSFAM для отслеживания запросов HTTP для ответа от службы маркеров безопасности, содержащий запрошенного токена. Если такого маркера объект существует и допустим, он создает экземпляр класса <xref:System.Security.Claims.ClaimsPrincipal> для прошедшего проверку подлинности пользователя, с помощью утверждения, которые присутствуют в маркере.  
  
 При использовании WSFAM, управление сеансами обеспечивается модуля аутентификации сеанса (SAM), который является экземпляром объекта <xref:System.IdentityModel.Services.SessionAuthenticationModule> класс или класс, производный от него. SAM также добавляется в конвейер ASP.NET в файле конфигурации. SAM отслеживает запросы для файлов cookie проверки подлинности (сеанса). Когда эти файлы cookie существует и допустим, извлекает модуль <xref:System.Security.Claims.ClaimsPrincipal> для прошедшего проверку подлинности пользователя из <xref:System.IdentityModel.Tokens.SessionSecurityToken> и задает <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> свойство и субъект потока <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> свойства.  
  
 Модуль WSFAM предоставляет:  
  
-   Возможности для приложений ASP.NET на делегирование аутентификации в службе маркеров безопасности (STS) с помощью протокола WS-Federation. Можно включить в федерацию между идентификационными один или несколько удостоверений и включают в себя несколько серверов службы токенов безопасности.  
  
-   Удостоверение на основе утверждений для приложений ASP.NET. Во время проверки подлинности WSFAM создает субъект на основе утверждений в маркере безопасности, отправленных службой маркеров безопасности и задает этим субъектом утверждений как субъект потока. Затем можно использовать этот участник, чтобы авторизации, представления и логики с точки зрения пользователя, которое она представляет в коде.  
  
 WSFAM предоставляет несколько свойств, которые предоставляют по умолчанию параметры сообщений, используемые в запросах входа в систему и выхода WS-Federation. Эти свойства обычно инициализируются [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) элемент в файле конфигурации. Наиболее важным из этих свойств приведены.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Свойство, которое указывает адрес службы маркеров безопасности (STS), к которому необходимо отправлять запросы на вход в систему и выхода WS-Federation.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> Свойство, которое указывает параметр wtrealm для использования в запросах входа WS-Federation. Параметр wtrealm определяет области безопасности приложения проверяющей стороны (RP) в службе маркеров безопасности.  
  
 Также можно изменить параметры входа в систему сообщений для каждого запроса, предоставляя делегат обработчика событий для <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> событий.  
  
 Два свойства управляют поведением модуля. Оба эти свойства также обычно инициализируются `<wsFederation>` элемент в конфигурации.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> Свойство указывает, должен ли модуль выполнения пассивного перенаправления к STS для проверки подлинности.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects%2A> Свойство указывает, должны ли быть постоянные сеансы. Если это свойство имеет значение true, SAM используется для записи файла cookie сеанса клиента. При последующих запросах от клиента SAM предоставляет проверку подлинности с помощью маркера, сохраненных в файл cookie сеанса.  
  
 WSFAM вызывает несколько событий во время входа и выхода, которые позволяют разработчикам ASP.NET изменять поведение по умолчанию модуля и отслеживать сведения о том, как проверка подлинности и обработки утверждений выполняются.  
  
 Перед отправкой запроса входа WS-Federation STS, вызываются следующие события:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed>: Вызывается, когда включена пассивного перенаправления и неудачной авторизации на запрошенный ресурс.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>: Возникает непосредственно перед WSFAM отправляет запрос входа WS-Federation в службе маркеров безопасности. Это событие можно использовать для изменения параметров в запросе входа в систему.  
  
 Ответ входа в систему (выданного маркера безопасности), полученного от службы маркеров безопасности, вызываются следующие события:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>: Возникает сразу после маркера безопасности, отправленных службой маркеров безопасности, считать из ответа.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>: Возникает сразу после проверки маркера. Это событие можно использовать для фильтрации, преобразования или добавить утверждения в субъект утверждений (<xref:System.Security.Claims.ClaimsPrincipal>) создан из токена безопасности.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>: Возникает непосредственно перед маркера сеанса (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) созданная на основе утверждений субъекта используется для задания участника потока и текущего пользователя и записывается в файл cookie сеанса. Дает возможность изменить маркер сеанса или включить или отключить запись файла cookie сеанса.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn>: Возникает в конце проверки подлинности только в том случае, после основного и текущий пользователь потока были заданы.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError>: Вызывается при возникновении исключения во время входа. Можно отменить запрос и предотвратить возникновение исключения из возвращается вызывающему объекту.  
  
 При входе из сеанса или при обработке запроса очистки выхода WS-Federation (wsignoutcleanup1.0), возникают следующие события:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>: Возникает непосредственно перед удалением сеанса, позволяя выполнить очистку, может зависеть от сеанса или отменить выхода.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>: Возникает только в том случае, после удаления сеанса.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>: Вызывается при возникновении исключения во время выхода. Можно отменить выхода и предотвратить возникновение исключения из возвращается вызывающему объекту.  
  
> [!NOTE]
>  События выхода не вызываются при выходе в STS, вызвав <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> метод.  
  
 Вход в службу STS, с помощью WSFAM двумя способами. Во-первых, включив пассивного перенаправления через <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> свойство. В этом случае при авторизации сбое запрошенного ресурса, а не возвращает `401:Access Denied` ответ клиенту, WSFAM создает сообщение запроса входа запроса WS-Federation из его свойств и перенаправляет клиента к STS для получения маркера безопасности. Вторым способом является явным образом перенаправлять клиента в службе маркеров безопасности путем вызова <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> метода из веб-страницы или пользовательского элемента управления в приложении. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> Метод также использует свойства WSFAM составлять запросы входа в систему.  
  
 Любой из перегруженных <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> методы можно использовать для выхода из сеанса. Это приведет к удалению сеансового cookie на клиентском компьютере. Он не отправляет сообщение выхода WS-Federation («wsignout1.0») в службе маркеров безопасности. Для выхода в STS, необходимо использовать <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> метод.  
  
 WSFAM обрабатывает запросах выхода очистки WS-Federation («wsignoutcleanup1.0»), удалив свой сеанс с клиентом. Если параметр wreply в сообщение очистки выхода не задано, WSFAM возвращает изображение зеленой галочкой в STS, отправившего сообщение. Эта функция может использоваться службой маркеров безопасности как подтверждение, что RP был выполнен его выхода.  
  
 WSFAM предоставляет свои функции — например, его конвейера обработки запросов — через несколько методов с задачей. Можно переопределить эти методы в производных классах, чтобы изменять поведение WSFAM.  
  
 Для использования, необходимо добавить модуль в конвейер, как в следующем коде XML:  
  
```  
<configuration>  
  <system.webServer>  
    <modules>  
      <add name="WsFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
    </modules>  
  </system.webServer>  
</configuration>  
```  
  
 После настройки конфигурации <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> вызывает события на различных этапах обработки HTTP-запроса. Разработчики ASP.NET может обрабатывать эти события в файле global.asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationAuthenticationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Вызывается конструкторами в производных классах для инициализации класса <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение параметра wauth, используемого в запросах входа WS-Federation ("wsignin1.0").</summary>
        <value>Универсальный код ресурса (URI), указывающий тип аутентификации.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр wauth является необязательным. Если <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType%2A> свойству `null` или пустая строка, параметр wauth не включен в запрос на вход.  
  
 Можно переопределить этот параметр при каждом запросе HTTP, добавив обработчик <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> событий. Это событие возникает непосредственно перед модуль перенаправляет службе маркеров безопасности (STS) с сообщением запроса входа запроса WS-Federation. Служба маркеров безопасности задается <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event AuthorizationFailed As EventHandler(Of AuthorizationFailedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::AuthorizationFailedEventArgs ^&gt; ^ AuthorizationFailed;" />
      <MemberSignature Language="F#" Value="member this.AuthorizationFailed : EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " Usage="member this.AuthorizationFailed : System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает, когда модуль определяет, должен ли он перенаправить пользователя на настроенного издателя для аутентификации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> Событие возникает, когда произошел сбой авторизации для HTTP-запроса. Вызвано изнутри <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> делегата обработчика событий посредством вызова <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed%2A> метод.  
  
 Можно задать <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> свойства для управления ли запрос перенаправляется на поставщика удостоверений. Платформа инициализирует это свойство, чтобы `false` Если пользователь уже прошел проверку подлинности. В этом случае для свойства значение `true` может вызвать бесконечный цикл со службой STS.  
  
> [!NOTE]
>  <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Событий можно использовать для изменения URL-адрес или отменить перенаправления.  
  
 Чтобы обработать это событие в приложении ASP.NET, создайте метод с именем `WSFederationAuthentication_AuthorizationFailed` в файле global.asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadSignInResponse">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли заданный HTTP-запрос ответным сообщением входа WS-Federation. Если сообщение является сообщением очистки выхода WS-Federation ("wsignoutcleanup1.0"), этот метод обрабатывает запрос.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сообщение отклика входа отправляется доверяющей стороне (RP), службы маркеров безопасности (STS) в ответ на сообщение запроса входа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public bool CanReadSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="member this.CanReadSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Входящий HTTP-запрос.</param>
        <summary>Возвращает значение, указывающее, является ли заданный HTTP-запрос ответным сообщением входа WS-Federation. Если сообщение является сообщением очистки выхода WS-Federation ("wsignoutcleanup1.0"), этот метод обрабатывает запрос.</summary>
        <returns>Значение <see langword="true" />, если указанный HTTP-запрос содержит запрос POST формы, в котором параметр wa имеет значение "wsignout1.0", а параметр wresult не пуст; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается из конвейера обработки запросов, чтобы определить, является ли входящий HTTP-запрос post формы, который содержит сообщение отклика входа WS-Federation.  
  
 Он вызывает <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> перегрузка с `onPage` набор параметров `false` для указания, что вызов метода не происходит во время обработки страницы.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="request" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool CanReadSignInResponse (System.Web.HttpRequestBase request, bool onPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request, bool onPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadSignInResponse (request As HttpRequestBase, onPage As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request, bool onPage);" />
      <MemberSignature Language="F#" Value="abstract member CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool&#xA;override this.CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse (request, onPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
        <Parameter Name="onPage" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="request">Входящий HTTP-запрос.</param>
        <param name="onPage">Значение <see langword="true" />, если вызов происходит при обработке запроса страницы. <see langword="false" /> Если вызывающий объект — HTTP-модуль. Этот параметр определяет, как следует завершать обработку или отправлять сообщения перенаправления, если входящее сообщение является сообщением очистки выхода WS-Federation ("wsignoutcleanup1.0").</param>
        <summary>Возвращает значение, указывающее, является ли заданный HTTP-запрос ответным сообщением входа WS-Federation. Если сообщение является сообщением очистки выхода WS-Federation ("wsignoutcleanup1.0"), этот метод обрабатывает запрос.</summary>
        <returns>Значение <see langword="true" />, если указанный HTTP-запрос содержит запрос POST формы, в котором параметр wa имеет значение "wsignout1.0", а параметр wresult не пуст; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается из конвейера обработки запросов через <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> перегрузка для определения, является ли входящий HTTP-запрос формы POST, который содержит сообщение отклика входа WS-Federation.  
  
 Реализация по умолчанию выполняет следующие операции:  
  
-   Если входящий запрос представляет собой форму POST, он вызывает метод <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse%2A> метод, чтобы определить, содержит ли форму POST ответ входа в систему.  
  
-   Если входящий запрос не является формой POST, а запрос содержит WS-Federation очистки запрос выхода (параметр wa имеет «wsignoutcleanup1.0»), выполняется выход очистки. В этом случае <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> вызывается метод (с параметром, имеющим `true` для указания выхода очистку) выхода из сеанса. Это также приводит к возникновению выхода событий.  
  
     Далее, если запроса очистки выхода содержит параметр wreply, клиент выполняется перенаправление на URL-адрес, возвращенный <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl%2A> метода; в противном случае возвращается изображение зеленой галочкой в службе маркеров безопасности. Получение этот образ используется службой маркеров безопасности, подтверждающее, что запроса очистки выхода получен и успешно обработал проверяющей стороной.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="request" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSignInRequest">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest (string uniqueId, string returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest(string uniqueId, string returnUrl, bool rememberMeSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSignInRequest (uniqueId As String, returnUrl As String, rememberMeSet As Boolean) As SignInRequestMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Services::SignInRequestMessage ^ CreateSignInRequest(System::String ^ uniqueId, System::String ^ returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="F#" Value="member this.CreateSignInRequest : string * string * bool -&gt; System.IdentityModel.Services.SignInRequestMessage" Usage="wSFederationAuthenticationModule.CreateSignInRequest (uniqueId, returnUrl, rememberMeSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInRequestMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="rememberMeSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">WSFAM хранит это значение в параметре wctx запроса входа WS-Federation; однако этот модуль не использует его при обработке запросов входа и ответных сообщений входа. Можно задать любое значение. Не обязательно должен быть уникальным.</param>
        <param name="returnUrl">URL-адрес, на который модуль должен вернуться после аутентификации.</param>
        <param name="rememberMeSet">WSFAM хранит это значение в параметре wctx запроса входа WS-Federation; однако этот модуль не использует его при обработке запросов входа и ответных сообщений входа. Можно задать значение <see langword="true" /> или <see langword="false" />.</param>
        <summary>Создает сообщение запроса входа WS-Federation, используя параметры WS-Federation, настроенные для модуля.</summary>
        <returns>Сообщение запроса входа WS-Federation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Создает запрос входа WS-Federation, представленного <xref:System.IdentityModel.Services.SignInRequestMessage> объекта. Свойства нового <xref:System.IdentityModel.Services.SignInRequestMessage> объекта заданы следующим образом:  
  
-   <xref:System.IdentityModel.Services.WSFederationMessage.Context%2A> (Параметр wctx) присваивается значение, созданное с помощью параметров метода.  
  
-   <xref:System.IdentityModel.Services.SignInRequestMessage.CurrentTime%2A> (Параметр wct) задано значение текущего времени.  
  
-   Все остальные свойства задаются с помощью эквивалентных свойств текущего экземпляра.  
  
 Параметры, передаваемые в метод используются для создания параметра wctx сообщения. Это строка в следующем формате: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`.  
  
-   `ru` Будет присвоено значение `returnUrl` параметр, передаваемый в метод и указывает, что модуль следует направлять в браузере после успешной проверки подлинности URL-адрес. Это единственное значение, хранящееся в строку wctx, использоваться WSFAM. Этот модуль вызывает <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> метод для извлечения этого значения из параметра wctx при обработке ответа входа WS-Federation. Не следует путать с параметром wreply сообщения, определяемый параметром <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> свойство и который обеспечивает адрес в RP, к которому служба маркеров безопасности (STS) должны направлять его ответа.  
  
-   `cx` Параметру присвоить значение <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> свойства. Это свойство предоставляется позволяют задать любой контекст, определяемые приложением, которое будет храниться в строке wctx; Тем не менее WSFAM предоставляет метод для извлечения этого значения в ответе. Если приложению требуется значение, необходимо указать код для анализа строки wctx и считывает это значение при обработке ответа. Это можно сделать путем переопределения <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> метод.  
  
-   Ни `rm` значение, которое будет присвоено значение `rememberMeSet` параметра, ни `id` параметр, который будет присвоено значение `uniqueId` параметр используются WSFAM. Это может быть присвоено любое значение.  
  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> Метод вызывается из <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> имеет значение <see langword="null" /> или пустая строка.  
  
-или- 
Свойство <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> имеет значение <see langword="null" /> или пустая строка.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FederatedSignOut">
      <MemberSignature Language="C#" Value="public static void FederatedSignOut (Uri signOutUrl, Uri replyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FederatedSignOut(class System.Uri signOutUrl, class System.Uri replyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FederatedSignOut (signOutUrl As Uri, replyUrl As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FederatedSignOut(Uri ^ signOutUrl, Uri ^ replyUrl);" />
      <MemberSignature Language="F#" Value="static member FederatedSignOut : Uri * Uri -&gt; unit" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut (signOutUrl, replyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutUrl" Type="System.Uri" />
        <Parameter Name="replyUrl" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signOutUrl">URL-адрес службы STS, которая должна получить сообщение запроса выхода WS-Federation. Не может иметь значение <see langword="null" />.</param>
        <param name="replyUrl">URL-адрес для отправки в качестве значения "wreply" в сообщении запроса выхода.</param>
        <summary>Выполняет выход в указанной службе токенов безопасности (STS) с помощью протокола WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется для отправки сообщения запроса выхода WS-Federation в указанную службу STS. Можно также указать значение параметра wreply в запросе выхода.  
  
 Метод выполняет следующие функции:  
  
1.  Создает сообщение запроса выхода WS-Federation, используя заданные параметры.  
  
2.  Вызовы <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> метод SAM для удаления файла cookie сеанса.  
  
3.  Перенаправление в STS, используя сообщение запроса выхода из первого шага.  
  
 Ни одно событие выхода: <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>, или <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> вызываются с помощью данного метода. Чтобы удалить сеанс без отправки сообщения запроса выхода в STS, вызовите один из перегруженных <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> методы.  
  
> [!NOTE]
>  Чтобы выполнить пассивном выходе с помощью маркера сеанса, модуль зависит от значения, хранящиеся в <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> свойство при входе в систему, Дополнительные сведения см. в разделе <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="signOutUrl" /> имеет значение, отличное от <see langword="null" />, и не является абсолютным универсальным кодом ресурса (URI).  
  
-или- 
 <paramref name="replyUrl" /> имеет значение, отличное от <see langword="null" />, и не является абсолютным универсальным кодом ресурса (URI).</exception>
        <exception cref="T:System.InvalidOperationException">Свойство <paramref name="signOutUrl" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      </Docs>
    </Member>
    <Member MemberName="Freshness">
      <MemberSignature Language="C#" Value="public string Freshness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Freshness" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberSignature Language="VB.NET" Value="Public Property Freshness As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Freshness { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Freshness : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение параметра wfresh, используемого в запросах входа WS-Federation ("wsignin1.0").</summary>
        <value>Требуемая максимальная длительность запросов аутентификации в минутах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр wfresh является необязательным. Если <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness%2A> свойству `null` или пустая строка, параметр wfresh не включен в запрос на вход.  
  
 Можно переопределить этот параметр при каждом запросе HTTP, добавив обработчик <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> событий. Это событие возникает непосредственно перед модуль перенаправляет службе маркеров безопасности (STS) с сообщением запроса входа запроса WS-Federation. Служба маркеров безопасности задается <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFederationPassiveSignOutUrl">
      <MemberSignature Language="C#" Value="public static string GetFederationPassiveSignOutUrl (string issuer, string signOutReply, string signOutQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFederationPassiveSignOutUrl(string issuer, string signOutReply, string signOutQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFederationPassiveSignOutUrl (issuer As String, signOutReply As String, signOutQueryString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFederationPassiveSignOutUrl(System::String ^ issuer, System::String ^ signOutReply, System::String ^ signOutQueryString);" />
      <MemberSignature Language="F#" Value="static member GetFederationPassiveSignOutUrl : string * string * string -&gt; string" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl (issuer, signOutReply, signOutQueryString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="System.String" />
        <Parameter Name="signOutReply" Type="System.String" />
        <Parameter Name="signOutQueryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuer">Адрес поставщика. Адрес службы токена безопасности (STS), в которую требуется перенаправить запрос.</param>
        <param name="signOutReply">URL-адрес, задающий адрес для возврата после выхода. Это задает параметр wreply в запросе выхода. Может быть <see langword="null" /> или быть пустым, если нет параметров wreply, которые должны быть включены в созданный запрос выхода. Это должен быть абсолютный универсальный код ресурса (URI).</param>
        <param name="signOutQueryString">Дополнительные параметры строки запроса, которые необходимо включить в запрос выхода. Может быть <see langword="null" /> или быть пустым, если нет дополнительных параметров to be включенных в созданный запрос выхода. Это должен быть относительный универсальный код ресурса (URI).</param>
        <summary>Возвращает URL-адрес, представляющие запрос на выход из WS-Federation обращенный к указанному издателю и который содержит указанный параметр wreply и заданные дополнительные параметры.</summary>
        <returns>URL-адрес, содержащий пассивный запрос выхода WS-Federation, который формируется с использованием указанных параметров.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В URL-АДРЕСЕ, который возвращается: базовый URI присваивается `issuer`; параметр wa имеет значение «wsignout1.0»; параметр wreply присваивается `signOutReply`; и параметры, заданные в `signOutQueryString` как дополнительные параметры строки запроса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="issuer" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedResult">
      <MemberSignature Language="C#" Value="protected virtual string GetReferencedResult (string resultPtr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReferencedResult(string resultPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReferencedResult (resultPtr As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReferencedResult(System::String ^ resultPtr);" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedResult : string -&gt; string&#xA;override this.GetReferencedResult : string -&gt; string" Usage="wSFederationAuthenticationModule.GetReferencedResult resultPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultPtr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resultPtr">URL-адрес, задающий адрес результата выпуска.</param>
        <summary>Получает результат выдачи (обычно выданный токен) из указанного URL-адреса. Разрешает URL-адрес, указанный в параметре wresultptr  в ответном сообщении входа.</summary>
        <returns>Результат выпуска, на который ссылался URL-адрес.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызывается средой <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> метод из конвейера обработки разрешить URL-адрес, указанный в параметре wresultptr в сообщении ответа входа в систему, полученных от службы маркеров безопасности (STS).  
  
 По умолчанию этот метод вызывает исключение <xref:System.NotSupportedException>. Переопределите этот метод в производном классе для поддержки параметра wresultptr. URL-адрес указывает на результат выпуска, который должен быть одним из следующих: `<wst:RequestSecurityTokenResponse>` элемент, `<wst:RequestSecurityTokenResponseCollection>` SOAP, ответ SOAP или элементом `<S:Fault>` элемент.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Этот метод не поддерживается в базовом классе. Это необходимо переопределить в производном классе.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnUrlFromResponse">
      <MemberSignature Language="C#" Value="protected virtual string GetReturnUrlFromResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReturnUrlFromResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReturnUrlFromResponse (request As HttpRequestBase) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReturnUrlFromResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string&#xA;override this.GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string" Usage="wSFederationAuthenticationModule.GetReturnUrlFromResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">HTTP-запрос, содержащий POST-формы, которые содержат ответное сообщение входа WS-Federation.</param>
        <summary>Извлекает URL-адрес изначально запрошенной страницы из ответа входа.</summary>
        <returns>URL страницы, первоначально запрошенной клиентом. Это URL-адрес (на проверяющей стороне), на который перенаправляется клиент после успешной входа.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается из конвейер обработки запросов ( <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> метод) для получения URL-адрес страницы, с проверяющей стороной (RP), чтобы направить клиента после успешного входа в систему. Это, как правило, URL-адрес ресурса RP, к которому клиент запросил доступ.  
  
 По умолчанию WSFAM хранит URL-адрес возврата в параметр wctx сообщения при отправке запроса входа WS-Federation для службы маркеров безопасности (STS). В соответствии со спецификацией WS-Federation параметр wctx сохраняется между сущностями, через которые сообщение передается и возвращается без изменений в сообщение отклика входа WS-Federation, который отправляется службой маркеров безопасности.  
  
 Реализация по умолчанию возвращает URL-адрес возврата из параметра wctx в ответ входа в систему. Дополнительные сведения о формате параметра wctx используемый WSFAM см. в разделе <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="request" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSecurityToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Считывает токен безопасности из указанного запроса.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (message As SignInResponseMessage) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Ответное сообщение входа, из которого требуется считать токен.</param>
        <summary>Считывает токен безопасности из указанного ответного сообщения входа WS Federation.</summary>
        <returns>Токен безопасности, который был прочитан из сообщения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация по умолчанию вызывает <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%2CSystem.IdentityModel.Services.WSFederationSerializer%29?displayProperty=nameWithType> метод, чтобы получить маркер и считывает их с помощью соответствующего обработчика из обработчиков маркеров безопасности.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="message" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (request As HttpRequestBase) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">HTTP-запрос, с которого нужно считывать токен.</param>
        <summary>Считывает токен безопасности из указанного HTTP-запроса.</summary>
        <returns>Считанный маркер безопасности.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызывается из конвейера обработки запросов, чтобы получить сообщение запроса входа запроса WS-Federation как <xref:System.IdentityModel.Tokens.SecurityToken> объекта.  
  
 Реализация по умолчанию вызывает <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage%2A> метод для получения <xref:System.IdentityModel.Services.SignInResponseMessage> объекта, а затем вызывает <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> перегрузки.  
  
 Производный класс используется для интерпретации определенного типа запроса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="request" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSessionTokenContext">
      <MemberSignature Language="C#" Value="protected virtual string GetSessionTokenContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSessionTokenContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSessionTokenContext () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSessionTokenContext();" />
      <MemberSignature Language="F#" Value="abstract member GetSessionTokenContext : unit -&gt; string&#xA;override this.GetSessionTokenContext : unit -&gt; string" Usage="wSFederationAuthenticationModule.GetSessionTokenContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает строку, которая должна быть сохранена с файлом cookie сеанса в свойстве <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />.</summary>
        <returns>Строка, которую необходимо сохранять в файле Cookie сеанса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> Метод вызывается из конвейера обработки запросов, при обработке сообщения ответа входа WS-Federation для получения значения для сохранения в <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> свойство в файле cookie сеанса.  
  
 Можно переопределить этот метод для задания значения конкретного приложения для сохранения в файле cookie. WSFAM не предоставляет никаких методов для получения значения из файла cookie. Следует задать логику приложения для чтения значения из куки-файл, при необходимости.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение свойства <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> — <see langword="null" />.</exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      </Docs>
    </Member>
    <Member MemberName="GetSignInResponseMessage">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSignInResponseMessage (request As HttpRequestBase) As SignInResponseMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Services::SignInResponseMessage ^ GetSignInResponseMessage(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage&#xA;override this.GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage" Usage="wSFederationAuthenticationModule.GetSignInResponseMessage request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">HTTP-запрос, из которого следует считывать ответное сообщение входа. Запрос должен представлять форму POST.</param>
        <summary>Считывает объект <see cref="T:System.IdentityModel.Services.SignInResponseMessage" /> из формы POST, представленной указанным HTTP-запросом.</summary>
        <returns>Созданное ответное сообщение входа.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызывается из <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> метод в конвейере обработки запросов, чтобы получить сообщение отклика входа из формы POST, содержащихся в запросе HTTP.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="request" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ответное сообщение входа не может быть считано из указанного запроса.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignOutRedirectUrl">
      <MemberSignature Language="C#" Value="protected virtual string GetSignOutRedirectUrl (System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSignOutRedirectUrl(class System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl(System.IdentityModel.Services.SignOutCleanupRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSignOutRedirectUrl (signOutMessage As SignOutCleanupRequestMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSignOutRedirectUrl(System::IdentityModel::Services::SignOutCleanupRequestMessage ^ signOutMessage);" />
      <MemberSignature Language="F#" Value="abstract member GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string&#xA;override this.GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetSignOutRedirectUrl signOutMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutMessage" Type="System.IdentityModel.Services.SignOutCleanupRequestMessage" />
      </Parameters>
      <Docs>
        <param name="signOutMessage">Запрос очистки при выходе.</param>
        <summary>Определяет URL-адрес, на который идет перенаправление при обработке запроса очистки выхода WS-Federation (wsignoutcleanup1.0), который содержит параметр wreply.</summary>
        <returns>URL-адрес, на который выполняется перенаправление.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается из <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> метод в конвейере обработки запросов для определения URL-адрес для перенаправления после обработки запроса очистки выхода WS-Federation. Он вызывается, только если сообщение содержит параметр wreply ( `signOutMessage` параметр имеет <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A> свойство, которое не является ни `null` пусто).  
  
 Реализация по умолчанию проверяет URL-адрес ответа, содержащиеся в сообщении ( <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A?displayProperty=nameWithType> свойства) для адреса службы маркеров безопасности (STS), определяемый <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> свойство. Для URL-адрес ответа функционировал должны выполняться следующие условия:  
  
1.  URL-адрес ответа — это абсолютный URL-адрес.  
  
2.  URL-адрес ответа имеет ту же схему в качестве издателя.  
  
3.  URL-адрес ответа имеет тот же порт, как издатель.  
  
4.  URL-адрес ответа имеет тот же узел, издатель, либо URL-адрес ответа указывает дочерний домен издателя.  
  
 Если все эти условия выполняются, возвращается URL-адрес ответа (ответ); в противном случае URL-адрес, определяемое <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> возвращается свойство.  
  
 Переопределите этот метод для реализации дополнительной проверки для URL-адрес ответа.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="signOutMessage" /> имеет свойство <see cref="P:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply" /> с типом <see langword="null" /> или пуст.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="signOutMessage" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlTokenFromMessage">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Извлекает выданный токен из указанного ответного сообщения входа WS Federation.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Ответное сообщение входа, из которого требуется извлечь токен. Ответ входа в систему содержит токен, выданный службой токенов безопасности.</param>
        <summary>Извлекает выданный токен из указанного ответного сообщения входа WS Federation.</summary>
        <returns>Строка, содержащая XML, представляющий выданный токен. Это элемент <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если параметр wresult в сообщении ответа входа, не существует <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult%2A> вызывается метод, чтобы попытаться получить токен, используя параметр wresultptr.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="message" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="message" /> не содержит токена. (Не содержит допустимый параметр wresult или wresultptr).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message, System.IdentityModel.Services.WSFederationSerializer federationSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message, class System.IdentityModel.Services.WSFederationSerializer federationSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage,System.IdentityModel.Services.WSFederationSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage, federationSerializer As WSFederationSerializer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message, System::IdentityModel::Services::WSFederationSerializer ^ federationSerializer);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage (message, federationSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
        <Parameter Name="federationSerializer" Type="System.IdentityModel.Services.WSFederationSerializer" />
      </Parameters>
      <Docs>
        <param name="message">Ответное сообщение входа, из которого требуется извлечь токен. Ответ входа в систему содержит токен, выданный службой токенов безопасности.</param>
        <param name="federationSerializer">Сериализатор WS-Federation, для использования для десериализации ответного сообщения входа.</param>
        <summary>Извлекает выданный токен из указанного ответного сообщения входа WS-Federation с использованием указанного сериализатора WS-Federation.</summary>
        <returns>Строка, содержащая XML, представляющий выданный токен. Это элемент <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="message" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HomeRealm">
      <MemberSignature Language="C#" Value="public string HomeRealm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HomeRealm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberSignature Language="VB.NET" Value="Public Property HomeRealm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HomeRealm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HomeRealm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение параметра whr, используемого в запросах входа WS-Federation ("wsignin1.0").</summary>
        <value>Адрес поставщика удостоверений.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр whr является необязательным. Если <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm%2A> свойству `null` или пустая строка, параметр whr не включен в запрос на вход.  
  
 Можно переопределить этот параметр при каждом запросе HTTP, добавив обработчик <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> событий. Это событие возникает непосредственно перед модуль перенаправляет службе маркеров безопасности (STS) с сообщением запроса входа запроса WS-Federation. Служба маркеров безопасности задается <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeModule">
      <MemberSignature Language="C#" Value="protected override void InitializeModule (System.Web.HttpApplication context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeModule(class System.Web.HttpApplication context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeModule (context As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeModule(System::Web::HttpApplication ^ context);" />
      <MemberSignature Language="F#" Value="override this.InitializeModule : System.Web.HttpApplication -&gt; unit" Usage="wSFederationAuthenticationModule.InitializeModule context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="context">Объект приложения HTTP, содержащий данный модуль.</param>
        <summary>Инициализирует модуль и подготавливает его для обработки событий из объекта приложения [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] модуля.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Добавляет обработчики для событий конвейера ASP.NET согласно следующей таблице.  
  
|событие|Обработчик|  
|-----------|-------------|  
|<xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>|  
|<xref:System.Web.HttpApplication.EndRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>|  
|<xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest%2A>|  
  
> [!NOTE]
>  Свойства модуля, такие как <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> , инициализируются из <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="context" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="InitializePropertiesFromConfiguration">
      <MemberSignature Language="C#" Value="protected override void InitializePropertiesFromConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializePropertiesFromConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializePropertiesFromConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializePropertiesFromConfiguration();" />
      <MemberSignature Language="F#" Value="override this.InitializePropertiesFromConfiguration : unit -&gt; unit" Usage="wSFederationAuthenticationModule.InitializePropertiesFromConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Инициализирует свойства модуля на основе конфигурации, заданной свойством <see cref="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" /> модуля.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойства модуля инициализируются с помощью эквивалентных свойств <xref:System.IdentityModel.Services.Configuration.WsFederationConfiguration> объекта, заданного параметром <xref:System.IdentityModel.Services.Configuration.FederationConfiguration.WsFederationConfiguration%2A?displayProperty=nameWithType> свойство.  
  
 Можно указать параметры в файле конфигурации через [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) элемент.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool IsSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member IsSignInResponse : System.Web.HttpRequestBase -&gt; bool&#xA;override this.IsSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.IsSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Входящий HTTP-запрос.</param>
        <summary>Получает значение, указывающее, является ли заданный запрос ответным сообщением входа WS-Federation.</summary>
        <returns>Значение <see langword="true" />, если запрос является ответным сообщением входа WS-Federation; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается из <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> метод в конвейере обработки запросов, чтобы определить сообщение отклика входа WS-Federation входящего HTTP-запроса.  
  
 Реализация по умолчанию возвращает `true` Если параметр wa имеет «wsignin1.0» и wreq и wreqptr не задаются.  
  
 Его можно переопределить в производных классах для выполнения дополнительной проверки.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="request" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public string Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Issuer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает универсальный код ресурса (URI), который указывает предполагаемого издателя токена безопасности.</summary>
        <value>Универсальный код ресурса (URI), определяющий службу токенов безопасности (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это обязательное свойство. Его необходимо задавать, если пассивный переадресации включены. Он указывает URL-адрес службы маркеров безопасности (STS) к которому должен быть выдан запросы WS-Federation.  
  
 Можно переопределить этот параметр при каждом запросе HTTP, добавив обработчик <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> событий. Это событие возникает непосредственно перед модуль перенаправляет службе маркеров безопасности (STS) с сообщением запроса входа запроса WS-Federation. Служба маркеров безопасности задается <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Предпринята попытка присвоить свойству значение <see langword="null" /> или пустую строку.  
  
-или- 
Предпринята попытка присвоить свойству значение, которое не является допустимым абсолютным универсальным кодом ресурса (URI).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticateRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticateRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthenticateRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticateRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthenticateRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Источник события. Это будет объект <see cref="T:System.Web.HttpApplication" />.</param>
        <param name="args">Данные для события.</param>
        <summary>Обрабатывает событие <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> из конвейера [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> Метод реализует конвейер обработки запросов WS-Federation. Он добавляется <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> событие в [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] продаж по <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule%2A> метод.  
  
 Метод выполняет следующие операции:  
  
1.  Вызовы <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> метод, чтобы определить, получен ли сообщение отклика входа WS-Federation («wsignin1.0»). При ответе запроса очистки выхода WS-Federation («wsignoutcleanup1.0»), <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> обрабатывает сообщение, завершает запрос и перенаправляет клиент в соответствии с параметрами WS-Federation в запросе. Если сообщение отклика входа или запроса очистки выхода, модуль просто возвращает; в противном случае он выполняет следующие действия, чтобы обработать ответ входа в систему.  
  
2.  Вызовы <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29> метод для десериализации <xref:System.IdentityModel.Tokens.SecurityToken> объекта из запроса.  
  
3.  Вызывает событие <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>. Можно отменить дальнейшую обработку или изменить полученный маркер безопасности в обработчике этого события. Обработчик обычно используется для изменения <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A?displayProperty=nameWithType> или <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A?displayProperty=nameWithType> свойства.  
  
4.  Проверяет маркер безопасности и создает <xref:System.Security.Claims.ClaimsPrincipal> объекта на основе утверждений в маркере безопасности.  
  
5.  Вызывает событие <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>. Можно отменить дальнейшую обработку или изменить субъект утверждений в обработчике этого события.  
  
6.  Использует модуль проверки подлинности настроенном сеансе (SAM) для создания <xref:System.IdentityModel.Tokens.SessionSecurityToken> объекта. (Настроенный СЭМ является <xref:System.IdentityModel.Services.SessionAuthenticationModule> объект, возвращаемый <xref:System.IdentityModel.Services.FederatedAuthentication.SessionAuthenticationModule%2A?displayProperty=nameWithType> свойство.) Токен сеанса создается с помощью субъекта утверждений, возвращенного на шаге 5. <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A?displayProperty=nameWithType> И <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType> свойства задаются с помощью <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> и <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> свойства <xref:System.IdentityModel.Tokens.SecurityToken> , возвращенное на шаге 3 и проверяются на соответствие текущего времени и времени жизни маркера, определяется либо <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A>или <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> свойство <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> объекта в коллекции обработчиков токенов, используемых WSFAM. Время существования маркера в обработчик токенов сеанса можно задать в конфигурации с помощью [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) элемент. Примечание. <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> Свойство обработчик файлов cookie, настроенное для SAM не используется.  
  
7.  Вызовы <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> метода с маркером сеанса для записи файла cookie сеанса. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> Вызывает первый метод <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> событий. Можно изменить свойства маркера сеанса или изменить ли файл cookie должен сохраняться в обработчике этого события. После возникновения события метод затем записывает файл cookie с помощью SAM.  
  
    > [!NOTE]
    >  <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> Набора в конфигурации не используется для записи файла cookie.  
  
8.  Вызовы <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn%2A> метод для вызова <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn> событий.  
  
9. Вызовы <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> метод, RP страницу, на который перенаправляется клиент. По умолчанию этот метод считывает URL-адрес возврата из параметра wctx в ответ входа в систему. Дополнительные сведения о том, как WSFAM хранит URL-адрес возврата, см. в разделе <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizationFailed">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizationFailed (System.IdentityModel.Services.AuthorizationFailedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizationFailed(class System.IdentityModel.Services.AuthorizationFailedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed(System.IdentityModel.Services.AuthorizationFailedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizationFailed (e As AuthorizationFailedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizationFailed(System::IdentityModel::Services::AuthorizationFailedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit&#xA;override this.OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthorizationFailed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.AuthorizationFailedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Данные для события.</param>
        <summary>Вызывает событие <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызывается из <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> делегата обработчика событий, когда не удалось выполнить авторизацию.  
  
 Инициализирует <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> свойство перед порождением <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> событий для предотвращения циклических перенаправления, если пользователь уже прошел проверку подлинности. Если пользователь уже прошел проверку подлинности, с которым инициализируется свойство `false` во избежание перенаправляет; в противном случае она инициализируется `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnEndRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnEndRequest : obj * EventArgs -&gt; unit&#xA;override this.OnEndRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnEndRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Источник события. Это будет объект <see cref="T:System.Web.HttpApplication" />.</param>
        <param name="args">Данные для события.</param>
        <summary>Обрабатывает событие <see cref="E:System.Web.HttpApplication.EndRequest" /> из конвейера [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие игнорируется, если <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> свойство `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostAuthenticateRequest(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostAuthenticateRequest (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostAuthenticateRequest(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPostAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnPostAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnPostAuthenticateRequest (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Источник события. Это будет объект <see cref="T:System.Web.HttpApplication" />.</param>
        <param name="e">Данные для события.</param>
        <summary>Обрабатывает событие <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> из конвейера [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию это пустой обработчик.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="protected virtual void OnRedirectingToIdentityProvider (System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRedirectingToIdentityProvider(class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider(System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRedirectingToIdentityProvider (e As RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRedirectingToIdentityProvider(System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit&#xA;override this.OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnRedirectingToIdentityProvider e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Данные для события.</param>
        <summary>Вызывает событие <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionSecurityTokenCreated(class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionSecurityTokenCreated (args As SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionSecurityTokenCreated(System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit&#xA;override this.OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSessionSecurityTokenCreated args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Данные для события.</param>
        <summary>Вызывает событие <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedIn">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedIn (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedIn(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedIn (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedIn(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedIn : EventArgs -&gt; unit&#xA;override this.OnSignedIn : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedIn args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Данные для события.</param>
        <summary>Вызывает событие <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedOut (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedOut(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedOut (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedOut(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedOut : EventArgs -&gt; unit&#xA;override this.OnSignedOut : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Данные для события.</param>
        <summary>Вызывает событие <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызывается из <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> метод сразу после удаления сеанса.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignInError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignInError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignInError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignInError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignInError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignInError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignInError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Данные для события.</param>
        <summary>Вызывает событие <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSigningOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSigningOut(class System.IdentityModel.Services.SigningOutEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSigningOut (args As SigningOutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSigningOut(System::IdentityModel::Services::SigningOutEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit&#xA;override this.OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSigningOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SigningOutEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Данные для события.</param>
        <summary>Вызывает событие <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызывается из <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> метод непосредственно перед удалением сеанса.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignOutError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignOutError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignOutError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignOutError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignOutError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Данные для события.</param>
        <summary>Вызывает событие <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызывается из <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> метод при возникновении исключения во время обработки.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PassiveRedirectEnabled">
      <MemberSignature Language="C#" Value="public bool PassiveRedirectEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PassiveRedirectEnabled" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PassiveRedirectEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PassiveRedirectEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PassiveRedirectEnabled : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, разрешено ли модулю инициировать перенаправления протокола WS-Federation.</summary>
        <value>Значение <see langword="true" /> для включения перенаправлений; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Модуль не будет инициировать перенаправления протокола WS-Federation, если этот режим не включена. Если это свойство имеет `true`, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> свойство должно иметь значение URL-адрес из маркеров безопасности службы (STS) для перенаправления вызывающего объекта.  
  
> [!WARNING]
>  Код приложения может выдавать запросов входа WS-Federation явным образом с помощью <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> метод, независимо от значения <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      </Docs>
    </Member>
    <Member MemberName="PersistentCookiesOnPassiveRedirects">
      <MemberSignature Language="C#" Value="public bool PersistentCookiesOnPassiveRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistentCookiesOnPassiveRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistentCookiesOnPassiveRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentCookiesOnPassiveRedirects : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, выдается ли после успешной аутентификации постоянный файл cookie сеанса.</summary>
        <value>Значение <see langword="true" /> для создания постоянного сеансового файла cookie; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно переопределить этот параметр при каждом запросе HTTP, добавив обработчик <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> событий. Это событие инициируется при обработке ответа входа WS-Federation сообщения от службы маркеров безопасности (STS), конвейер обработки запросов.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public string Policy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Policy" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberSignature Language="VB.NET" Value="Public Property Policy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Policy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Policy : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение параметра wp, используемого в запросах входа WS-Federation ("wsignin1.0").</summary>
        <value>URL, определяющий используемую политику.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр wp является необязательным. Если <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy%2A> свойству `null` или пустая строка, параметр wp не включен в запрос на вход.  
  
 Можно переопределить этот параметр при каждом запросе HTTP, добавив обработчик <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> событий. Это событие возникает непосредственно перед модуль перенаправляет службе маркеров безопасности (STS) с сообщением запроса входа запроса WS-Federation. Служба маркеров безопасности задается <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение параметра wtrealm, используемого для запросов входа WS-Federation ("wsignin1.0").</summary>
        <value>Универсальный код ресурса (URI), идентифицирующий проверяющую сторону (RP) для службы токенов безопасности (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это обязательное свойство для запросов входа WS-Federation. Его необходимо задавать, если пассивный переадресации включены. URI идентифицирует поставщика Ресурсов службы маркеров безопасности. (Для идентификации службы STS для RP, см. в разделе <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> свойство).  
  
 Значение этого свойства сериализуется как параметр строки запроса wtrealm в протоколе WS-Federation. Он идентифицирует поставщика Ресурсов службы маркеров безопасности. Он используется службой маркеров безопасности для решить, какие политики для применения для выдачи маркеров и где можно перенаправить пользователя после выдачи маркера. (Для идентификации службы STS для RP, см. в разделе <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>.)  
  
 Можно переопределить этот параметр при каждом запросе HTTP, добавив обработчик <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> событий. Это событие возникает непосредственно перед модуль перенаправляет службе маркеров безопасности (STS) с сообщением запроса входа запроса WS-Federation. Служба маркеров безопасности задается <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Предпринята попытка присвоить свойству значение <see langword="null" /> или пустую строку.  
  
-или- 
Предпринята попытка присвоить свойству значение, которое не является допустимым абсолютным универсальным кодом ресурса (URI).</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />
      <MemberSignature Language="VB.NET" Value="Public Event RedirectingToIdentityProvider As EventHandler(Of RedirectingToIdentityProviderEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^&gt; ^ RedirectingToIdentityProvider;" />
      <MemberSignature Language="F#" Value="member this.RedirectingToIdentityProvider : EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " Usage="member this.RedirectingToIdentityProvider : System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает, когда модуль собирается перенаправить пользователя на поставщика удостоверений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать и изменять запрос входа WS-Federation через <xref:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.SignInRequestMessage%2A?displayProperty=nameWithType> свойство. Например, можно изменить <xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A> свойство в сообщении входа в систему, чтобы изменить поставщика удостоверений, к которому будет перенаправлен запрос. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Событий событие является отменяемым, а также задать <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойства `true` отменить перенаправления.  
  
 События из внутри <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> метод посредством вызова <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> метод.  
  
 Для обработки этого события в приложении ASP.NET, создайте метод с именем `WSFederationAuthentication_RedirectingToIdentityProvider` в файле global.asax.  
  
   
  
## Examples  
 Ниже показано, как добавить обработчик для <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> событие в `Application_Init` событий в файле global.asax. Код взят из `FederationForWebApps` образца. Дополнительные сведения об этом образце см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 В следующем коде показано обработчик <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> событий в в файле global.asax для RP. Код проверяет ли входящий HTTP-запрос содержит параметр whr, и если да, он устанавливает этот параметр для запроса входа WS-Federation, отправляемом в службу маркеров безопасности. Код взят из `FederationForWebApps` образца. Дополнительные сведения об этом образце см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 В следующем коде показано обработчик <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> событий в в файле global.asax поставщика федерации STS. Код проверяет, содержит ли входящего HTTP-запроса параметр whr. Если запрос содержит параметр whr, клиент будет перенаправлен к IP-STS для входа в систему; в противном случае клиент направляется на страницу обнаружения домашней области выберите IP-STS, по которому для входа. Код взят из `FederationForWebApps` образца. Дополнительные сведения об этом образце см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToIdentityProvider">
      <MemberSignature Language="C#" Value="public virtual void RedirectToIdentityProvider (string uniqueId, string returnUrl, bool persist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToIdentityProvider(string uniqueId, string returnUrl, bool persist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToIdentityProvider (uniqueId As String, returnUrl As String, persist As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToIdentityProvider(System::String ^ uniqueId, System::String ^ returnUrl, bool persist);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToIdentityProvider : string * string * bool -&gt; unit&#xA;override this.RedirectToIdentityProvider : string * string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.RedirectToIdentityProvider (uniqueId, returnUrl, persist)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="persist" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">WSFAM хранит это значение в параметре wctx запроса входа WS-Federation; однако этот модуль не использует его при обработке запросов входа и ответных сообщений входа. Можно задать любое значение. Не обязательно должен быть уникальным. Дополнительные сведения см. в описании метода <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />.</param>
        <param name="returnUrl">URL-адрес, на который модуль должен вернуться после аутентификации.</param>
        <param name="persist">WSFAM хранит это значение в параметре wctx запроса входа WS-Federation; однако этот модуль не использует его при обработке запросов входа и ответных сообщений входа. Можно задать значение <see langword="true" /> или <see langword="false" />.</param>
        <summary>Перенаправляет пользователя на службу токенов безопасности (STS), указанную свойством <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />, чтобы получить токен безопасности с помощью протокола WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> Метод вызывается из <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> метод, когда выдается запрос на веб-странице, представленные проверяющей стороной (RP) или из <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> делегата обработчика событий для выполнения пассивного перенаправления на поставщика удостоверений Ошибка авторизации.  
  
 Параметры, передаваемые в метод используются для создания параметра wctx сообщения. Единственное значимое параметр `returnUrl` параметр. Указывает URL-адрес, что RP должны направлять в браузере после успешной проверки подлинности. Не следует путать с параметром wreply сообщения, определяемый параметром <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> свойство и который обеспечивает адрес в RP, к которому служба маркеров безопасности (STS) должны направлять его ответа.  
  
 Метод выполняет следующие операции:  
  
1.  Вызывает <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties%2A> метод, чтобы гарантировать, что модуль может выдавать допустимым запросом входа в систему.  
  
2.  Вызывает <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> метод, чтобы создать запрос на вход из свойства, настроенные для модуля.  
  
3.  Вызывает <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> метод для вызова <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> событий. Можно отменить перенаправления или измените текст сообщения в запросе на вход в обработчике событий для данного события.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Параметр <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> имеет значение <see langword="null" /> или является пустой строкой.  
  
-или- 
 Параметр <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> имеет значение <see langword="null" /> или является пустой строкой.  
  
-или- 
Свойство <see cref="P:System.Web.HttpContext.Current" /> имеет значение <see langword="null" /> или пусто.  
  
-или- 
Свойство <see cref="P:System.Web.HttpContext.Response" /> контекста, возвращаемого свойством <see cref="P:System.Web.HttpContext.Current" />, имеет значение <see langword="null" /> или пусто.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public string Reply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Reply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Property Reply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Reply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Reply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение параметра wreply, используемого в запросах входа WS-Federation ("wsignin1.0").</summary>
        <value>URL-адрес, указывающий адрес, по которому приложение проверяющей стороны (RP) хотел бы получить ответы от службы токенов безопасности (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр wreply является необязательным. Если <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> свойству `null` или пустая строка, параметр wreply не включен в запрос на вход.  
  
 Параметр wreply используется службой маркеров безопасности для выбора перенаправить пользователя после выдачи маркера. Не рекомендуется для STS слепо использовать этот адрес для перенаправления пользователя, так как такие перенаправления присутствуют уязвимости системы безопасности. Адрес ответа должен быть проверен STS (возможно, сравнение с набора предварительно настроенных ответа адресов для целей или другого метода), чтобы убедиться в том, что ответ отправляется понять расположение хорошо известными и надежными.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Предпринята попытка присвоить свойству значение, которое не является допустимым абсолютным универсальным кодом ресурса (URI).</exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public string Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Request { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Request : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение параметра wreq, используемого в запросах входа WS-Federation ("wsignin1.0").</summary>
        <value>Запрос выдачи токена, выраженный в виде элемента <see langword="&lt;wst:RequestSecurityToken&gt;" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр wreq является необязательным. Если <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Request%2A> свойству `null` или пустая строка, параметр wreq не включен в запрос на вход.  
  
 Можно переопределить этот параметр при каждом запросе HTTP, добавив обработчик <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> событий. Это событие возникает непосредственно перед модуль перенаправляет службе маркеров безопасности (STS) с сообщением запроса входа запроса WS-Federation. Служба маркеров безопасности задается <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPtr">
      <MemberSignature Language="C#" Value="public string RequestPtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPtr" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPtr As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPtr { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestPtr : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение параметра wreqptr, используемого в запросах входа WS-Federation ("wsignin1.0").</summary>
        <value>URL-адрес, указывающий расположение запроса выдачи токена, выраженного элементом <see langword="&lt;wst:RequestSecurityToken&gt;" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр wreqptr является необязательным. Если <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr%2A> свойству `null` или пустая строка, параметр wreq не включен в запрос на вход.  
  
 Можно переопределить этот параметр при каждом запросе HTTP, добавив обработчик <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> событий. Это событие возникает непосредственно перед модуль перенаправляет службе маркеров безопасности (STS) с сообщением запроса входа запроса WS-Federation. Служба маркеров безопасности задается <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Предпринята попытка присвоить свойству значение, которое не является допустимым абсолютным универсальным кодом ресурса (URI).</exception>
      </Docs>
    </Member>
    <Member MemberName="RequireHttps">
      <MemberSignature Language="C#" Value="public bool RequireHttps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireHttps" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireHttps As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireHttps { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireHttps : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, которое определяет, должно ли взаимодействие со службой токенов безопасности (STS) осуществляться по протоколу HTTPS.</summary>
        <value>Значение <see langword="true" />, если связь со службой токенов безопасности должна быть защищена с помощью протокола HTTPS; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public string Resource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Resource" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberSignature Language="VB.NET" Value="Public Property Resource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Resource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resource : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение параметра wres, используемого в запросах входа WS-Federation ("wsignin1.0").</summary>
        <value>Универсальный код ресурса (URI), определяющий ресурс, доступ к которому осуществлялся, проверяющую сторону (RP), для службы токенов безопасности (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр wtrealm, которое задается параметром <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> свойства, следует использовать вместо этого параметра.  
  
 Параметр wres является необязательным. Если <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource%2A> свойству `null` или пустая строка, параметр wres не включен в запрос на вход.  
  
 Можно переопределить этот параметр при каждом запросе HTTP, добавив обработчик <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> событий. Это событие возникает непосредственно перед модуль перенаправляет службе маркеров безопасности (STS) с сообщением запроса входа запроса WS-Federation. Служба маркеров безопасности задается <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenReceived As EventHandler(Of SecurityTokenReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenReceivedEventArgs ^&gt; ^ SecurityTokenReceived;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenReceived : EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " Usage="member this.SecurityTokenReceived : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает при получении токена безопасности от службы токенов безопасности (STS).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно добавить обработчик событий, чтобы изменить токен перед его проверке. Событий обработчик доступны маркер безопасности через <xref:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SecurityToken%2A?displayProperty=nameWithType> свойство. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived> Событий событие является отменяемым, можно задать <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойства `true` в обработчике событий, чтобы прервать обработку сообщения ответа входа WS-Federation.  
  
 Это событие вызывается из внутри <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> делегата обработчика событий при обработке сообщения ответа входа WS-Federation («wsignin1.0»), полученного от службы маркеров безопасности (STS). Оно возникает сразу после десериализации маркера безопасности из параметр wresult или параметр wresultptr в сообщении ответа входа в систему, но до проверки маркера безопасности.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenValidated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenValidated As EventHandler(Of SecurityTokenValidatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenValidatedEventArgs ^&gt; ^ SecurityTokenValidated;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenValidated : EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " Usage="member this.SecurityTokenValidated : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает после того, как полученный от службы токенов безопасности (STS) токен безопасности был проверен, однако до того, как будет создан токен безопасности сеанса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно добавить обработчик событий для изменения участника, созданные при обработке сообщения ответа входа WS-Federation от службы маркеров безопасности (STS), перед их использованием для создания маркера сеанса. В событии обработчик, доступны через участника <xref:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.ClaimsPrincipal%2A> свойство. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated> Событий событие является отменяемым, можно задать <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойства `true` в обработчике событий, чтобы прервать обработку сообщения ответа входа WS-Federation.  
  
 Это событие вызывается из внутри <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> делегата обработчика событий при обработке сообщения ответа входа WS-Federation («wsignin1.0»), полученного от службы маркеров безопасности (STS). Это событие возникает сразу после маркера безопасности, который был десериализован из параметр wresult и параметр wresultptr в сообщении ответа на вход был проверен безопасности сеанса создается маркер.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionSecurityTokenCreated As EventHandler(Of SessionSecurityTokenCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^&gt; ^ SessionSecurityTokenCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionSecurityTokenCreated : EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " Usage="member this.SessionSecurityTokenCreated : System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает при создании токена безопасности сеанса из токена безопасности, полученного от службы токенов безопасности (STS).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно добавить обработчик событий, чтобы изменить токен сеанса, прежде чем он используется для задания участника потока и записывается в файл cookie сеанса. В событии обработчик, доступны токен сеанса через <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> свойство. Можно указать необходимость записи файла cookie сеанса, задав <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> свойство.  
  
 Это событие вызывается из внутри <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> делегата обработчика событий при обработке сообщения ответа входа WS-Federation («wsignin1.0»), полученного от службы маркеров безопасности (STS). Это событие возникает сразу после маркера безопасности, который был десериализован из параметр wresult или параметр wresultptr в сообщении ответа на вход был проверен и перед утверждения субъект принимает значение на <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> (и на <xref:System.Web.HttpContext.User%2A> свойство <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>).  
  
> [!IMPORTANT]
>  Для работы сеансов в режиме ссылки Корпорация Майкрософт рекомендует обработчик для <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> событий в файле global.asax.cs и параметр <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> переданный в токене <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> свойство. Это гарантирует, что маркер сеанса работать в режиме ссылки для каждого запроса и имеет больший приоритет, чем просто задавать <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> свойства модуля аутентификации сеанса.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalAndWriteSessionToken">
      <MemberSignature Language="C#" Value="public void SetPrincipalAndWriteSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPrincipalAndWriteSessionToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPrincipalAndWriteSessionToken (sessionToken As SessionSecurityToken, isSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPrincipalAndWriteSessionToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken, bool isSession);" />
      <MemberSignature Language="F#" Value="member this.SetPrincipalAndWriteSessionToken : System.IdentityModel.Tokens.SessionSecurityToken * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken (sessionToken, isSession)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="isSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sessionToken">Токен безопасности сеанса, созданный из ответного сообщения входа WS-Federation, полученного от службы STS.</param>
        <param name="isSession">Значение <see langword="true" /> для записи файла cookie, который представляет сеанс, включенный в отклик; в противном случае — значение <see langword="false" />.</param>
        <summary>Задает субъект потока и (опционально) записывает файл cookie сеанса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызывается из реализации в конвейер обработки запросов <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> делегата обработчика событий. Этот метод выполняет следующие функции:  
  
1.  Вызывает <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated%2A> метод для вызова <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> событий. Это событие можно использовать для изменения токен сеанса, прежде чем он используется для задания участника потока и записываемый файл cookie сеанса и укажите, должен быть записан файл cookie сеанса.  
  
2.  Вызывает <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> метод в модуле проверки подлинности настроенном сеансе (<xref:System.IdentityModel.Services.SessionAuthenticationModule>) для задания участника потока и при необходимости записи файла cookie сеанса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="sessionToken" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SignedIn">
      <MemberSignature Language="C#" Value="public event EventHandler SignedIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedIn" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedIn As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedIn;" />
      <MemberSignature Language="F#" Value="member this.SignedIn : EventHandler " Usage="member this.SignedIn : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает после того, как пользователь вошел в систему.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если запрос отправляется на страницу входа, элемент управления на странице будет вызывать это событие, а не этот модуль.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedOut">
      <MemberSignature Language="C#" Value="public event EventHandler SignedOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedOut As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedOut;" />
      <MemberSignature Language="F#" Value="member this.SignedOut : EventHandler " Usage="member this.SignedOut : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает сразу после удаления сеанса во время выхода из системы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие вызывается посредством вызова <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> метод из <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> метода во время выход из сеанса на проверяющей стороне (RP). Событие не возникает, когда это федеративный выход через <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> метод.  
  
 Вы можете добавить обработчик событий для любой дополнительной обработки, необходимые для приложения, после удаления файла cookie сеанса.  
  
 Это событие вызывается для каждого сеанса не гарантируется. Файлы cookie могут быть удалены на стороне клиента, например, чтобы никогда не возникнет это событие.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public virtual void SignIn (string ControlId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignIn(string ControlId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignIn (ControlId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignIn(System::String ^ ControlId);" />
      <MemberSignature Language="F#" Value="abstract member SignIn : string -&gt; unit&#xA;override this.SignIn : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignIn ControlId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlId">WSFAM хранит это значение в параметре wctx запроса входа WS-Federation; однако этот модуль не использует его при обработке запросов входа и ответных сообщений входа. Можно задать любое значение. Не обязательно должен быть уникальным. Дополнительные сведения см. в описании метода <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />.</param>
        <summary>Выполняет вход в службу токенов безопасности (STS) через протокол WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация по умолчанию вызывает <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> метод для выполнения входа в систему.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInContext">
      <MemberSignature Language="C#" Value="public string SignInContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInContext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInContext : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение контекста приложения для включения в параметр wctx в запросы входа в WS-Federation.</summary>
        <value>Значение контекста приложения для включения в параметр wctx для запросов входа.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> вызова метода, создаваемое сообщение входа содержит параметр wctx, имеет следующий формат: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`. Значение <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> хранится в `cx` параметра. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> может вызываться непосредственно из программного кода. Он также вызывается при выполнении WSFAM пассивного перенаправления, а также при любом <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> метод или <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> метод вызывается кодом приложения.  
  
 Несмотря на то, что WSFAM хранит <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> значение в сообщениях в запросе на вход, если значение используется в приложении во время обработки ответа необходимо предоставить логику для их извлечения из параметра wctx в сообщение отклика входа.  
  
 Дополнительные сведения о формате и обработку параметра wctx см. в разделе <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SignInError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignInError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignInError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignInError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignInError;" />
      <MemberSignature Language="F#" Value="member this.SignInError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignInError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Создается при возникновении ошибки во время входа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если запрос отправляется на страницу входа, элемент управления на странице будет вызывать это событие, а не этот модуль.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningOut">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SigningOut As EventHandler(Of SigningOutEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SigningOutEventArgs ^&gt; ^ SigningOut;" />
      <MemberSignature Language="F#" Value="member this.SigningOut : EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " Usage="member this.SigningOut : System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает перед удалением сеанса во время выхода из системы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие вызывается посредством вызова <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> метод из <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> метода во время выход из сеанса на проверяющей стороне (RP). Событие не возникает, когда это федеративный выход через <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> метод.  
  
 Можно добавить обработчик событий для дополнительной обработки, необходимые для приложения, прежде чем будет удален файл cookie сеанса. Можно прочитать <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated*> свойство в обработчике событий для определения выхода, является ли результат получения сообщения запроса очистки выхода WS-Federation («wsignoutcleanup1.0») от службы маркеров безопасности (STS), или она была начата в RP.  
  
 Это событие вызывается для каждого сеанса не гарантируется. Файлы cookie могут быть удалены на стороне клиента, например, чтобы никогда не возникнет это событие.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInQueryString">
      <MemberSignature Language="C#" Value="public string SignInQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку запроса, которая содержит любые дополнительные параметры, которые будут отправляться в запросах входа WS-Federation ("wsignin1.0").</summary>
        <value>Фрагмент URL-адреса, который содержит дополнительные параметры сообщения в следующем формате: <c>параметр1 = значение1&amp;param2 = значение2&amp;paramN = valueN</c>. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство можно использовать для отправки Дополнительные параметры в запрос на вход. Это будут параметры конкретного приложения, которые не являются одним из параметров, которые определяются протокол WS-Federation. Чтобы удалить дополнительные параметры из запроса присвойте свойству пустую строку.  
  
 Можно переопределить этот параметр при каждом запросе HTTP, добавив обработчик <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> событий. Это событие возникает непосредственно перед модуль перенаправляет службе маркеров безопасности (STS) с сообщением запроса входа запроса WS-Federation. Служба маркеров безопасности задается <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Предпринята попытка задать для свойства значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignOut">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Выполняет выход из текущего сеанса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Удаляет текущий сеанс.  
  
 Нет запроса выхода («wsignout1.0») отправляется службе маркеров безопасности (STS). Для выхода в STS, с помощью протокола WS-Federation, используйте <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut();" />
      <MemberSignature Language="F#" Value="abstract member SignOut : unit -&gt; unit&#xA;override this.SignOut : unit -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет выход из текущего сеанса и запрашивает перенаправление обратно на URL-адрес, указанный в текущем HTTP-запросе.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Удаляет текущий сеанс и перенаправляет браузер обратно в URL-адрес, указанный в текущего HTTP-запроса.  
  
 Вызывает <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%29?displayProperty=nameWithType> метод с `redirectUrl` параметр значение URL-адрес текущего запроса.  
  
 Нет запроса выхода («wsignout1.0») отправляется службе маркеров безопасности (STS). Для выхода в STS, с помощью протокола WS-Federation, используйте <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (bool isIPRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(bool isIPRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (isIPRequest As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(bool isIPRequest);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : bool -&gt; unit&#xA;override this.SignOut : bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut isIPRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isIPRequest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isIPRequest">Значение <see langword="true" />, если запрос был инициирован IP-STS через сообщение запроса очистки выхода WS-Federation ("wsignoutcleanup1.0"); в противном случае значение <see langword="false" />.</param>
        <summary>Выполняет выход из текущего сеанса и вызывает соответствующие события.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод выполняет фактическую работу удаление текущего сеанса и вызова соответствующих событий выхода. Метод выполняет следующие функции:  
  
1.  Вызывает <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> метод для вызова <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut> событий. Обработчик событий может предоставить все необходимые обработку до удаления сеанса. <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated%2A?displayProperty=nameWithType> Свойству согласно `isIPRequest` параметра.  
  
2.  Вызовы <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> метод на диспетчер проверки подлинности текущего сеанса, чтобы удалить файл cookie сеанса.  
  
     Вызывает <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> метод для вызова <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut> событий.  
  
3.  При возникновении ошибки во время обработки выхода, вызывает <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> метод для вызова <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> событий. Обработчик событий может отменить обработку и исключение возвращается вызывающему объекту <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>  
  
 Можно вызвать <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A?displayProperty=nameWithType> метод с `isIPRequest` набор параметров `false` выхода из сеанса, не выполняя перенаправление. В конечном счете вызывается для всех других перегруженных <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> методы (с `isIPRequest` параметру присвоить `false`) для выполнения выхода обработки. Метод вызывается из <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> метод с `isIPRequest` набор параметров `true` выйти из сеанса, когда он обрабатывает сообщение очистки выхода WS-Federation («wsignoutcleanup1.0»).  
  
 Нет запроса выхода («wsignout1.0») отправляется службе маркеров безопасности (STS). Для выхода в STS, с помощью протокола WS-Federation, используйте <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string -&gt; unit&#xA;override this.SignOut : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut redirectUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">URL-адрес, на который должен перенаправляться браузер после удаления сеанса.</param>
        <summary>Выполняет выход из текущего сеанса и запрашивает перенаправление обратно на указанный URL-адрес.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Удаляет текущий сеанс и перенаправляет браузер обратно на указанный URL-адрес.  
  
 Вызывает <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> метод с `redirectUrl` параметра и с `initiateSignoutCleanup` задать `false`.  
  
 Нет запроса выхода («wsignout1.0») отправляется службе маркеров безопасности (STS). Для выхода в STS, с помощью протокола WS-Federation, используйте <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="redirectUrl" /> не является допустимым URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl, bool initiateSignoutCleanup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String, initiateSignoutCleanup As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string * bool -&gt; unit&#xA;override this.SignOut : string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut (redirectUrl, initiateSignoutCleanup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
        <Parameter Name="initiateSignoutCleanup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">URL-адрес, на который должен перенаправляться браузер после выхода.</param>
        <param name="initiateSignoutCleanup">Всегда имеет значение <see langword="false" />. Присвоение значения <see langword="true" /> данному параметру не поддерживается.</param>
        <summary>Выполняет выход из текущего сеанса и запрашивает перенаправление обратно на указанный URL-адрес.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Удаляет текущий сеанс и перенаправляет браузер обратно на указанный URL-адрес.  
  
 Вызывает <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> метод с `initiateSignoutCleanup` набор параметров `false`.  
  
 Нет запроса выхода («wsignout1.0») отправляется службе маркеров безопасности (STS). Для выхода в STS, с помощью протокола WS-Federation, используйте <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="redirectUrl" /> не является допустимым URI.</exception>
        <exception cref="T:System.NotImplementedException">Класс <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> вызывает это исключение, если параметр <paramref name="initiateSignoutCleanup" /> имеет значение <see langword="true" />. Не устанавливайте этот параметр на <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignOutError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignOutError;" />
      <MemberSignature Language="F#" Value="member this.SignOutError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignOutError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Создается при возникновении ошибки во время выхода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие вызывается посредством вызова <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> метод из <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> метода во время выход из сеанса на проверяющей стороне (RP). Событие не возникает, когда это федеративный выход через <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> метод.  
  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> Событие является событием, которое можно отменить. Можно задать <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойство в обработчике событий, чтобы предотвратить возникновение исключения, вызвавшего ошибку, возвращаемых для инициатора выхода.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutQueryString">
      <MemberSignature Language="C#" Value="public string SignOutQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку запроса, которая содержит любые дополнительные параметры, которые будут отправляться в запросах выхода WS-Federation ("wsignout1.0").</summary>
        <value>Фрагмент URL-адреса, который содержит дополнительные параметры сообщения в следующем формате: <c>параметр1 = значение1&amp;param2 = значение2&amp;paramN = valueN</c>. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию это свойство инициализируется из `signOutQueryString` атрибут [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) элемент в файле конфигурации. Она должна содержать все параметры конкретного приложения, которые будут отправляться в запрос выхода WS-Federation. Чтобы удалить эти параметры, можно задать свойства на пустую строку.  
  
 WSFAM напрямую не используют это свойство; Тем не менее, можно передать его в <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> метод, чтобы создать полный URL выхода WS-Federation, можно использовать в коде.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Предпринята попытка задать для свойства значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutReply">
      <MemberSignature Language="C#" Value="public string SignOutReply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutReply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutReply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutReply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutReply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение параметра wreply, используемого в запросах выхода WS-Federation ("wsignout1.0").</summary>
        <value>URL-адрес, на который служба токенов безопасности (STS) должна перенаправлять клиент во время пассивного выхода через протокол WS-Federation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию это свойство инициализируется из `signOutReply` атрибут [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) элемент в файле конфигурации. Он предназначен для представления параметр wreply в запросе выхода WS-Federation.  
  
 Параметр wreply является необязательным. Если <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply%2A> свойству `null` или пустая строка, параметр wreply не включен в запрос выхода.  
  
 WSFAM напрямую не используют это свойство. Тем не менее, можно передать его в <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> метод, когда выполнение выхода WS-Federation с кода, или вы можете передать его в <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> метод для создания полного выхода URL-адреса WS-Federation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyProperties">
      <MemberSignature Language="C#" Value="public void VerifyProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyProperties();" />
      <MemberSignature Language="F#" Value="member this.VerifyProperties : unit -&gt; unit" Usage="wSFederationAuthenticationModule.VerifyProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Проверяет, являются ли свойства <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> и <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> непустыми, и совместимы ли с HTTPS универсальные коды ресурса (URI), заданные для свойств <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> и <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />, если свойство <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> имеет значение <see langword="true" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Параметр <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> имеет значение <see langword="null" /> или является пустой строкой.  
  
-или- 
 Параметр <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> имеет значение <see langword="null" /> или является пустой строкой.  
  
-или- 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> имеет значение <see langword="true" /> и <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> не совместимы с HTTPS.  
  
-или- 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> имеет значение <see langword="true" /> и <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> не совместимы с HTTPS.</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlDictionaryReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDictionaryReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ XmlDictionaryReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDictionaryReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый при десериализации ответных сообщений входа WS-Federation для получения токена, выданного службой токенов безопасности (STS).</summary>
        <value>Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый при десериализации ответных сообщений входа WS-Federation для получения токена, выданного службой токенов безопасности (STS).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Предпринята попытка задать для свойства значение <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>