<Type Name="UdpAnySourceMulticastClient" FullName="System.Net.Sockets.UdpAnySourceMulticastClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d9973a0281b49cd01098b15a0dd062292d208534" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55374592" /></Metadata><TypeSignature Language="C#" Value="public class UdpAnySourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpAnySourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpAnySourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpAnySourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpAnySourceMulticastClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpAnySourceMulticastClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Приемник клиента для многоадресного трафика, отправляемого из любого источника. Этот трафик также называется многоадресной рассылкой, не зависящей от отправителя (Any Source Multicast, ASM) или стандартной многоадресной рассылкой Интернета (Internet Standard Multicast, ISM).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpAnySourceMulticastClient (System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpAnySourceMulticastClient(System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpAnySourceMulticastClient : System.Net.IPAddress * int -&gt; System.Net.Sockets.UdpAnySourceMulticastClient" Usage="new System.Net.Sockets.UdpAnySourceMulticastClient (groupAddress, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="groupAddress">Адрес группы многоадресной рассылки, на который должен подписаться данный получатель.</param>
        <param name="localPort">Локальный порт, к которому должен привязываться данный получатель.</param>
        <summary>Создает новый UDP-клиент <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />, который может подписаться на адрес группы и принимать датаграммы от любого отправителя.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> Конструктор связывает сокет многоадресной рассылки UDP с групповой адрес и порт, но не связать либо в противном случае использовать сокета.  
  
 `groupAddress` Параметр может быть IPv4 или IPv6 многоадресной рассылки адрес.  
  
 `localPort` Параметр не должен задавать порт меньше 1024.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="groupAddress" /> — <see langword="null" />. ссылка</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="localPort" /> меньше нуля -или- параметр <paramref name="localPort" /> больше 65 535.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginJoinGroup : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginJoinGroup (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Метод обратного вызова, вызываемый после завершения операции.</param>
        <param name="state">Необязательные сведения о состоянии для передачи в метод <paramref name="callback" /> для этой операции.</param>
        <summary>Привязывает сокет и начинает операцию подключения к группе многоадресной рассылки, чтобы разрешить прием датаграмм от любого участника группы.</summary>
        <returns><see cref="T:System.IAsyncResult" />, который ссылается на эту операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> Метод привязывает сокет многоадресной рассылки UDP на локальный порт и присоединяет группу многоадресной рассылки, чтобы разрешить прием датаграмм от любого участника группы многоадресной рассылки. Локальный порт и адрес группы многоадресной рассылки указываются в <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> конструктор.  
  
 Метод, указанный в `callback` вызывается при завершении операции для присоединения к группе многоадресной рассылки.  
  
 Если это предусмотрено в среде выполнения, <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> метод также выполняет проверку политики, чтобы убедиться, что клиент может получить доступ к группе многоадресной рассылки. Если клиент не разрешен доступ, <xref:System.Net.Sockets.SocketException> возникает исключение с <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки уже присоединена или операции присоединения в данный момент выполняется.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> удален.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Произошла ошибка при попытке доступа к сокету.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromGroup (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromGroup(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFromGroup : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginReceiveFromGroup (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Буфер для хранения полученных данных.</param>
        <param name="offset">Смещение в байтах от начала <paramref name="buffer" />, где должны храниться данные.</param>
        <param name="count">Максимальное число байтов для получения и сохранения в <paramref name="buffer" />.</param>
        <param name="callback">Метод обратного вызова, вызываемый после завершения операции.</param>
        <param name="state">Необязательные сведения о состоянии для передачи в метод <paramref name="callback" /> для этой операции.</param>
        <summary>Начинает операцию получения пакета из подключенной группы многоадресной рассылки и вызывает заданный обратный вызов при поступлении пакета в группу от любого отправителя.</summary>
        <returns><see cref="T:System.IAsyncResult" />, который ссылается на эту операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> Метод начинает операцию получения пакета UDP из подключенной группы многоадресной рассылки от любого отправителя. Локальный порт и адрес группы многоадресной рассылки указываются в <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> конструктор. Клиент многоадресной рассылки необходимо также выполнить соединение для группы многоадресной рассылки.  
  
 Метод, указанный в `callback` параметр вызывается в том случае, когда получил пакет.  
  
 Это может быть сбой сокета при сбое операции receive синхронно, несмотря на то, что это не является обычным с UDP. Если происходит сбой сокета, <xref:System.Net.Sockets.SocketException> возникает исключение. Сообщение об ошибке указывается как член <xref:System.Net.Sockets.SocketError> перечисления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="buffer" /> является ссылкой на null (Nothing в Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> меньше 0. 
-или- 
 <paramref name="offset" /> превышает длину <paramref name="buffer" />.  
  
-или- 
 <paramref name="count" /> меньше 0. 
-или- 
 <paramref name="offset" /> + количество превышает длину этого экземпляра <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> удален.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Произошла ошибка при попытке доступа к сокету.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendTo">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendTo (byte[] buffer, int offset, int count, System.Net.IPEndPoint remoteEndPoint, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendTo(unsigned int8[] buffer, int32 offset, int32 count, class System.Net.IPEndPoint remoteEndPoint, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendTo (buffer As Byte(), offset As Integer, count As Integer, remoteEndPoint As IPEndPoint, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendTo(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Net::IPEndPoint ^ remoteEndPoint, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendTo : byte[] * int * int * System.Net.IPEndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginSendTo (buffer, offset, count, remoteEndPoint, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remoteEndPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Буфер, содержащий данные для отправки.</param>
        <param name="offset">Смещение в байтах от начала <paramref name="buffer" /> для чтения отправляемых данных.</param>
        <param name="count">Количество байтов, которые необходимо отправить из <paramref name="buffer" />.</param>
        <param name="remoteEndPoint">Удаленная конечная точка, в которую нужно отправить пакет.</param>
        <param name="callback">Метод обратного вызова, вызываемый после завершения операции.</param>
        <param name="state">Необязательные сведения о состоянии для передачи в метод <paramref name="callback" /> для этой операции.</param>
        <summary>Начинает операцию отправки пакета одноадресной передачи в указанное место назначения.</summary>
        <returns><see cref="T:System.IAsyncResult" />, который ссылается на эту операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> Метод начинает операцию отправки пакета UDP для группы многоадресной рассылки.  
  
 Клиент необходимо выполнить соединение для группы многоадресной рассылки. Адрес назначения, указанный в `remoteEndPoint` параметр должен уже отправлены многоадресный пакет в этот приемник. Некоторые протоколы использовать эту информацию для передачи управления потоком, качеству статистику службы или восстановления сообщений.  
  
 Метод, указанный в `callback` параметр вызывается в том случае, когда получил пакет.  
  
 Передача допускается только в том случае, если адрес, указанный в `remoteEndPoint` параметр уже отправлено многоадресный пакет данный получатель. Если клиент не разрешен доступ, <xref:System.Net.Sockets.SocketException> возникает исключение с <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Если порт назначения, указанное в `remoteEndPoint` параметр является менее 1 024 <xref:System.Net.Sockets.SocketException> возникает исключение с <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Это может быть сбой сокета при сбое операции receive синхронно, несмотря на то, что это не является обычным с UDP. Если происходит сбой сокета, <xref:System.Net.Sockets.SocketException> возникает исключение. Сообщение об ошибке указывается как член <xref:System.Net.Sockets.SocketError> перечисления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="buffer" /> является ссылкой на null (Nothing в Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> меньше 0. 
-или- 
 <paramref name="offset" /> превышает длину <paramref name="buffer" />.  
  
-или- 
 <paramref name="count" /> меньше 0. 
-или- 
 <paramref name="offset" /> + количество превышает длину этого экземпляра <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> удален.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Произошла ошибка при попытке доступа к сокету.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToGroup (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToGroup(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendToGroup : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginSendToGroup (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Буфер, содержащий данные для отправки.</param>
        <param name="offset">Смещение в байтах от начала <paramref name="buffer" /> для чтения отправляемых данных.</param>
        <param name="count">Количество байтов, которые необходимо отправить из <paramref name="buffer" />.</param>
        <param name="callback">Метод обратного вызова, вызываемый после завершения операции.</param>
        <param name="state">Необязательные сведения о состоянии для передачи в метод <paramref name="callback" /> для этой операции.</param>
        <summary>Начинает операцию отправки пакета в подключенную группу многоадресной рассылки и вызывает заданный обратный вызов после отправки пакета в группу.</summary>
        <returns><see cref="T:System.IAsyncResult" />, который ссылается на эту операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> Метод начинает операцию отправки пакета UDP для группы многоадресной рассылки.  
  
 Клиент необходимо выполнить соединение для группы многоадресной рассылки.  
  
 Метод, указанный в `callback` параметр вызывается в том случае, когда получил пакет.  
  
 Это может быть сбой сокета при сбое операции receive синхронно, несмотря на то, что это не является обычным с UDP. Если происходит сбой сокета, <xref:System.Net.Sockets.SocketException> возникает исключение. Сообщение об ошибке указывается как член <xref:System.Net.Sockets.SocketError> перечисления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="buffer" /> является ссылкой на null (Nothing в Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> меньше 0. 
-или- 
 <paramref name="offset" /> превышает длину <paramref name="buffer" />.  
  
-или- 
 <paramref name="count" /> меньше 0. 
-или- 
 <paramref name="offset" /> + количество превышает длину этого экземпляра <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> удален.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Произошла ошибка при попытке доступа к сокету.</exception>
      </Docs>
    </Member>
    <Member MemberName="BlockSource">
      <MemberSignature Language="C#" Value="public void BlockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BlockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BlockSource (sourceAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BlockSource(System::Net::IPAddress ^ sourceAddress);" />
      <MemberSignature Language="F#" Value="member this.BlockSource : System.Net.IPAddress -&gt; unit" Usage="udpAnySourceMulticastClient.BlockSource sourceAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">Адрес блокируемого источника.</param>
        <summary>Блокирует источник, так что исходящие из него пакеты многоадресной рассылки больше не поступают.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> Метод блокируется из указанного исходного адреса получению исходящие пакеты многоадресной рассылки. Клиент необходимо выполнить соединение для группы многоадресной рассылки.  
  
 `sourceAddress` Параметр может быть адрес IPv4 или IPv6, но `sourceAddress` должен соответствовать семейство адресов группы многоадресной рассылки, который присоединен клиент.  
  
 Метод, указанный в `callback` параметр вызывается в том случае, когда получил пакет.  
  
 Если возникает сбой сокета при выполнении операции блок источника, <xref:System.Net.Sockets.SocketException> возникает исключение. Сообщение об ошибке указывается как член <xref:System.Net.Sockets.SocketError> перечисления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> удален.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Произошла ошибка при попытке доступа к сокету.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpAnySourceMulticastClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Производит отключение от группы многоадресной рассылки и освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> и базовым объектом <see cref="T:System.Net.Sockets.Socket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите метод <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> по окончании использования класса <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. Метод Dispose оставляет <xref:System.Net.Sockets.UdpAnySourceMulticastClient> окажется в неработоспособном состоянии. После вызова метода <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Net.Sockets.UdpAnySourceMulticastClient> , сборщик мусора мог освободить память, <xref:System.Net.Sockets.UdpAnySourceMulticastClient> занимаемую.  
  
 Всегда вызывайте метод <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Net.Sockets.UdpAnySourceMulticastClient> метод <xref:System.Object.Finalize%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndJoinGroup : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndJoinGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Результат асинхронной операции присоединения.</param>
        <summary>Завершает операцию асинхронного присоединения группы в группу многоадресной рассылки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> Завершения метода привязку асинхронной операции сокета и соединения в группу многоадресной рассылки.  
  
 Если это предусмотрено в среде выполнения, <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> метод также выполняет проверку политики, чтобы убедиться, что клиент может получить доступ к группе многоадресной рассылки. Если клиент не разрешен доступ, <xref:System.Net.Sockets.SocketException> возникает исключение с <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Если при выполнении операции присоединения к группе, происходит ошибка сокета <xref:System.Net.Sockets.SocketException> возникает исключение. Сообщение об ошибке указывается как член <xref:System.Net.Sockets.SocketError> перечисления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="result" /> является ссылкой на null (Nothing в Visual Basic).</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> удален.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Произошла ошибка при попытке доступа к сокету.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromGroup">
      <MemberSignature Language="C#" Value="public int EndReceiveFromGroup (IAsyncResult result, out System.Net.IPEndPoint source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromGroup(class System.IAsyncResult result, [out] class System.Net.IPEndPoint&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromGroup (result As IAsyncResult, ByRef source As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromGroup(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::Net::IPEndPoint ^ % source);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFromGroup : IAsyncResult *  -&gt; int" Usage="udpAnySourceMulticastClient.EndReceiveFromGroup (result, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="source" Type="System.Net.IPEndPoint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">Результат асинхронной операции получения.</param>
        <param name="source">Конечная точка источника, из которой был получен пакет.</param>
        <summary>Завершает асинхронную операцию получения пакета из присоединенных групп многоадресной рассылки и предоставляет полученную информацию.</summary>
        <returns>Длина в байтах сообщения, сохраненного в параметре буфера, переданном в метод <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> Метод завершает асинхронную операцию для получения пакета из группы многоадресной рассылки.  
  
 Если при выполнении операции receive, происходит сбой сокета <xref:System.Net.Sockets.SocketException> возникает исключение. Сообщение об ошибке указывается как член <xref:System.Net.Sockets.SocketError> перечисления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="result" /> является ссылкой на null (Nothing в Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> удален.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Произошла ошибка при попытке доступа к сокету.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendTo">
      <MemberSignature Language="C#" Value="public void EndSendTo (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendTo(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendTo (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendTo(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendTo : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndSendTo result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Результат асинхронной операции отправки.</param>
        <summary>Завершает операцию отправки пакета одноадресной передачи в указанное место назначения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A> Метод завершает асинхронную операцию, чтобы отправить пакет в указанный конечный адрес.  
  
 Если при выполнении операции receive, происходит сбой сокета <xref:System.Net.Sockets.SocketException> возникает исключение. Сообщение об ошибке указывается как член <xref:System.Net.Sockets.SocketError> перечисления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="result" /> является ссылкой на null (Nothing в Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> удален.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Произошла ошибка при попытке доступа к сокету.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToGroup">
      <MemberSignature Language="C#" Value="public void EndSendToGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendToGroup : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndSendToGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Результат асинхронной операции отправки.</param>
        <summary>Завершает операцию отправки пакета в группу многоадресной рассылки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A> Метод завершает асинхронную операцию для отправки пакета в группу многоадресной рассылки.  
  
 Если при выполнении операции receive, происходит сбой сокета <xref:System.Net.Sockets.SocketException> возникает исключение. Сообщение об ошибке указывается как член <xref:System.Net.Sockets.SocketError> перечисления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="result" /> является ссылкой на null (Nothing в Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> удален.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Произошла ошибка при попытке доступа к сокету.</exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastLoopback : bool with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, могут ли доставляться исходящие пакеты многоадресной рассылки в передающем приложении.</summary>
        <value>Возвращает <see cref="T:System.Boolean" />.  
  
Значение, указывающее, действительно ли исходящие пакеты, предназначенные для группы многоадресной рассылки, доставляются в отправляющее приложение.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Трафик многоадресной рассылки масштабируемый способ для связи многие ко многим в Интернете. Процесс подписывается на адрес группы многоадресной рассылки. После этого любые пакеты, отправленные процессом, подписанных в группу многоадресной рассылки, получают каждый процесс, подписка на адрес многоадресной рассылки. <xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A> Свойство, управляет ли любой обрабатывать на локальном компьютере принимает пакеты многоадресной рассылки, отправленные при этот клиент к группе многоадресной рассылки.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> удален.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает размер в байтах буфера приема объекта <see cref="T:System.Net.Sockets.Socket" />, используемого для многоадресных операций получения в этом экземпляре <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />.</summary>
        <value>Возвращает <see cref="T:System.Int32" />.  
  
Размер буфера приема (в байтах).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> Свойство получает или задает размер в байтах буфера приема базового <xref:System.Net.Sockets.Socket> используется для операций многоадресного получения в этом <xref:System.Net.Sockets.UdpAnySourceMulticastClient> экземпляра. В частности <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> свойство определяет размер буфера, используемого в стеке, при поступлении, но оно еще не вызван <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> метод. Если этот буфер заполняется и продолжают поступать пакеты, прежде чем приложение вызывает <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> и <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> методы, старые пакеты будут удалены. Приложение никогда не будут иметь возможность получать старые пакеты и вместо этого получите более новые пакеты, при вызове <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> метод.  
  
 Размер буфера приема в Windows по умолчанию — 8192 байт.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанный размер буфера меньше 0.</exception>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> удален.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает размер в байтах буфера отправки объекта <see cref="T:System.Net.Sockets.Socket" />, используемого для многоадресных операций отправки в этом экземпляре <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />.</summary>
        <value>Возвращает <see cref="T:System.Int32" />.  
  
Размер буфера отправки в байтах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> Свойство получает или задает размер в байтах буфера отправки объекта базового сокета, используемого для многоадресных операций отправки в это <xref:System.Net.Sockets.UdpAnySourceMulticastClient> экземпляра.  
  
 вызовы <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> или <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> методов будет занимать больше времени вызова функция обратного вызова в зависимости от значения <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> свойство при заполнении буфера отправки. <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> Только свойство, управляет ли буфер пользователя остается заблокированной в физической памяти, до завершения отправки.  
  
 Размер буфера отправки в Windows по умолчанию — 8192 байт.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанный размер буфера меньше 0.</exception>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> удален.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnblockSource">
      <MemberSignature Language="C#" Value="public void UnblockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnblockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnblockSource (sourceAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnblockSource(System::Net::IPAddress ^ sourceAddress);" />
      <MemberSignature Language="F#" Value="member this.UnblockSource : System.Net.IPAddress -&gt; unit" Usage="udpAnySourceMulticastClient.UnblockSource sourceAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">Адрес источника для разблокирования.</param>
        <summary>Разблокирует источник, который ранее был заблокирован в результате вызова метода <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" />, чтобы можно было получить исходящие из него пакеты многоадресной рассылки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A> Метод разблокирует исходящие из указанного исходного адреса, поэтому они могут быть получены пакеты многоадресной рассылки. Указанный исходный адрес должен ранее заблокированы с помощью вызова <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> метод.  
  
 Клиент необходимо выполнить соединение для группы многоадресной рассылки.  
  
 `sourceAddress` Параметр может быть IPv4 или IPv6 многоадресной рассылки адрес.  
  
 Если указанный исходный адрес в `sourceAddress` параметр не был заблокирован ранее путем вызова <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> метод, <xref:System.Net.Sockets.SocketException> возникает исключение с <xref:System.Net.Sockets.SocketError.AddressNotAvailable>.  
  
 Если возникает сбой сокета при выполнении операции источника разблокировать, <xref:System.Net.Sockets.SocketException> возникает исключение. Сообщение об ошибке указывается как член <xref:System.Net.Sockets.SocketError> перечисления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> удален.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Произошла ошибка при попытке доступа к сокету.</exception>
      </Docs>
    </Member>
  </Members>
</Type>