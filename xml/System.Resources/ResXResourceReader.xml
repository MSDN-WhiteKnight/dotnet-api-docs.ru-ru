<Type Name="ResXResourceReader" FullName="System.Resources.ResXResourceReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d5ac19ac58175bb77431a45d681686baba0729b9" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58453732" /></Metadata><TypeSignature Language="C#" Value="public class ResXResourceReader : System.Resources.IResourceReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResXResourceReader extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable, class System.Resources.IResourceReader" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResXResourceReader" />
  <TypeSignature Language="VB.NET" Value="Public Class ResXResourceReader&#xA;Implements IResourceReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResXResourceReader : System::Resources::IResourceReader" />
  <TypeSignature Language="F#" Value="type ResXResourceReader = class&#xA;    interface IResourceReader&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Resources.IResourceReader</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Перечисляет файлы (.resx) и потоки XML-ресурсов, считывая последовательно пары "имя-значение" для ресурсов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResXResourceReader> Класс предоставляет реализацию по умолчанию <xref:System.Resources.IResourceReader> интерфейс, который считывает сведения о ресурсах в формате XML. Чтобы считать сведения о ресурсах из формата двоичный файл ресурсов, используйте <xref:System.Resources.ResourceReader> класса.  
  
 Использовании <xref:System.Resources.ResXResourceReader> класс перечислить ресурсы в RESX-файлах, проходя перечислитель словаря (<xref:System.Collections.IDictionaryEnumerator>), возвращаемый <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> метод. Вызов методов, предоставляемых <xref:System.Collections.IDictionaryEnumerator> для перехода по списку ресурсов и имя и значение каждого ресурса в RESX-файл.  
  
> [!NOTE]
>  <xref:System.Resources.ResXResourceReader> Класс предоставляет два перечислителя. <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType> Возвращает метод <xref:System.Collections.IDictionaryEnumerator> объекта; мы рекомендуем использовать этот метод для перечисления ресурсов. <xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> Метода является явной реализацией интерфейса, возвращающий <xref:System.Collections.IEnumerator> объекта; его использование не рекомендуется.  
  
 В следующем примере используется <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> метод, чтобы получить <xref:System.Collections.IDictionaryEnumerator> объект, который позволяет перечислить ресурсы в RESX-файла. В примере `CreateResourceFile` подпрограмму, которая создает файл необходимых ресурсов.  
  
 [!code-csharp[System.Resources.ResXResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/cs/resxresourcereader1.cs#1)]
 [!code-vb[System.Resources.ResXResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/vb/resxresourcereader1.vb#1)]  
  
 Если <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> свойство `true`, значение <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> свойство <xref:System.Resources.ResXDataNode> объекта, а не значение ресурса. Это делает элемент ресурса комментарий доступным из <xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=nameWithType> свойство. В следующем примере задается <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> свойства `true` и перечисляет ресурсы в RESX-файла  
  
 [!code-csharp[System.Resources.ResXResourceReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/cs/resxresourcereader2.cs#2)]
 [!code-vb[System.Resources.ResXResourceReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/vb/resxresourcereader2.vb#2)]  
  
 Если <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> — `true`, <xref:System.Resources.ResXDataNode> элементов в перечислении может быть либо:  
  
-   Именованные ресурсы вместе с их данными. В этом случае <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType> свойство `null`.  
  
-   Имена ресурсов, а также имя файла, содержащего данные ресурсов. В этом случае <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType> возвращает <xref:System.Resources.ResXFileRef> объект, предоставляющий сведения о ресурсе, включая его имя файла. Если используются относительные имена, должен всегда быть установлен <xref:System.Resources.ResXResourceReader.BasePath%2A> свойство, чтобы предоставить опорную точку для относительного пути к файлу.  
  
 Если вы хотите получить именованные ресурсы из RESX-файла, а не перечисление его ресурсов, можно создать экземпляр <xref:System.Resources.ResXResourceSet> и вызовите его `GetString` и `GetObject` методы.  
  
> [!NOTE]
>  <xref:System.Resources.ResXResourceReader> Класс содержит запрос компоновки и требования наследования на уровне класса, который применяется ко всем элементам. Объект <xref:System.Security.SecurityException> исключение возникает, если непосредственный вызывающий оператор или производного класса не имеет разрешения полного доверия.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как использовать <xref:System.Resources.ResXResourceReader> для перебора ресурсы в RESX-файла. Во-первых, <xref:System.Resources.ResXResourceReader> `rsxr` создается для файла `items.resx`. Далее, <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> метод используется для создания <xref:System.Collections.IDictionaryEnumerator> для просмотра ресурсов и отображения содержимого на консоль.  
  
 [!code-cpp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/resxresourcereader.cpp#1)]
 [!code-csharp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/resxresourcereader.cs#1)]
 [!code-vb[System.Resources.ResxresourceReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/resxresourcereader.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">для полного доверия для непосредственного вызывающего объекта. Этот член не может быть использован частично доверенным кодом.</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">для полного доверия для разработчиков производных классов. Этот класс не может наследоваться кодом с частичным доверием.</permission>
    <altmember cref="T:System.Resources.ResXResourceWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/6c5ad891-66a0-4e7a-adcf-f41863ba6d8d">Создание файлов ресурсов для приложений для настольных систем</related>
    <related type="Article" href="https://msdn.microsoft.com/library/168f941a-2b84-43f8-933f-cf4a8548d824">Работа с RESX-файлами программным способом</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResXResourceReader" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.Stream -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Входной поток, содержащий ресурсы.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResXResourceReader" /> для заданного потока.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Resources.ResXResourceReader.Dispose%2A> И <xref:System.Resources.ResXResourceReader.Close%2A> методы не следует закрывать поток, указанный в этом конструкторе.  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">для полного доверия для непосредственного вызывающего объекта. Этот член не может быть использован частично доверенным кодом.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">для полного доверия для разработчиков производных классов. Этот член не может наследоваться кодом с частичным доверием.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.TextReader -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">Текстовый входной поток, содержащий ресурсы.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResXResourceReader" /> для указанного объекта <see cref="T:System.IO.TextReader" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">для полного доверия для непосредственного вызывающего объекта. Этот член не может быть использован частично доверенным кодом.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">для полного доверия для разработчиков производных классов. Этот член не может наследоваться кодом с частичным доверием.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : string -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Путь к файлу ресурсов для чтения.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResXResourceReader" /> для указанного имени файла ресурсов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере создается новый экземпляр класса <xref:System.Resources.ResXResourceReader> класса для указанного файла, перебор ресурсов файла и отображает содержимое в консоли.  
  
 [!code-cpp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/resxresourcereader.cpp#1)]
 [!code-csharp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/resxresourcereader.cs#1)]
 [!code-vb[System.Resources.ResxresourceReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/resxresourcereader.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">для полного доверия для непосредственного вызывающего объекта. Этот член не может быть использован частично доверенным кодом.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">для полного доверия для разработчиков производных классов. Этот член не может наследоваться кодом с частичным доверием.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.Stream stream, System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::Stream ^ stream, System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.Stream * System.ComponentModel.Design.ITypeResolutionService -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (stream, typeResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="stream">Входной поток, содержащий ресурсы.</param>
        <param name="typeResolver">Объект, который разрешает имена типов, заданные в ресурсе.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResXResourceReader" />, используя входной поток и службу разрешения типов.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">для полного доверия для непосредственного вызывающего объекта. Этот член не может быть использован частично доверенным кодом.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">для полного доверия для разработчиков производных классов. Этот член не может наследоваться кодом с частичным доверием.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.Stream stream, System.Reflection.AssemblyName[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Reflection.AssemblyName[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::Stream ^ stream, cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.Stream * System.Reflection.AssemblyName[] -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (stream, assemblyNames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="assemblyNames" Type="System.Reflection.AssemblyName[]" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stream">Входной поток, содержащий ресурсы.</param>
        <param name="assemblyNames">Массив объектов <see cref="T:System.Reflection.AssemblyName" />, задающий одну или несколько сборок. Сборки используются для разрешения имени типа в ресурсе, чтобы определить фактический тип.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResXResourceReader" />, используя поток и массив имен сборок.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">для полного доверия для непосредственного вызывающего объекта. Этот член не может быть использован частично доверенным кодом.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">для полного доверия для разработчиков производных классов. Этот член не может наследоваться кодом с частичным доверием.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.TextReader reader, System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader reader, class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader, typeResolver As ITypeResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::TextReader ^ reader, System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.TextReader * System.ComponentModel.Design.ITypeResolutionService -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (reader, typeResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="reader">Средство чтения текстового потока, содержащего ресурсы.</param>
        <param name="typeResolver">Объект, который разрешает имена типов, заданные в ресурсе.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResXResourceReader" />, используя средство чтения текстового потока и службу разрешения типов.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">для полного доверия для непосредственного вызывающего объекта. Этот член не может быть использован частично доверенным кодом.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">для полного доверия для разработчиков производных классов. Этот член не может наследоваться кодом с частичным доверием.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.TextReader reader, System.Reflection.AssemblyName[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader reader, class System.Reflection.AssemblyName[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader, assemblyNames As AssemblyName())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::TextReader ^ reader, cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.TextReader * System.Reflection.AssemblyName[] -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (reader, assemblyNames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="assemblyNames" Type="System.Reflection.AssemblyName[]" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="reader">Объект, используемый для чтения ресурсов из потока текста.</param>
        <param name="assemblyNames">Массив объектов <see cref="T:System.Reflection.AssemblyName" />, задающий одну или несколько сборок. Сборки используются для разрешения имени типа в ресурсе, чтобы определить фактический тип.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResXResourceReader" />, используя объект <see cref="T:System.IO.TextReader" /> и массив имен сборок.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">для полного доверия для непосредственного вызывающего объекта. Этот член не может быть использован частично доверенным кодом.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">для полного доверия для разработчиков производных классов. Этот член не может наследоваться кодом с частичным доверием.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (string fileName, System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, typeResolver As ITypeResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::String ^ fileName, System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : string * System.ComponentModel.Design.ITypeResolutionService -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (fileName, typeResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="fileName">Имя файла ресурсов XML, который содержит ресурсы.</param>
        <param name="typeResolver">Объект, который разрешает имена типов, заданные в ресурсе.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResXResourceReader" />, используя имя файла и службу разрешения типов.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">для полного доверия для непосредственного вызывающего объекта. Этот член не может быть использован частично доверенным кодом.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">для полного доверия для разработчиков производных классов. Этот член не может наследоваться кодом с частичным доверием.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (string fileName, System.Reflection.AssemblyName[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Reflection.AssemblyName[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, assemblyNames As AssemblyName())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::String ^ fileName, cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : string * System.Reflection.AssemblyName[] -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (fileName, assemblyNames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="assemblyNames" Type="System.Reflection.AssemblyName[]" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="fileName">Имя файла ресурсов XML, который содержит ресурсы.</param>
        <param name="assemblyNames">Массив объектов <see cref="T:System.Reflection.AssemblyName" />, задающий одну или несколько сборок. Сборки используются для разрешения имени типа в ресурсе, чтобы определить фактический тип.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResXResourceReader" />, используя имя файла ресурсов XML и массив имен сборок.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">для полного доверия для непосредственного вызывающего объекта. Этот член не может быть использован частично доверенным кодом.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">для полного доверия для разработчиков производных классов. Этот член не может наследоваться кодом с частичным доверием.</permission>
      </Docs>
    </Member>
    <Member MemberName="BasePath">
      <MemberSignature Language="C#" Value="public string BasePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BasePath" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXResourceReader.BasePath" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BasePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BasePath : string with get, set" Usage="System.Resources.ResXResourceReader.BasePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает базовый путь для относительного пути к файлу, заданному в объекте <see cref="T:System.Resources.ResXFileRef" />.</summary>
        <value>Путь, который при его добавлении в начало относительного пути к файлу, указанному в объекте <see cref="T:System.Resources.ResXFileRef" />, дает абсолютный путь к файлу ресурсов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResXResourceReader.BasePath%2A> Свойство используется для разрешения ссылок на относительный путь, назначенные <xref:System.Resources.ResXFileRef.FileName%2A> свойство <xref:System.Resources.ResXFileRef> объектов.  По умолчанию его значение равно <xref:System.String.Empty?displayProperty=nameWithType>, и относительный путь ссылки разрешаются в отношении к текущему каталогу, возвращенный <xref:System.Environment.CurrentDirectory%2A?displayProperty=nameWithType> свойство. Перед началом перечисления ресурсов, необходимо присвоить этому свойству.  
  
   
  
## Examples  
 В следующем примере создается XML-файл ресурсов, содержащий образы пород собак, а также создает строковый ресурс, задает приложение, которая создала ресурс. <xref:System.Resources.ResXFileRef> объекты используются для сохранения пути для изображений, а не хранить двоичные образы, сами в файле ресурсов. В примере задается <xref:System.Resources.ResXResourceReader.BasePath%2A> свойства таким образом, относительные пути к файлам в именах файлов изображений интерпретируются как вложенных папок в папке с именем C:\data\\.  
  
 [!code-csharp[System.Resources.ResXResourceReader.BasePath#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.basepath/cs/basepathex1.cs#1)]
 [!code-vb[System.Resources.ResXResourceReader.BasePath#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.basepath/vb/basepathex1.vb#1)]  
  
 Обратите внимание на то, что необходимо добавить ссылку на файл System.Drawing.dll. Чтобы успешно скомпилировать проект. В примере также требуется наличие необходимые изображения в каталог с именем C:\data\images\\.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">В операции присвоения значение не может быть задано, так как к файлу ресурсов XML уже осуществлен доступ и он используется.</exception>
        <altmember cref="M:System.Resources.ResXResourceReader.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resXResourceReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, занятые модулем <see cref="T:System.Resources.ResXResourceReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов <xref:System.Resources.ResXResourceReader.Close%2A> включает ресурсы, используемые <xref:System.Resources.ResXResourceReader> перераспределить для других целей. Дополнительные сведения о <xref:System.Resources.ResXResourceReader.Close%2A>, см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).  
  
   
  
## Examples  
 Следующий пример отображает ресурсы файла на консоль, а затем использует <xref:System.Resources.ResXResourceReader.Close%2A> метод, чтобы отключить средство чтения и сделать его ресурсы доступными для других процессов.  
  
 [!code-cpp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/resxresourcereader.cpp#1)]
 [!code-csharp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/resxresourcereader.cs#1)]
 [!code-vb[System.Resources.ResxresourceReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/resxresourcereader.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="resXResourceReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Resources.ResXResourceReader" />, а при необходимости освобождает также управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться либо <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> метод или <xref:System.Object.Finalize%2A?displayProperty=nameWithType> метод. <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> вызывает этот метод с `disposing` параметру присвоить `true`. <xref:System.Object.Finalize%2A> вызывает этот метод с `disposing` присвоено `false`.  
  
 Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.Resources.ResXResourceReader>. Этот метод вызывает метод `Dispose` каждого объекта, на который есть ссылка.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Метод 
            <see langword="Dispose" /> может вызываться несколько раз другими объектами. При переопределении метода <see langword="Dispose(Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />. Дополнительные сведения о том, как реализовать <see langword="Dispose(Boolean)" /> и о шаблон уничтожаемых объектов, см. в разделе [реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md), <see cref="T:System.IDisposable" />, и <see cref="M:System.Object.Finalize" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ResXResourceReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ResXResourceReader ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="resXResourceReader.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Этот член переопределяет метод <see cref="M:System.Object.Finalize" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromFileContents">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает новый объект <see cref="T:System.Resources.ResXResourceReader" /> и инициализирует его, чтобы выполнить чтение строки, содержимое которой представлено в виде файла ресурсов XML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromFileContents">
      <MemberSignature Language="C#" Value="public static System.Resources.ResXResourceReader FromFileContents (string fileContents);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResXResourceReader FromFileContents(string fileContents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.FromFileContents(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileContents (fileContents As String) As ResXResourceReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResXResourceReader ^ FromFileContents(System::String ^ fileContents);" />
      <MemberSignature Language="F#" Value="static member FromFileContents : string -&gt; System.Resources.ResXResourceReader" Usage="System.Resources.ResXResourceReader.FromFileContents fileContents" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.ResXResourceReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileContents" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileContents">Строка, содержащая информацию, форматированную в виде XML-ресурса.</param>
        <summary>Создает новый объект <see cref="T:System.Resources.ResXResourceReader" /> и инициализирует его, чтобы выполнить чтение строки, содержимое которой представлено в виде файла ресурсов XML.</summary>
        <returns>Объект, который считывает ресурсы из строки <paramref name="fileContents" />.</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">для полного доверия для непосредственного вызывающего объекта. Этот член не может быть использован частично доверенным кодом.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">для полного доверия для разработчиков производных классов. Этот член не может наследоваться кодом с частичным доверием.</permission>
      </Docs>
    </Member>
    <Member MemberName="FromFileContents">
      <MemberSignature Language="C#" Value="public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResXResourceReader FromFileContents(string fileContents, class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileContents (fileContents As String, typeResolver As ITypeResolutionService) As ResXResourceReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResXResourceReader ^ FromFileContents(System::String ^ fileContents, System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberSignature Language="F#" Value="static member FromFileContents : string * System.ComponentModel.Design.ITypeResolutionService -&gt; System.Resources.ResXResourceReader" Usage="System.Resources.ResXResourceReader.FromFileContents (fileContents, typeResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResXResourceReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileContents" Type="System.String" />
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="fileContents">Строка, содержащая информацию, форматированную в виде XML-ресурса.</param>
        <param name="typeResolver">Объект, который разрешает имена типов, заданные в ресурсе.</param>
        <summary>Создает новый объект <see cref="T:System.Resources.ResXResourceReader" /> и инициализирует его, чтобы выполнить чтение строки, содержимое которой представлено в виде файла ресурсов XML, а также для использования объекта <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> для принятия решения относительно имен типов, заданных в ресурсе.</summary>
        <returns>Объект, который считывает ресурсы из строки <paramref name="fileContents" />.</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">для полного доверия для непосредственного вызывающего объекта. Этот член не может быть использован частично доверенным кодом.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">для полного доверия для разработчиков производных классов. Этот член не может наследоваться кодом с частичным доверием.</permission>
      </Docs>
    </Member>
    <Member MemberName="FromFileContents">
      <MemberSignature Language="C#" Value="public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.Reflection.AssemblyName[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResXResourceReader FromFileContents(string fileContents, class System.Reflection.AssemblyName[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileContents (fileContents As String, assemblyNames As AssemblyName()) As ResXResourceReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResXResourceReader ^ FromFileContents(System::String ^ fileContents, cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="static member FromFileContents : string * System.Reflection.AssemblyName[] -&gt; System.Resources.ResXResourceReader" Usage="System.Resources.ResXResourceReader.FromFileContents (fileContents, assemblyNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResXResourceReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileContents" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="assemblyNames" Type="System.Reflection.AssemblyName[]" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="fileContents">Строка, содержимое которой является файлом ресурсов XML.</param>
        <param name="assemblyNames">Массив объектов <see cref="T:System.Reflection.AssemblyName" />, задающий одну или несколько сборок. Сборки используются для разрешения имени типа в ресурсе, чтобы определить фактический тип.</param>
        <summary>Создает новый объект <see cref="T:System.Resources.ResXResourceReader" /> и инициализирует его, чтобы выполнить чтение строки, содержимое которой представлено в виде файла ресурсов XML, а также для использования массива объектов <see cref="T:System.Reflection.AssemblyName" /> для принятия решения относительно имен типов, заданных в ресурсе.</summary>
        <returns>Объект, который считывает ресурсы из строки <paramref name="fileContents" />.</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">для полного доверия для непосредственного вызывающего объекта. Этот член не может быть использован частично доверенным кодом.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">для полного доверия для разработчиков производных классов. Этот член не может наследоваться кодом с частичным доверием.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resXResourceReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечислитель для текущего объекта <see cref="T:System.Resources.ResXResourceReader" />.</summary>
        <returns>Перечислитель для текущего объекта <see cref="T:System.Resources.ResourceReader" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> Метод извлекает пары имен и значений в XML-поток ресурсов (RESX) или строку, связанную с текущим <xref:System.Resources.ResXResourceReader> объекта. Тем не менее если <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> свойству `true` перед вызовом метода <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>, элементы ресурсов, чтобы извлечь в виде <xref:System.Resources.ResXDataNode> объектов. Таким образом независимо от типа возвращаются все узлы ресурсов.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> метод, чтобы получить <xref:System.Collections.IDictionaryEnumerator> объект, который позволяет перечислить ресурсы в RESX-файла. В примере `CreateResourceFile` подпрограмму, которая создает файл необходимых ресурсов.  
  
 [!code-csharp[System.Resources.ResXResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/cs/resxresourcereader1.cs#1)]
 [!code-vb[System.Resources.ResXResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/vb/resxresourcereader1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetMetadataEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionaryEnumerator GetMetadataEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.GetMetadataEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetMetadataEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetMetadataEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resXResourceReader.GetMetadataEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обеспечивает словарный перечислитель, который может извлекать свойства времени проектирования из текущего файла ресурсов XML или из потока.</summary>
        <returns>Перечислитель для метаданных в  ресурсе.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ресурсы хранятся в виде пары имя/значение в файле ресурсов или потока. Свойства времени разработки, которые называются метаданных, хранятся в файле ресурсов или потока наряду с ресурсами данных времени выполнения. <xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A> Предоставляет метод <xref:System.Collections.IDictionaryEnumerator> объект, который может получать метаданные из файла ресурсов или потока, связанного с текущим <xref:System.Resources.ResXResourceReader> объекта. Тем не менее если <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> свойству `true` перед вызовом метода <xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A>, что узлы ресурсов не получены.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A> метод для выполнения итерации по ресурсы метаданных в файл ресурсов XML. Данный пример кода является частью большего примера для <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> свойство.  
  
 [!code-cpp[System.Resources.ResxresourceReader Example#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/useresxdatanodes.cpp#4)]
 [!code-csharp[System.Resources.ResxresourceReader Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/useresxdatanodes.cs#4)]
 [!code-vb[System.Resources.ResxresourceReader Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/useresxdatanodes.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечислитель для текущего объекта <see cref="T:System.Resources.ResXResourceReader" />. Описание этого элемента содержится в методе <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
        <returns>Перечислитель, который может осуществлять перебор пар "имя-значение" в потоке XML-ресурса (.resx) или в строке, связанной с текущим объектом <see cref="T:System.Resources.ResXResourceReader" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный элемент является явной реализацией элемента интерфейса. Он может использоваться только при условии, что экземпляр класса <xref:System.Resources.ResXResourceReader> приведен к типу интерфейса <xref:System.Collections.IEnumerable>. Чтобы перечислить ресурсы в RESX-файла, мы рекомендуем вызывать <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType> метод, а затем вызовите `MoveNext` метод возвращенного <xref:System.Collections.IDictionaryEnumerator> объекта.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Resources.ResXResourceReader" />, а при необходимости освобождает также управляемые ресурсы. Описание этого элемента содержится в методе <see cref="M:System.IDisposable.Dispose" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный элемент является явной реализацией элемента интерфейса. Он может использоваться только при условии, что экземпляр класса <xref:System.Resources.ResXResourceReader> приведен к типу интерфейса <xref:System.IDisposable>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Resources.ResXResourceReader.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="UseResXDataNodes">
      <MemberSignature Language="C#" Value="public bool UseResXDataNodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseResXDataNodes" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXResourceReader.UseResXDataNodes" />
      <MemberSignature Language="VB.NET" Value="Public Property UseResXDataNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseResXDataNodes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseResXDataNodes : bool with get, set" Usage="System.Resources.ResXResourceReader.UseResXDataNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, производится ли возвращение объектов <see cref="T:System.Resources.ResXDataNode" /> при чтении текущего файла ресурсов XML или потока.</summary>
        <value>Значение <see langword="true" />, если извлекаются узлы данных ресурсов; значение <see langword="false" />, если узлы данных ресурсов игнорируются.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно задать <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> свойства перед началом перечисления ресурсов. По умолчанию его значение равно `false`.  
  
   
  
## Examples  
 В следующем примере перечисляет и отображает элементы ресурсов в XML-файл. Изначально <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> присваивается `false` для отображения элементов данных и метаданных в файле ресурсов. Второй перечисление имеет <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> присвоено `true` таким образом, чтобы элементы ресурсов данных возвращаются в виде <xref:System.Resources.ResXDataNode> объектов.  
  
 [!code-cpp[System.Resources.ResXResourceReader Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/useresxdatanodes.cpp#2)]
 [!code-csharp[System.Resources.ResXResourceReader Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/useresxdatanodes.cs#2)]
 [!code-vb[System.Resources.ResXResourceReader Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/useresxdatanodes.vb#2)]  
  
 XML-файл ресурсов, используемых в примере содержит один узел данных и один узел метаданных. Чтобы использовать XML-файле в предыдущем примере, скопируйте следующий текст и сохраните его в файл с именем Resource1.resx.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<root>  
  <resheader name="resmimetype">  
    <value>text/microsoft-resx</value>  
  </resheader>  
  <resheader name="version">  
    <value>2.0</value>  
  </resheader>  
  <resheader name="reader">  
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0,  
           Culture=neutral, PublicKeyToken=b77a5c561934e089  
    </value>  
  </resheader>  
  <resheader name="writer">  
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0,  
           Culture=neutral, PublicKeyToken=b77a5c561934e089  
    </value>  
  </resheader>  
  <data name="DataSample" xml:space="preserve">  
    <value>Sample DATA value</value>  
  </data>  
  <metadata name="MetadataSample">  
    <value>Sample METADATA value</value>  
  </metadata>  
</root>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">В операций присвоения перечислитель для файла ресурсов или потока уже открыт.</exception>
      </Docs>
    </Member>
  </Members>
</Type>