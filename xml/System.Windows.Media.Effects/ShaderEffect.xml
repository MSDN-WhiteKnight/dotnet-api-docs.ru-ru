<Type Name="ShaderEffect" FullName="System.Windows.Media.Effects.ShaderEffect">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e56e17a4be59e38901f9a9c8ec0a1d057d18b02" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53477210" /></Metadata><TypeSignature Language="C#" Value="public abstract class ShaderEffect : System.Windows.Media.Effects.Effect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ShaderEffect extends System.Windows.Media.Effects.Effect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Effects.ShaderEffect" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ShaderEffect&#xA;Inherits Effect" />
  <TypeSignature Language="C++ CLI" Value="public ref class ShaderEffect abstract : System::Windows::Media::Effects::Effect" />
  <TypeSignature Language="F#" Value="type ShaderEffect = class&#xA;    inherit Effect" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Effects.Effect</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет настраиваемый эффект растрового изображения с использованием объекта <see cref="T:System.Windows.Media.Effects.PixelShader" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Являются производными от <xref:System.Windows.Media.Effects.ShaderEffect> для реализации настраиваемого эффекта на основе одной текстуры.  
  
 Ниже показано, как создать настраиваемого эффекта.  
  
1.  Нагрузки <xref:System.Windows.Media.Effects.PixelShader> из предварительно скомпилированного байт-код высокой уровень заливки языка (HLSL).  
  
2.  Задайте свойства зависимости, которые представляют параметры эффекта и <xref:System.Windows.Media.Brush>-значения поверхности на основе. Используйте один из <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> перегрузок, чтобы связать эти входные данные с зарегистрировать номера, на которые имеются ссылки в байт-кода HLSL.  
  
 Число проб ограничено 4.  
  
 При использовании шейдера PS 3.0, применяются следующие ограничения.  
  
-   При назначении шейдера PS 3.0 количество образцов увеличивается до 8. Назначьте шейдер PS 3.0 перед другими, чтобы включить регистрацию 8 проб.  
  
-   Используется ограничение регистром константы полного шейдера 224 для значений с плавающей запятой. Дополнительные сведения см. в разделе [ps_3_0](https://go.microsoft.com/fwlink/?LinkId=166292).  
  
-   Следующие типы данных поддерживаются в только построители текстуры PS 3.0. Исключение возникает в том случае, если они используются в шейдере более ранней версии.  
  
    -   `int` и типов можно преобразовать в `int`: `uint`, `byte`, `sbyte`, `long`, `ulong`, `short`, `ushort`, `char`  
  
    -   `bool`  
  
-   Если допустимый шейдер PS 3.0 загружается на компьютере, который не имеет оборудования поддержка PS 3.0, шейдер игнорируется. Если шейдер является недопустимым, исключение не создается.  
  
-   Если компьютер имеет несколько видеоадаптер, поведение определяется наихудшими видеоадаптера. Например, если на компьютере установлено два видео адаптера, один из которых поддерживает PS 3.0, а один из которых нет, поведение совпадает, если компьютер не поддерживает PS 3.0.  
  
-   Если компьютер поддерживает отрисовки PS 3.0 в оборудовании, но присваивается недопустимое шейдера PS 3.0, <xref:System.Windows.Media.Effects.PixelShader.InvalidPixelShaderEncountered> события. Например недопустимый шейдера PS 3.0, скомпилированная с `ps_3_sw` флаг. <xref:System.Windows.Media.Effects.ShaderEffect> Класс принимает только построители текстуры PS 3.0, которые компилируются с `ps_3_0` флаг передается fxc.exe. Дополнительные сведения см. в разделе [средства компиляции эффект](https://go.microsoft.com/fwlink/?LinkId=166293).  
  
> [!NOTE]
>  PS шейдеры 2.0 выполняются при подготовке к просмотру в программном обеспечении. Тем не менее даже если PS 3.0 поддерживается оборудованием системы, построители текстуры PS 3.0 не выполняются во время отрисовки программного обеспечения.  
  
   
  
## Examples  
 В следующем примере кода показано, как выполнять наследование <xref:System.Windows.Media.Effects.ShaderEffect> класса.  
  
 [!code-csharp[System.Windows.Media.Effects.ShaderEffect#1](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/ThresholdEffect.cs#1)]  
  
 В следующем примере кода показано, шейдер, который соответствует предыдущему <xref:System.Windows.Media.Effects.ShaderEffect> класса.  
  
 [!code-csharp[System.Windows.Media.Effects.ShaderEffect#10](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/Threshold.fx#10)]  
  
 Следующий XAML демонстрируется использование настраиваемого эффекта построителя текстуры.  
  
 [!code-xaml[System.Windows.Media.Effects.ShaderEffect#1000](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/Window1.xaml#1000)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">для полного доступа к ресурсам пользовательского интерфейса. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
    <altmember cref="T:System.Windows.Media.Effects.Effect" />
    <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ShaderEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ShaderEffect();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Media.Effects.ShaderEffect" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.ShaderEffect Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.ShaderEffect Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ShaderEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::ShaderEffect ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Effects.ShaderEffect" Usage="shaderEffect.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.ShaderEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает изменяемый клон данного объекта <see cref="T:System.Windows.Media.Effects.ShaderEffect" />, делая глубокие копии значений этого объекта. При копировании свойств зависимостей объекта этот метод копирует ссылки на ресурсы и привязки данных (которые могут уже не быть разрешимыми), но не копирует анимации и их текущие значения.</summary>
        <returns>Модифицируемая копия этого экземпляра. Возвращаемая копия является глубокой копией текущего объекта. Свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> клона имеет значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Effects.ShaderEffect.Clone%2A> Метод может использоваться для создания изменяемой копии замороженный <xref:System.Windows.Freezable> объектов. Для удобства этот метод переопределяет унаследованный <xref:System.Windows.Freezable.Clone%2A> метод, чтобы предоставить реализацию.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="shaderEffect.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">Объект, используемый для клонирования.</param>
        <summary>Делает экземпляр клоном (глубокой копией) указанного объекта <see cref="T:System.Windows.Freezable" />, используя базовые (без анимации) значения свойств.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.ShaderEffect CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.ShaderEffect CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As ShaderEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::ShaderEffect ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.Effects.ShaderEffect" Usage="shaderEffect.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.ShaderEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает модифицируемый клон данного объекта <see cref="T:System.Windows.Media.Effects.ShaderEffect" />, делая глубокие копии текущих значений этого объекта. Ссылки на ресурсы, привязки данных и анимации не копируются, в отличие от их текущих значений.</summary>
        <returns>Изменяемая копия текущего объекта. Свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> клонированного объекта будет содержать значение <see langword="false" />, даже если свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> исходного объекта содержало значение <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется для создания изменяемой копии замороженный <xref:System.Windows.Freezable> объектов (или любой <xref:System.Windows.Freezable> объекта). Для удобства этот метод переопределяет наследуемую версию с помощью строго типизированной реализации.  
  
 Для получения дополнительной информации см. <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="shaderEffect.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">Элемент привязки <see cref="T:System.Windows.Freezable" />, точную копию которого необходимо создать.</param>
        <summary>Делает экземпляр изменяемым клоном (глубокой копией) указанного объекта <see cref="T:System.Windows.Freezable" /> с использованием текущих значений свойств.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="shaderEffect.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр производного класса <see cref="T:System.Windows.Freezable" />.</summary>
        <returns>Новый экземпляр.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DdxUvDdyUvRegisterIndex">
      <MemberSignature Language="C#" Value="protected int DdxUvDdyUvRegisterIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DdxUvDdyUvRegisterIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex" />
      <MemberSignature Language="VB.NET" Value="Protected Property DdxUvDdyUvRegisterIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int DdxUvDdyUvRegisterIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DdxUvDdyUvRegisterIndex : int with get, set" Usage="System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее построитель текстуры, который необходимо использовать для частичных производных координат текстуры по отношению к экранному пространству.</summary>
        <value>Индекс регистра, который содержит частичные производные.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A> координирует свойство, чтобы указать регистр шейдера, который содержит частичные производные текстуры по отношению к пространство экрана. Например если <xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A> имеет значение 4, используется c4 регистра построителя текстуры. Регистрация c4 содержит четыре поля с плавающей запятой. В следующем коде высокий уровень заливки языка (HLSL) показано, как используется этот регистр. `nextPixelUV` Значение представляет следующую точку справа.  
  
```  
float4 ddxUvDdyUv : register(c4);  
SamplerState  sampler : register(S0);  
...  
float2 nextPixelUV;  
nextPixelUV.u = ddxUvDdyUv.x + u;  
nextPixelUV.v = ddxUvDdyUv.y + v;  
  
tex2D(sampler, nextPixelUV);  
```  
  
 В следующей таблице показано, как указано регистра для <xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A> заполняется.  
  
|Константа регистра|Класс, производный от значение|  
|-----------------------|----------------------|  
|компонент x|DDX(u)|  
|компонент y|DDX(v)|  
|компонент z|ddy(u)|  
|компонент w|ddy(v)|  
  
 Координаты текстуры, обозначаются как `(u, v)`. `ddx(u)` является постоянным частичным производным компонента координат текстуры `u` по отношению к оси x пространство экрана. `ddy(u)` — Это частичное производное координаты текстуры `u` по отношению к координату по оси y пространство экрана. Аналогичным образом `ddx(v)` и `ddy(v)` имеют соответствующие производные экранного пространства для компонента координаты текстуры `v`.  
  
> [!NOTE]
>  HLSL имеет ddx и ddy инструкциям, чтобы вычислить эти значения, но эти инструкции не доступны на всем оборудовании PixelShader 2.0.  
  
 Можно сравнить эти константы следующим образом. Если шаг 1 пиксель справа в пространстве экрана (по оси x), затем `ddx(u)` — это сумма, `u` изменения в пространстве текстуры и `ddx(v)` — это сумма, `v` изменения в пространстве текстуры. Если результат является выровненный по осям при его отрисовке, затем `ddx(v)` равно 0. Если эффект вращается при прорисовке, затем `ddx(v)` имеет ненулевое значение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Была совершена попытка задать свойство <see cref="P:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex" /> несколько раз или после начальной обработки эффекта.</exception>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="shaderEffect.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">Копируемый экземпляр.</param>
        <summary>Делает экземпляр зафиксированной копией указанного <see cref="T:System.Windows.Freezable" />, используя базовые (без анимации) значения свойств.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="shaderEffect.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">Объект <see cref="T:System.Windows.Freezable" />, который необходимо скопировать и заморозить.</param>
        <summary>Создает текущий экземпляр замороженной копии указанного объекта <see cref="T:System.Windows.Freezable" />. Если объект имеет анимированные свойства зависимостей, копируются их текущие анимированные значения.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="PaddingBottom">
      <MemberSignature Language="C#" Value="protected double PaddingBottom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PaddingBottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.PaddingBottom" />
      <MemberSignature Language="VB.NET" Value="Protected Property PaddingBottom As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property double PaddingBottom { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PaddingBottom : double with get, set" Usage="System.Windows.Media.Effects.ShaderEffect.PaddingBottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, что текстура вывода эффекта больше, чем текстура ввода вдоль нижнего края.</summary>
        <value>Заполнение вдоль нижнего края эффекта.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение меньше 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="PaddingLeft">
      <MemberSignature Language="C#" Value="protected double PaddingLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PaddingLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.PaddingLeft" />
      <MemberSignature Language="VB.NET" Value="Protected Property PaddingLeft As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property double PaddingLeft { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PaddingLeft : double with get, set" Usage="System.Windows.Media.Effects.ShaderEffect.PaddingLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, что текстура вывода эффекта больше, чем текстура ввода вдоль левого края.</summary>
        <value>Заполнение вдоль левого края эффекта.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение меньше 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="PaddingRight">
      <MemberSignature Language="C#" Value="protected double PaddingRight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PaddingRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.PaddingRight" />
      <MemberSignature Language="VB.NET" Value="Protected Property PaddingRight As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property double PaddingRight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PaddingRight : double with get, set" Usage="System.Windows.Media.Effects.ShaderEffect.PaddingRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, что текстура вывода эффекта больше, чем текстура ввода вдоль правого края.</summary>
        <value>Заполнение вдоль правого края эффекта.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение меньше 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="PaddingTop">
      <MemberSignature Language="C#" Value="protected double PaddingTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PaddingTop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.PaddingTop" />
      <MemberSignature Language="VB.NET" Value="Protected Property PaddingTop As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property double PaddingTop { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PaddingTop : double with get, set" Usage="System.Windows.Media.Effects.ShaderEffect.PaddingTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, что текстура вывода эффекта больше, чем текстура ввода вдоль верхнего края.</summary>
        <value>Заполнение вдоль верхнего края эффекта.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение меньше 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="PixelShader">
      <MemberSignature Language="C#" Value="protected System.Windows.Media.Effects.PixelShader PixelShader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.PixelShader PixelShader" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.PixelShader" />
      <MemberSignature Language="VB.NET" Value="Protected Property PixelShader As PixelShader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Media::Effects::PixelShader ^ PixelShader { System::Windows::Media::Effects::PixelShader ^ get(); void set(System::Windows::Media::Effects::PixelShader ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PixelShader : System.Windows.Media.Effects.PixelShader with get, set" Usage="System.Windows.Media.Effects.ShaderEffect.PixelShader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.PixelShader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект <see cref="T:System.Windows.Media.Effects.PixelShader" /> для использования применительно к эффекту.</summary>
        <value>Объект <see cref="T:System.Windows.Media.Effects.PixelShader" /> для эффекта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PixelShader"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty>|  
|Значение свойства метаданных `true`|Нет|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="PixelShaderConstantCallback">
      <MemberSignature Language="C#" Value="protected static System.Windows.PropertyChangedCallback PixelShaderConstantCallback (int floatRegisterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Windows.PropertyChangedCallback PixelShaderConstantCallback(int32 floatRegisterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function PixelShaderConstantCallback (floatRegisterIndex As Integer) As PropertyChangedCallback" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Windows::PropertyChangedCallback ^ PixelShaderConstantCallback(int floatRegisterIndex);" />
      <MemberSignature Language="F#" Value="static member PixelShaderConstantCallback : int -&gt; System.Windows.PropertyChangedCallback" Usage="System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback floatRegisterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyChangedCallback</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="floatRegisterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="floatRegisterIndex">Индекс регистра построителя текстуры, связанного со свойством зависимостей.</param>
        <summary>Связывает значение свойства зависимостей с регистром константы с плавающей точкой построителя текстуры.</summary>
        <returns>Делегат <see cref="T:System.Windows.PropertyChangedCallback" />, который связывает свойство зависимостей и регистр константы построителя текстуры, заданный в параметре <paramref name="floatRegisterIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback%2A> метод при регистрации свойства зависимостей для константы построителя текстуры. <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback%2A> Конструкции метод <xref:System.Windows.PropertyChangedCallback> делегат, при вызове создает связь между свойством зависимостей и регистр константы построителя текстуры, определяемое `floatRegisterIndex`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Свойство зависимостей относится к неизвестному типу.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="floatRegisterIndex" /> имеет значение больше или равно 32, а параметр <paramref name="floatRegisterIndex" /> — меньше 0.</exception>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="PixelShaderProperty">
      <MemberSignature Language="C#" Value="protected static readonly System.Windows.DependencyProperty PixelShaderProperty;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly class System.Windows.DependencyProperty PixelShaderProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly PixelShaderProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Windows::DependencyProperty ^ PixelShaderProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PixelShaderProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет свойство зависимостей <see cref="P:System.Windows.Media.Effects.ShaderEffect.PixelShader" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PixelShaderSamplerCallback">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Связывает значение свойства зависимостей с регистром образца построителя текстуры.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PixelShaderSamplerCallback">
      <MemberSignature Language="C#" Value="protected static System.Windows.PropertyChangedCallback PixelShaderSamplerCallback (int samplerRegisterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Windows.PropertyChangedCallback PixelShaderSamplerCallback(int32 samplerRegisterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function PixelShaderSamplerCallback (samplerRegisterIndex As Integer) As PropertyChangedCallback" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Windows::PropertyChangedCallback ^ PixelShaderSamplerCallback(int samplerRegisterIndex);" />
      <MemberSignature Language="F#" Value="static member PixelShaderSamplerCallback : int -&gt; System.Windows.PropertyChangedCallback" Usage="System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback samplerRegisterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyChangedCallback</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samplerRegisterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="samplerRegisterIndex">Индекс образца построителя текстуры, связанного со свойством зависимостей.</param>
        <summary>Связывает значение свойства зависимостей с регистром образца построителя текстуры.</summary>
        <returns>Делегат <see cref="T:System.Windows.PropertyChangedCallback" />, который связывает свойство зависимостей и регистр образца построителя текстуры, заданный в параметре <paramref name="samplerRegisterIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback%2A> метод при регистрации <xref:System.Windows.Media.Brush>-табличные значения свойства зависимостей для образца построителя текстуры. <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback%2A> Конструкции метод <xref:System.Windows.PropertyChangedCallback> делегат, при вызове создает связь между свойству зависимостей, а также построителя текстуры, определяемое `samplerRegisterIndex`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="PixelShaderSamplerCallback">
      <MemberSignature Language="C#" Value="protected static System.Windows.PropertyChangedCallback PixelShaderSamplerCallback (int samplerRegisterIndex, System.Windows.Media.Effects.SamplingMode samplingMode);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Windows.PropertyChangedCallback PixelShaderSamplerCallback(int32 samplerRegisterIndex, valuetype System.Windows.Media.Effects.SamplingMode samplingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Windows::PropertyChangedCallback ^ PixelShaderSamplerCallback(int samplerRegisterIndex, System::Windows::Media::Effects::SamplingMode samplingMode);" />
      <MemberSignature Language="F#" Value="static member PixelShaderSamplerCallback : int * System.Windows.Media.Effects.SamplingMode -&gt; System.Windows.PropertyChangedCallback" Usage="System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback (samplerRegisterIndex, samplingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyChangedCallback</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samplerRegisterIndex" Type="System.Int32" />
        <Parameter Name="samplingMode" Type="System.Windows.Media.Effects.SamplingMode" />
      </Parameters>
      <Docs>
        <param name="samplerRegisterIndex">Индекс образца построителя текстуры, связанного со свойством зависимостей.</param>
        <param name="samplingMode">Объект <see cref="T:System.Windows.Media.Effects.SamplingMode" /> для образца построителя текстуры.</param>
        <summary>Связывает значение свойства зависимостей с регистром образца построителя текстуры и объектом <see cref="T:System.Windows.Media.Effects.SamplingMode" />.</summary>
        <returns>Делегат <see cref="T:System.Windows.PropertyChangedCallback" />, который связывает свойство зависимостей и регистр образца построителя текстуры, заданный в параметре <paramref name="samplerRegisterIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> метод при регистрации <xref:System.Windows.Media.Brush>-табличные значения свойства зависимостей для образца построителя текстуры. <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> Конструкции метод <xref:System.Windows.PropertyChangedCallback> делегат, при вызове создает связь между свойству зависимостей, а также построителя текстуры, определяемое `samplerRegisterIndex`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterPixelShaderSamplerProperty">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Связывает свойство зависимостей с регистром образца построителя текстуры.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterPixelShaderSamplerProperty">
      <MemberSignature Language="C#" Value="protected static System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty (string dpName, Type ownerType, int samplerRegisterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty(string dpName, class System.Type ownerType, int32 samplerRegisterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function RegisterPixelShaderSamplerProperty (dpName As String, ownerType As Type, samplerRegisterIndex As Integer) As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Windows::DependencyProperty ^ RegisterPixelShaderSamplerProperty(System::String ^ dpName, Type ^ ownerType, int samplerRegisterIndex);" />
      <MemberSignature Language="F#" Value="static member RegisterPixelShaderSamplerProperty : string * Type * int -&gt; System.Windows.DependencyProperty" Usage="System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty (dpName, ownerType, samplerRegisterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dpName" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="samplerRegisterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dpName">Имя свойства зависимостей.</param>
        <param name="ownerType">Тип эффекта со свойством зависимостей.</param>
        <param name="samplerRegisterIndex">Индекс образца построителя текстуры, связанного со свойством зависимостей.</param>
        <summary>Связывает свойство зависимостей с регистром образца построителя текстуры.</summary>
        <returns>Свойство зависимостей, связанное с образцом построителя текстуры, указанного в параметре <paramref name="samplerRegisterIndex" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="RegisterPixelShaderSamplerProperty">
      <MemberSignature Language="C#" Value="protected static System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty (string dpName, Type ownerType, int samplerRegisterIndex, System.Windows.Media.Effects.SamplingMode samplingMode);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty(string dpName, class System.Type ownerType, int32 samplerRegisterIndex, valuetype System.Windows.Media.Effects.SamplingMode samplingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Windows::DependencyProperty ^ RegisterPixelShaderSamplerProperty(System::String ^ dpName, Type ^ ownerType, int samplerRegisterIndex, System::Windows::Media::Effects::SamplingMode samplingMode);" />
      <MemberSignature Language="F#" Value="static member RegisterPixelShaderSamplerProperty : string * Type * int * System.Windows.Media.Effects.SamplingMode -&gt; System.Windows.DependencyProperty" Usage="System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty (dpName, ownerType, samplerRegisterIndex, samplingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dpName" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="samplerRegisterIndex" Type="System.Int32" />
        <Parameter Name="samplingMode" Type="System.Windows.Media.Effects.SamplingMode" />
      </Parameters>
      <Docs>
        <param name="dpName">Имя свойства зависимостей.</param>
        <param name="ownerType">Тип эффекта со свойством зависимостей.</param>
        <param name="samplerRegisterIndex">Индекс образца построителя текстуры, связанного со свойством зависимостей.</param>
        <param name="samplingMode">Объект <see cref="T:System.Windows.Media.Effects.SamplingMode" /> для образца построителя текстуры.</param>
        <summary>Связывает свойство зависимостей с регистром образца построителя текстуры и объектом <see cref="T:System.Windows.Media.Effects.SamplingMode" />.</summary>
        <returns>Свойство зависимостей, связанное с образцом построителя текстуры, указанного в параметре <paramref name="samplerRegisterIndex" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="UpdateShaderValue">
      <MemberSignature Language="C#" Value="protected void UpdateShaderValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateShaderValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateShaderValue (dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateShaderValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.UpdateShaderValue : System.Windows.DependencyProperty -&gt; unit" Usage="shaderEffect.UpdateShaderValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">Обновляемое свойство зависимостей.</param>
        <summary>Сообщает эффекту, что константа или образец построителя текстуры, соответствующие указанному свойству зависимостей, должны обновляться.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
  </Members>
</Type>