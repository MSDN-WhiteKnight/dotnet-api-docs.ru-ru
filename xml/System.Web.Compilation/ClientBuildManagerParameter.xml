<Type Name="ClientBuildManagerParameter" FullName="System.Web.Compilation.ClientBuildManagerParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a91e7ac36abbb585ffed2bbda1985f28e3345a4" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55343669" /></Metadata><TypeSignature Language="C#" Value="public class ClientBuildManagerParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClientBuildManagerParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManagerParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientBuildManagerParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManagerParameter" />
  <TypeSignature Language="F#" Value="type ClientBuildManagerParameter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Содержит значение, передаваемое компилятору ASP.NET во время предварительной компиляции.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Веб-страницы ASP.NET и файлы кода могут быть перекомпилированы для упрощения более быстрый ответ для пользователей и обеспечить развертывание сайта без необходимости развертывать исходный код. Дополнительные сведения о предварительной компиляции веб-сайта ASP.NET, см. в разделе [Общие сведения о предварительной компиляции проектов веб-сайта ASP.NET](https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).  
  
 <xref:System.Web.Compilation.ClientBuildManagerParameter> Класс хранит значения, которые используются во время предварительной компиляции. <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Свойство определяет, как будет построена сборка. Например, можно задать <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> для <xref:System.Web.Compilation.PrecompilationFlags.Clean> повторной компиляции все ранее скомпилированные компоненты, или задайте для него значение <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> разрешить итоговой сборки, чтобы перезаписать все компоненты в целевом каталоге. <xref:System.Web.Compilation.PrecompilationFlags> Перечислитель имеет <xref:System.FlagsAttribute> атрибут, который разрешает побитовое сочетание значений его элементов. <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Свойство может содержать более одного значения из <xref:System.Web.Compilation.PrecompilationFlags> перечисление, чтобы указать сочетание предварительной компиляции поведения.  
  
 Либо <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> свойство или <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> свойству присваивается значение для создания сборки со строгими именами. Оба значения не обязательно должны задать для создания сборки со строгими именами.  
  
 Объект <xref:System.Web.Compilation.ClientBuildManagerParameter> объект передается <xref:System.Web.Compilation.ClientBuildManager> объекта через <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> конструктор.  
  
   
  
## Examples  
 В следующем примере кода является частью примера кода, приведенного в <xref:System.Web.Compilation.ClientBuildManager> Общие сведения о классе. В примере <xref:System.Web.Compilation.ClientBuildManagerParameter> создается объект и задать его значения. Итоговой сборки будет иметь строгое имя, исходя из предоставленного файла ключа и в соответствии с указанных <xref:System.Web.Compilation.PrecompilationFlags> значения.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
    <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Предварительная компиляция веб-сайта ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManagerParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManagerParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор не инициализирует все значения свойств. Эти значения необходимо задать через <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, и <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> свойства после создания объекта.  
  
   
  
## Examples  
 В следующем примере кода является частью примера кода, приведенного в <xref:System.Web.Compilation.ClientBuildManager> Общие сведения о классе. В примере <xref:System.Web.Compilation.ClientBuildManagerParameter> создается объект и задать его значения. Итоговой сборки будет иметь строгое имя, исходя из предоставленного файла ключа и в соответствии с указанных <xref:System.Web.Compilation.PrecompilationFlags> значения.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludedVirtualPaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; ExcludedVirtualPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; ExcludedVirtualPaths" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExcludedVirtualPaths As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ ExcludedVirtualPaths { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExcludedVirtualPaths : System.Collections.Generic.List&lt;string&gt;" Usage="System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает исключаемые виртуальные пути.</summary>
        <value>Исключаемые виртуальные пути.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecompilationFlags">
      <MemberSignature Language="C#" Value="public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Compilation.PrecompilationFlags PrecompilationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecompilationFlags As PrecompilationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Compilation::PrecompilationFlags PrecompilationFlags { System::Web::Compilation::PrecompilationFlags get(); void set(System::Web::Compilation::PrecompilationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.PrecompilationFlags : System.Web.Compilation.PrecompilationFlags with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.PrecompilationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает флаги, которыми определяется порядок предварительной компиляции.</summary>
        <value>Перечисление <see cref="T:System.Web.Compilation.PrecompilationFlags" /> для клиентского построения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Свойство определяет, как будет построена сборка. Например, можно задать <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> для <xref:System.Web.Compilation.PrecompilationFlags.Clean> повторной компиляции все ранее скомпилированные компоненты, или задайте для него значение <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> разрешить итоговой сборки, чтобы перезаписать все компоненты в целевом каталоге. <xref:System.Web.Compilation.PrecompilationFlags> Перечислитель имеет <xref:System.FlagsAttribute> атрибут, который разрешает побитовое сочетание значений его элементов. <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Свойство может содержать более одного значения из <xref:System.Web.Compilation.PrecompilationFlags> перечисление, чтобы указать сочетание предварительной компиляции поведения.  
  
   
  
## Examples  
 В следующем примере кода является частью примера кода, приведенного в <xref:System.Web.Compilation.ClientBuildManager> Общие сведения о классе. В примере <xref:System.Web.Compilation.ClientBuildManagerParameter> создается объект и задать его значения. Итоговой сборки будет иметь строгое имя, исходя из предоставленного файла ключа и в соответствии с указанных <xref:System.Web.Compilation.PrecompilationFlags> значения.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Предварительная компиляция веб-сайта ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyContainer">
      <MemberSignature Language="C#" Value="public string StrongNameKeyContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyContainer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyContainer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameKeyContainer : string with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает контейнер ключа, используемый во время компиляции.</summary>
        <value>Объект <see cref="T:System.String" /> значения, заданного для контейнера ключа.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Либо <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> свойство или <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> свойству присваивается значение для создания сборки со строгими именами. Оба значения не обязательно должны задать для создания сборки со строгими именами.  
  
   
  
## Examples  
 В следующем примере кода похож на код примера, приведенного в <xref:System.Web.Compilation.ClientBuildManager> Обзор класса, за исключением того, что итоговой сборки будет иметь строгое имя, в зависимости от предоставленного контейнера ключа. Он будет предварительной компиляции в соответствии с указанных <xref:System.Web.Compilation.PrecompilationFlags> значения.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/CS/source.cs#1)]
 [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Предварительная компиляция веб-сайта ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f3022b39-f17f-48c1-b067-025eab0ce8bc">Импорт и экспорт защищенных контейнеров ключей RSA конфигурации</related>
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyFile">
      <MemberSignature Language="C#" Value="public string StrongNameKeyFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameKeyFile : string with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает файл ключа, используемый во время компиляции.</summary>
        <value>Объект <see cref="T:System.String" /> значения, заданного для файла ключа.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Либо <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> свойство или <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> свойству присваивается значение для создания сборки со строгими именами. Оба значения не обязательно должны задать для создания сборки со строгими именами.  
  
   
  
## Examples  
 В следующем примере кода является частью примера кода, приведенного в <xref:System.Web.Compilation.ClientBuildManager> Общие сведения о классе. В примере <xref:System.Web.Compilation.ClientBuildManagerParameter> создается объект и задать его значения. Итоговой сборки будет иметь строгое имя, исходя из предоставленного файла ключа и в соответствии с указанных <xref:System.Web.Compilation.PrecompilationFlags> значения.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Предварительная компиляция веб-сайта ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/ffbf6d9e-4a88-4a8a-9645-4ce0ee1ee5f9">Создание и использование сборок со строгими именами</related>
      </Docs>
    </Member>
  </Members>
</Type>