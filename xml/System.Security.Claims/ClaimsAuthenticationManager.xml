<Type Name="ClaimsAuthenticationManager" FullName="System.Security.Claims.ClaimsAuthenticationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="10292ce7dd245b3f3cdb26ecfc6eb397301111ad" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53296479" /></Metadata><TypeSignature Language="C#" Value="public class ClaimsAuthenticationManager : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClaimsAuthenticationManager extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsAuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsAuthenticationManager&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsAuthenticationManager : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type ClaimsAuthenticationManager = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Определяет базовую реализацию диспетчера аутентификации утверждений. Диспетчер аутентификации утверждений предоставляет место в конвейере обработки утверждений для применения логики обработки (фильтрации, проверки, расширения) коллекции утверждений во входящем субъекте до того, как очередность выполнения достигает кода приложения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Диспетчер проверки подлинности предоставляет точку расширения в приложения утверждений конвейер обработки, можно использовать для проверки, фильтрации, изменить утверждения, входящих утверждений или внедрить новые утверждения в набор утверждений, представленных <xref:System.Security.Claims.ClaimsPrincipal> перед RP выполняется код приложения. Можно даже вернуть пользовательскую реализацию <xref:System.Security.Claims.ClaimsPrincipal> Если это необходимо приложению проверяющей Стороны. Реализация по умолчанию, предоставляемые <xref:System.Security.Claims.ClaimsAuthenticationManager> класс возвращает утверждения в <xref:System.Security.Claims.ClaimsPrincipal> без изменений; тем не менее, могут наследовать от этого класса и переопределять <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> методу изменять утверждения в <xref:System.Security.Claims.ClaimsPrincipal> (или для возвращения пользовательского <xref:System.Security.Claims.ClaimsPrincipal>).  
  
 Для добавления, удаления или преобразования утверждений на основе сведений, известно только или возможно, лучше поддерживаемое приложение проверяющей Стороны является типичной причиной для создания диспетчера с проверкой подлинности пользовательских утверждений. Например, История о покупках в приложении корзины покупок может храниться в базу данных обслуживается приложение проверяющей Стороны и затем добавляются субъекта утверждений, возвращенного диспетчер аутентификации утверждений на основе значения утверждения имени в входящий субъект.  
  
 Можно настроить приложение для использования `ClaimsAuthenticationManager` либо программно с помощью <xref:System.IdentityModel.Configuration.IdentityConfiguration> класса или в конфигурации через [ &lt;claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md) элемент () который является дочерним элементом элемента [ &lt;identityConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) элемент). Можно переопределить <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> метод, чтобы обеспечить обработку для пользовательского дочерними элементами элемента `<claimsAuthenticationManager>` элемент, через который можно настроить пользовательские руководителю. Базовая реализация <xref:System.Security.Claims.ClaimsAuthenticationManager> не обрабатывает ни одного дочернего элемента.  
  
 Настройка приложения для использования диспетчера аутентификации утверждений гарантирует, что он будет вызываться по Windows Identity Foundation (WIF) из конвейера запросов.  
  
   
  
## Examples  
 В следующем коде показано с проверкой подлинности простых утверждений диспетчер, который добавляет утверждение роли входящий субъект без проверки на входящие утверждения. 
  
 [!code-csharp[WifWebApplication1#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwebapplication1/cs/myclaimsauthenticationmanager/simpleclaimsauthenticatonmanager.cs#1)]  
  
 Следующий код XML показывает `<claimsAuthenticationManager>` элемент.  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <claimsAuthenticationManager type="MyClaimsAuthenticationManager.SimpleClaimsAuthenticatonManager, MyClaimsAuthenticationManager" />  
  
    ...  
  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsAuthenticationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsAuthenticationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Claims.ClaimsAuthenticationManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsPrincipal Authenticate (string resourceName, System.Security.Claims.ClaimsPrincipal incomingPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsPrincipal Authenticate(string resourceName, class System.Security.Claims.ClaimsPrincipal incomingPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Authenticate (resourceName As String, incomingPrincipal As ClaimsPrincipal) As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsPrincipal ^ Authenticate(System::String ^ resourceName, System::Security::Claims::ClaimsPrincipal ^ incomingPrincipal);" />
      <MemberSignature Language="F#" Value="abstract member Authenticate : string * System.Security.Claims.ClaimsPrincipal -&gt; System.Security.Claims.ClaimsPrincipal&#xA;override this.Authenticate : string * System.Security.Claims.ClaimsPrincipal -&gt; System.Security.Claims.ClaimsPrincipal" Usage="claimsAuthenticationManager.Authenticate (resourceName, incomingPrincipal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="incomingPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
      </Parameters>
      <Docs>
        <param name="resourceName">Адрес запрашиваемого ресурса.</param>
        <param name="incomingPrincipal">Субъект утверждений, который представляет аутентифицированного пользователя, который пытается получить доступ к ресурсу.</param>
        <summary>При переопределении в производном классе возвращает объект <see cref="T:System.Security.Claims.ClaimsPrincipal" />, совместимый с требованиями приложения RP. Реализация по умолчанию не изменяет входящий объект <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</summary>
        <returns>Субъект требований, который содержит все изменения, необходимые для приложения RP. Реализация по умолчанию возвращает входящий субъект утверждений неизмененным.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> Метод вызывается из конвейера обработки запросов, можно переопределить этот метод в производном классе для фильтрации, изменения или внедрить утверждений в субъект утверждений в соответствии с политикой приложения RP. В зависимости от требований приложения RP, можно даже вернуть пользовательскую реализацию <xref:System.Security.Claims.ClaimsPrincipal>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="claimsAuthenticationManager.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">Пользовательские элементы конфигурации. Каждый узел в списке имеет тип <see cref="T:System.Xml.XmlElement" />.</param>
        <summary>При переопределении в производном классе загружает пользовательскую конфигурацию из XML-кода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> Метод вызывается в инфраструктуре конфигурации. При вызове этого метода, `nodelist` будет содержать верхнего уровня дочерние элементы [ &lt;claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md) элемент из файла конфигурации. Каждый из этих элементов может в свою очередь, содержат атрибуты или дочерние элементы в зависимости от конфигурации схемы, определяемые для производного класса. Если нет дочерних элементов отображается под `<claimsAuthenticationManager>` элемент в файле конфигурации, этот метод не вызывается.  
  
 Реализация по умолчанию вызывает <xref:System.NotImplementedException>. Переопределите этот метод в производном классе позволяет включить инициализацию диспетчера аутентификации утверждений из файла конфигурации. Например элементы конфигурации может описывать политики следует соблюдать при проверке подлинности субъекта утверждений; или они могут использоваться для указания хранилище атрибутов, из которого должны быть добавлены субъекту дополнительные утверждения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>