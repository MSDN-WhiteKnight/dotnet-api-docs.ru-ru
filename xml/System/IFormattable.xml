<Type Name="IFormattable" FullName="System.IFormattable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2576510961cb47b6ac9c492844f7dae58d8f64e" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48589820" /></Metadata><TypeSignature Language="C#" Value="public interface IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.IFormattable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormattable" />
  <TypeSignature Language="F#" Value="type IFormattable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет функциональные возможности для форматирования значения объекта в представление строки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormattable> Интерфейс преобразует объект в его строковое представление, в зависимости от строки формата и поставщик форматирования.  
  
 Строка формата обычно определяет общий внешний вид объекта. Например .NET Framework поддерживает следующие функции:  
  
-   Строки стандартного формата для форматирования значения перечисления (см. в разделе [строки форматов перечисления](~/docs/standard/base-types/enumeration-format-strings.md)).  
  
-   Стандартные и настраиваемые формат строк для форматирования числовых значений (см. в разделе [строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md) и [пользовательские строки форматирования чисел](~/docs/standard/base-types/custom-numeric-format-strings.md)).  
  
-   Стандартные и настраиваемые формат строк для форматирования значений даты и времени (см. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательские строки даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).  
  
-   Стандартные и настраиваемые формат строк для форматирования временных интервалов (см. в разделе [строки стандартного формата TimeSpan](~/docs/standard/base-types/standard-timespan-format-strings.md) и [строки пользовательского формата TimeSpan](~/docs/standard/base-types/custom-timespan-format-strings.md)).  
  
 Можно также определить собственные строки формата для поддержки форматирования типов определяемые приложением.  
  
 Поставщик формата возвращает объект форматирования, который обычно определяет символы, используемые при преобразовании объекта в строковое представление. Например при преобразовании числа в виде денежного значения, поставщик формата определяет символ валюты, который отображается в результирующей строке. Платформа .NET Framework определяет три поставщика формата:  
  
-   <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> Класс, который возвращает один <xref:System.Globalization.NumberFormatInfo> объект для форматирования числовых значений или <xref:System.Globalization.DateTimeFormatInfo> объект для форматирования значений даты и времени.  
  
-   <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> Класс, который возвращает экземпляр самой себя для форматирования числовых значений.  
  
-   <xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType> Класс, который возвращает экземпляр самой себя для форматирования значений даты и времени.  
  
 Кроме того можно определить собственные поставщики настраиваемого формата для предоставления конкретного языка, профессии, специфичные для или сведения, относящиеся к отрасли, используемый при форматировании. Дополнительные сведения о реализации пользовательского форматирования с помощью поставщика пользовательского формата, см. в разделе <xref:System.ICustomFormatter>.  
  
 <xref:System.IFormattable> Интерфейс определяет единственный метод, <xref:System.IFormattable.ToString%2A>, который предоставляет службы форматирования для реализующего типа. <xref:System.IFormattable.ToString%2A> Метод может вызываться напрямую. Кроме того, он вызывается автоматически <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> и <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> методов и методы, использующие [составного форматирования](~/docs/standard/base-types/composite-formatting.md) в .NET Framework. Такие методы включают <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, <xref:System.String.Format%2A?displayProperty=nameWithType>, и <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, среди прочего. <xref:System.IFormattable.ToString%2A> Метод вызывается для каждого элемента форматирования в строке формата метода.  
  
 <xref:System.IFormattable> Интерфейс реализуется в базовые типы данных.  
  
   
  
## Examples  
 В следующем примере определяется класс `Temperature` , реализующий интерфейс <xref:System.IFormattable> . Класс поддерживает четыре описателей формата: «G» и «C», которое показывает, что температура будет отображаться по Цельсию; «F», который указывает, что температура для отображения в градусах Фаренгейта; и «K», который указывает, что температура для отображения в градусах Кельвина. Кроме того <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> реализации также может обработать строку формата, который является `null` или пустым. Два других `ToString` методы, определенные `Temperature` класс просто помещаю вызов <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> реализации.  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 В следующем примере затем вызывается <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> реализации напрямую или с помощью строки составного формата.  
  
 [!code-csharp[System.IFormattable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#2)]
 [!code-vb[System.IFormattable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Классы, которые требуется дополнительный контроль над форматированием строк, чем <see cref="M:System.Object.ToString" /> предоставляет следует реализовать <see cref="T:System.IFormattable" />.  
  
Класс, реализующий <see cref="T:System.IFormattable" /> должен поддерживать описатель «G» (Общие) формате. Кроме описатель «G» в классе можно определить список спецификаторов формата, он поддерживает. Кроме того, класс должен быть подготовлен для обработки описатель формата, который является <see langword="null" />. Дополнительные сведения о форматировании и коды форматирования, см. в разделе [типы форматирования](~/docs/standard/base-types/formatting-types.md)</para></block>
    <altmember cref="T:System.IFormatProvider" />
    <altmember cref="M:System.Object.ToString" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
    <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Типы форматирования в .NET</related>
  </Docs>
  <Members>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="abstract member ToString : string * IFormatProvider -&gt; string" Usage="iFormattable.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">Используемый формат.  
  
- или - 
Пустая ссылка (<see langword="Nothing" /> в Visual Basic) для использования формата по умолчанию, определенного для типа реализации<see cref="T:System.IFormattable" />.</param>
        <param name="formatProvider">Поставщик для использования формата значения.  
  
- или - 
Пустая ссылка (<see langword="Nothing" /> в Visual Basic) для получения сведений о формате чисел из текущего установленного в операционной системе языкового стандарта.</param>
        <summary>Форматирует значение текущего экземпляра, используя указанный формат.</summary>
        <returns>Значение текущего экземпляра в указанном формате.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormattable.ToString%2A> Метод преобразует значение в строковое представление, которые можно выразить несколькими способами. Его точный формат зависит от того, специальные символы или указанного порядке, определяемом по определенной культуры профессиях и отраслях. Метод можно вызывать напрямую. Он также вызывается автоматически <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> и <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> методов и методы, использующие составное форматирование в .NET Framework, такие как <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, и <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>. (Дополнительные сведения см. в разделе [составное форматирование](~/docs/standard/base-types/composite-formatting.md).)  
  
 Составное форматирование вызов методов <xref:System.IFormattable.ToString%2A> метод один раз для каждого элемента форматирования в строке формата. Параметры, переданные методу зависят от конкретного метода форматирования, который вызывается и содержимое элемента форматирования, следующим образом:  
  
-   Если элемент формата не включает строку формата (например, в том случае, если элемент формата — это просто `{0}`), он передается `null` для параметра <xref:System.String?displayProperty=nameWithType> параметр.  
  
-   Если элемент формата включает строку формата (например, `{0:G}`), что строка формата передается в качестве значения <xref:System.String?displayProperty=nameWithType> параметра.  
  
-   Если не имеет исходного вызова метода <xref:System.IFormatProvider?displayProperty=nameWithType> параметра <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> передается в качестве значения <xref:System.IFormatProvider?displayProperty=nameWithType> параметра.  
  
-   Если исходный вызов метода содержит <xref:System.IFormatProvider?displayProperty=nameWithType> параметр, поставщика, указанное в вызове метода передается как значение <xref:System.IFormatProvider?displayProperty=nameWithType> параметра.  
  
> [!NOTE]
>  Объекта <xref:System.IFormattable.ToString%2A> методов составного форматирования вызывается реализация, только в том случае, если они не передаются <xref:System.ICustomFormatter> поставщик формата, или если <xref:System.ICustomFormatter.Format%2A> метод поставщика пользовательского формата возвращает `null`.  
  
 .NET Framework включает три поставщиков форматирования, которые реализуют <xref:System.IFormatProvider> интерфейса:  
  
-   <xref:System.Globalization.NumberFormatInfo> предоставляет числовые сведений, например символы, которые требуется использовать в качестве десятичного разделителя и разделителя групп и проверке правописания и размещения символов валют в денежные значения.  
  
-   <xref:System.Globalization.DateTimeFormatInfo> предоставляет даты и времени сведения о форматировании, такие как положение месяца, дня и года в дату в формате.  
  
-   <xref:System.Globalization.CultureInfo> содержит форматирования сведения в конкретном языке, включая данные числового формата и сведения о форматировании даты и времени по умолчанию.  
  
 Кроме того можно определить собственный поставщик настраиваемого формата.  
  
   
  
## Examples  
 В следующем примере демонстрируется `Temperature` класс, реализующий <xref:System.IFormattable.ToString%2A> метод. Данный пример кода является частью большего примера для <xref:System.IFormattable> класса.  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> Метод должен поддерживать описатель «G» (Общие) формате. Кроме описатель «G» в классе можно определить список спецификаторов формата, он поддерживает. Кроме того, класс должен быть подготовлен для обработки описатель формата, который является <see langword="null" />. Дополнительные сведения о форматировании и коды форматирования, см. в разделе [типы форматирования](~/docs/standard/base-types/formatting-types.md).</para></block>
        <altmember cref="T:System.String" />
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>