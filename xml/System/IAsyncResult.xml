<Type Name="IAsyncResult" FullName="System.IAsyncResult">
  <Metadata><Meta Name="ms.openlocfilehash" Value="af8939f7e8a088eef165eb31b54cab1092f9abee" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52733217" /></Metadata><TypeSignature Language="C#" Value="public interface IAsyncResult" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAsyncResult" />
  <TypeSignature Language="DocId" Value="T:System.IAsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAsyncResult" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAsyncResult" />
  <TypeSignature Language="F#" Value="type IAsyncResult = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет состояние асинхронной операции.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IAsyncResult> Интерфейс реализуется классами, содержащий методы, которые могут выполняться асинхронно. Это тип возвращаемого значения методов, которые запускают асинхронной операции, такие как <xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType>, он передается методу, завершение асинхронной операции, такие как <xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType>. <xref:System.IAsyncResult> объекты также передаются в методы, вызываемые <xref:System.AsyncCallback> делегирует при завершении асинхронной операции.  
  
 Объект, поддерживающий <xref:System.IAsyncResult> интерфейс хранит сведения о состоянии для асинхронной операции и предоставляет объект синхронизации потоков, который должен получить сигнал при завершении операции.  
  
> [!NOTE]
>  <xref:System.Runtime.Remoting.Messaging.AsyncResult> Класс является реализацией <xref:System.IAsyncResult> , возвращаемый `BeginInvoke` метода при использовании делегата для асинхронного вызова метода.  
  
 Подробное описание того, как <xref:System.IAsyncResult> используется интерфейс, см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md) раздела.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как использовать <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> свойство для получения <xref:System.Threading.WaitHandle>и Ожидание асинхронного вызова для делегата. Объект <xref:System.Threading.WaitHandle> получает сигнал после завершения асинхронного вызова; его можно дождаться путем вызова метода <xref:System.Threading.WaitHandle.WaitOne%2A> .  
  
 Пример состоит из двух классов: класс, содержащий метод, который вызывается асинхронно и класса, содержащего `Main` метод, который выполняет вызов.  
  
 Дополнительные сведения и Дополнительные примеры асинхронного вызова методов с помощью делегатов, см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj" Usage="System.IAsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает определенный пользователем объект, который определяет или содержит сведения об асинхронной операции.</summary>
        <value>Определенный пользователем объект, который определяет или содержит сведения об асинхронной операции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство возвращает объект, который является последним параметром метода, который запускает асинхронную операцию.  
  
   
  
## Examples  
 В следующем примере кода показано, как <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> свойство используется для передачи информации в метод обратного вызова. В последнем параметре `BeginInvoke` вызов метода — это строка формата, используемую методом обратного вызова для форматирования выходного сообщения.  
  
 Пример состоит из двух классов: класс, содержащий метод, который вызывается асинхронно и класса, содержащего `Main` метод, который выполняет вызов.  
  
 Дополнительные сведения о том, как в этом примере обратный вызов и Дополнительные примеры асинхронного вызова методов с помощью делегатов, см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Реализация этого свойства позволяет вызывающему объекту асинхронной операции получения определяемый приложением объект, указанный в начале операции.</para></block>
        <block subset="none" type="usage"><para>Этот объект может использоваться для передачи сведений о состоянии для асинхронной операции для <see cref="T:System.AsyncCallback" /> вами.</para></block>
        <altmember cref="T:System.AsyncCallback" />
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncWaitHandle : System.Threading.WaitHandle" Usage="System.IAsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает дескриптор <see cref="T:System.Threading.WaitHandle" />, используемый для ожидания завершения асинхронной операции.</summary>
        <value>Дескриптор <see cref="T:System.Threading.WaitHandle" />, используемый для ожидания завершения асинхронной операции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемое значение позволяет клиенту ожидать завершения вместо опроса асинхронной операции <xref:System.IAsyncResult.IsCompleted%2A> пока не завершает операцию. Возвращаемое значение может использоваться для выполнения <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, или <xref:System.Threading.WaitHandle.WaitAll%2A> операции.  
  
 Среда CLR предоставляет ряд объектов ожидания, таких как <xref:System.Threading.ManualResetEvent>, <xref:System.Threading.AutoResetEvent>, и <xref:System.Threading.Mutex>, которые отображают примитивы синхронизации Win32.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как использовать <xref:System.IAsyncResult.AsyncWaitHandle%2A> свойство для получения <xref:System.Threading.WaitHandle>и Ожидание асинхронного вызова для делегата. Объект <xref:System.Threading.WaitHandle> получает сигнал после завершения асинхронного вызова; его можно дождаться путем вызова метода <xref:System.Threading.WaitHandle.WaitOne%2A> .  
  
 Пример состоит из двух классов: класс, содержащий метод, который вызывается асинхронно и класса, содержащего `Main` метод, который выполняет вызов.  
  
 Дополнительные сведения и Дополнительные примеры асинхронного вызова методов с помощью делегатов, см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Объект, реализующий <see cref="T:System.IAsyncResult" /> не нужно создавать <see cref="T:System.Threading.WaitHandle" /> пока <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> свойство доступно для чтения. Это выбор <see cref="T:System.IAsyncResult" /> исполнителя. Тем не менее если разработчик создает <see cref="P:System.IAsyncResult.AsyncWaitHandle" />, возлагается на разработчика, чтобы сообщить <see cref="T:System.Threading.WaitHandle" /> , прекращается при обнаружении в соответствующее время ожидания. Например <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> прекращает Ожидание от имени вызывающего объекта, при возврате асинхронно вызываемый метод. После создания <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> должны функционировать, пока пользователь не вызовет метод, который завершает асинхронную операцию. В этот момент объект <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> могут быть удалены.</para></block>
        <block subset="none" type="usage"><para>Клиенты, дождитесь завершения (в отличие от опроса) операции использовать это свойство для получения объекта синхронизации для ожидания.  
  
 <block subset="none" type="note"><para>  
 При использовании <see langword="BeginInvoke" /> метод делегата для асинхронного вызова метода и получения дескриптора ожидания из полученных <see cref="T:System.IAsyncResult" />, рекомендуется закрывать дескриптор ожидания, сразу же после завершения работы в его, вызвав <see cref="M:System.Threading.WaitHandle.Close" /> метод. Если вы просто удалить все ссылки на дескриптор ожидания, системные ресурсы будут освобождены при удалении дескриптора ожидания сборщиком мусора, но сборщик мусора работает более эффективно Уничтожаемые объекты явно закрыт или удален. Дополнительные сведения см. в описании свойства <see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" />.  
  
</para></block></para></block>
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CompletedSynchronously : bool" Usage="System.IAsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, выполнялась ли асинхронная операция синхронно.</summary>
        <value>Значение <see langword="true" />, если асинхронная операция выполнена синхронно, в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если синхронное завершение вызова обнаруживается в <xref:System.AsyncCallback> делегата, вполне вероятно, что поток, инициировавшим асинхронную операцию, является текущим потоком.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Большинство разработчиков <see cref="T:System.IAsyncResult" /> интерфейс не будет использовать это свойство и должен возвращать <see langword="false" />. Начиная с версии [!INCLUDE[net_v45](~/includes/net-v45-md.md)], задачу, которая создается с <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /> метод не завершается, если это свойство не реализовано правильно. См. в разделе [совместимость приложений в 4.5](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md).</para></block>
        <block subset="none" type="usage"><para>Это свойство используется для определения того, если асинхронная операция завершилась синхронно. Например, это свойство может возвращать <see langword="true" /> для асинхронной операции ввода-вывода, если запрос ввода-вывода был небольшим.</para></block>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.IAsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, выполнена ли асинхронная операция.</summary>
        <value>Значение <see langword="true" />, если операция выполнена; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если этому свойству присвоено `true`, можно предположить, безопасно для отмены любых ресурсов, выделенных для асинхронной операцией.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.IAsyncResult.IsCompleted%2A> свойство <xref:System.IAsyncResult> для обнаружения после завершения асинхронного вызова. В этом случае асинхронный вызов выполняется с помощью `BeginInvoke` метод делегата. Можно использовать <xref:System.IAsyncResult.IsCompleted%2A> свойство для опроса для завершения при выполнении асинхронного вызова из потока, обслуживающего пользовательский интерфейс. Опрос завершения позволяет вызывающему потоку продолжить выполнение при асинхронном вызове для потока <xref:System.Threading.ThreadPool> .  
  
 Пример состоит из двух классов: класс, содержащий метод, который вызывается асинхронно и класса, содержащего `Main` метод, который выполняет вызов.  
  
 Дополнительные сведения и Дополнительные примеры асинхронного вызова методов с помощью делегатов, см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#4](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/polling.cpp#4)]
[!code-csharp[AsyncDelegateExamples#4](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/polling.cs#4)]
[!code-vb[AsyncDelegateExamples#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/polling.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Разработчики обычно возвращают значение закрытого поля или внутренней проверки в качестве значения этого свойства.</para></block>
        <block subset="none" type="usage"><para>Клиенты, опросить состояние операции (в отличие от ожидания объекта синхронизации) использовать это свойство, чтобы определить состояние операции.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>