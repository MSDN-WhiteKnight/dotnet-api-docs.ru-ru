<Type Name="IObservable&lt;T&gt;" FullName="System.IObservable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b24212cb6cc3afaed9975d4117f8e1f9e2b0271f" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51932184" /></Metadata><TypeSignature Language="C#" Value="public interface IObservable&lt;out T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObservable`1&lt;+ T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObservable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObservable(Of Out T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObservable" />
  <TypeSignature Language="F#" Value="type IObservable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Объект, предоставляющий сведения об уведомлениях.</typeparam>
    <summary>Определяет поставщика push-уведомлений.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IObserver%601> И <xref:System.IObservable%601> интерфейсы предоставляют универсальный механизм для Push-уведомлений, также известный как шаблон разработки наблюдателя. <xref:System.IObservable%601> Интерфейс представляет класс, который отправляет уведомления (поставщик); <xref:System.IObserver%601> интерфейс представляет класс, который получает их (наблюдатель). `T` Представляет класс, который предоставляет сведения об уведомлении. В некоторых Push-уведомлений <xref:System.IObserver%601> реализации и `T` можно принадлежат к одному типу.  
  
 Поставщик должен реализовывать единственный метод, <xref:System.IObservable%601.Subscribe%2A>, которое указывает, что наблюдатель может принимать Push-уведомлений. Вызывающие объекты метода передать экземпляр наблюдателя. Этот метод возвращает <xref:System.IDisposable> реализацию, позволяющую наблюдателям отменить в любое время, прежде чем поставщик прекратил их отправкой уведомления.  
  
 В любой момент времени заданный поставщик может иметь ноль, один или нескольких наблюдателей. Поставщик отвечает за сохранение ссылок на наблюдатели и гарантируя, что они являются допустимыми, перед отправкой уведомления. <xref:System.IObservable%601> Интерфейс не делать никаких предположений о количестве наблюдателей или порядок, в котором будут отправлены.  
  
 Поставщик отправляет следующие три типа уведомлений наблюдателю путем вызова <xref:System.IObserver%601> методы:  
  
-   Текущие данные. Поставщик может выполнить вызов <xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType> метод для передачи наблюдатель `T` объект, имеющий текущие данные, измененные данные или новые данные.  
  
-   Условие ошибки. Поставщик может выполнить вызов <xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType> метод для уведомления наблюдателя о возникновении некоторой ошибки.  
  
-   Дополнительные данные отсутствуют. Поставщик может выполнить вызов <xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType> метод для уведомления наблюдателя о завершении отправки уведомлений.  
  
   
  
## Examples  
 В следующем примере шаблон разработки наблюдателя. Он определяет `Location` класс, содержащий сведения широты и долготы.  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 `LocationTracker` Класс предоставляет <xref:System.IObservable%601> реализации. Его `TrackLocation` методу передается значение необязательной определенности `Location` объект, содержащий данные широты и долготы. Если `Location` значение не `null`, `TrackLocation` вызовы методов <xref:System.IObserver%601.OnNext%2A> метод каждого наблюдателя.  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 Если `Location` значение `null`, `TrackLocation` метод создает экземпляр `LocationUnknownException` объект, который показан в следующем примере. Затем он вызывает каждого наблюдателя <xref:System.IObserver%601.OnError%2A> метод и передает его `LocationUnknownException` объекта. Обратите внимание, что `LocationUnknownException` является производным от <xref:System.Exception>, но не добавляет новые члены.  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 Наблюдатели регистрируются для получения уведомлений из `TrackLocation` , вызвав его <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> метод, который назначает ссылку на объект наблюдателя закрытый универсальный <xref:System.Collections.Generic.List%601> объекта. Этот метод возвращает `Unsubscriber` объект, являющийся <xref:System.IDisposable> реализацию, позволяющую наблюдателям прекратить получение уведомлений. `LocationTracker` Класс также включает `EndTransmission` метод. При дальнейшей данные расположения недоступны, этот метод вызывает каждого наблюдателя <xref:System.IObserver%601.OnCompleted%2A> метода и затем очищает внутренний список наблюдателей.  
  
 В этом примере `LocationReporter` класс предоставляет <xref:System.IObserver%601> реализации. В нем отображаются данные о текущем расположении в консоль. Включает в себя его конструктор `name` параметр, позволяющий `LocationReporter` экземпляра для собственной идентификации в выводимой строке. Он также включает `Subscribe` метод, который создает оболочку для вызова поставщика <xref:System.IObservable%601.Subscribe%2A> метод. Это позволяет методу, назначить возвращаемый <xref:System.IDisposable> ссылку на частную переменную. `LocationReporter` Класс также включает `Unsubscribe` метод, который вызывает <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> метод объекта, который возвращается методом <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> метод. В следующем коде определяется `LocationReporter` класса.  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 Следующий код создает экземпляр поставщика и наблюдателя.  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObserver`1" />
    <related type="Article" href="https://msdn.microsoft.com/library/3680171f-f522-453c-aa4a-54f755a78f88">Шаблон разработки наблюдателя</related>
  </Docs>
  <Members>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public IDisposable Subscribe (IObserver&lt;out T&gt; observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Subscribe(class System.IObserver`1&lt;!T&gt; observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObservable`1.Subscribe(System.IObserver{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Subscribe (observer As IObserver(Of Out T)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Subscribe(IObserver&lt;T&gt; ^ observer);" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : IObserver&lt;'T&gt; -&gt; IDisposable" Usage="iObservable.Subscribe observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="System.IObserver&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="observer">Объект, который должен получать уведомления.</param>
        <summary>Уведомляет поставщика о том, что наблюдатель должен получать уведомления.</summary>
        <returns>Ссылка на интерфейс, позволяющий наблюдателям прекратить получение уведомлений до того, как поставщик завершит их отправку.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IObservable%601.Subscribe%2A> Метод должен вызываться регистрируемый наблюдатель для Push-уведомлений. Типичная реализация <xref:System.IObservable%601.Subscribe%2A> метод делает следующее:  
  
-   Он хранит ссылку на наблюдатель в объекте коллекции, такие как <xref:System.Collections.Generic.List%601> объекта.  
  
-   Он возвращает ссылку на <xref:System.IDisposable> интерфейс. Это позволяет наблюдателям отказаться от подписки (т. е прекратить получение уведомлений), прежде чем поставщик завершит отправку и вызывается подписчика <xref:System.IObserver%601.OnCompleted%2A> метод.  
  
 В любой момент времени, определенный экземпляр <xref:System.IObservable%601> реализация отвечает за обработку всех подписок и уведомление всех подписчиков. Если в документации по конкретным <xref:System.IObservable%601> реализации указывает, в противном случае наблюдателей следует делать никаких предположений о <xref:System.IObservable%601> реализации, например порядок уведомлений, которые получат несколько наблюдателей.  
  
   
  
## Examples  
 В следующем примере показано <xref:System.IObservable%601.Subscribe%2A> метод для приложения, которое сообщает сведения широты и долготы. Он определяет <xref:System.Collections.Generic.IList%601> объект коллекции, в котором хранятся ссылки на все наблюдатели. Он также возвращает закрытый класс с именем `Unsubscriber` , реализующий <xref:System.IDisposable> интерфейс, а также позволяет подписчикам прекратить получение уведомлений о событиях.  См. в разделе "Пример" <xref:System.IObservable%601> разделе полный пример.  
  
 [!code-csharp[System.IObserver.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#13)]
 [!code-vb[System.IObserver.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IObserver`1" />
      </Docs>
    </Member>
  </Members>
</Type>