<Type Name="ParamArrayAttribute" FullName="System.ParamArrayAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eb1072129cbf30a1009cd77fab7829ca16ba98e3" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58706052" /></Metadata><TypeSignature Language="C#" Value="public sealed class ParamArrayAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParamArrayAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ParamArrayAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParamArrayAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParamArrayAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ParamArrayAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает, что при вызове метода допускается использование переменного числа аргументов. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ParamArrayAttribute> Указывает, что параметр метода является массивом параметров. Массив параметров позволяет задать неизвестного числа аргументов. Массив параметров должен быть последним параметром в списке формальных параметров, и он должен быть одномерным массивом. При вызове метода массив параметров позволяет аргументов к методу, чтобы указать одним из двух способов:  
  
-   Как одиночное выражение типа, который может быть неявно преобразован в тип массива параметров. Массив параметров функций в качестве аргумента значение.  
  
-   Как нуль или несколько аргументов, где каждый аргумент является выражением типа, который может быть неявно преобразован в тип элемента массива параметров.  
  
 В примере в следующем разделе показаны оба соглашения о вызовах.  
  
> [!NOTE]
>  Как правило <xref:System.ParamArrayAttribute> не используется непосредственно в коде. Вместо этого отдельные ключевые слова, такие как `ParamArray` в Visual Basic и `params` в C# используются в качестве оболочки для <xref:System.ParamArrayAttribute> класса. Некоторые языки, например C#, может даже требуют использования ключевого слова языка и запрещает использование <xref:System.ParamArrayAttribute>.  
  
 При разрешении перегрузки, когда компиляторы, которые поддерживают массивы параметров сталкиваются перегрузки метода, который не существует, но имеет один параметр меньше, чем перегрузку, которая включает в себя массив параметров, они будут заменены метод перегрузку, которая включает Массив параметров. Например, вызов `String.Split()` метод экземпляра (который не существует в <xref:System.String> класс) разрешается как вызов <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> метод. Компилятор также передается методу пустой массив требуемого типа. Это означает, что метод должен всегда быть готовы обрабатывать массив, длина которого равна нулю, при обработке элементов в массиве параметров. Иллюстрация приведена в примере.  
  
 Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 В следующем примере определяется `Temperature` класс, который включает в себя `Display` метод, который предназначен для отображения один или несколько форматированных значений температуры. Этот метод имеет один параметр, `formats`, который определен как массив параметров.  
  
 [!code-csharp[System.ParamArrayAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#1)]
 [!code-vb[System.ParamArrayAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#1)]  
  
 В следующем примере показано три различных вызовов `Temperature.Display` метод. В первом методу передается массив строк формата. Во втором методу передается как аргументы четыре отдельных строки формата. В третьем метод вызывается без аргументов. Как показано в выходных данных из примера, компиляторы Visual Basic и C# преобразует это в вызов `Display` метод с пустой массив строк.  
  
 [!code-csharp[System.ParamArrayAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#2)]
 [!code-vb[System.ParamArrayAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <related type="Article" href="~/docs/standard/attributes/index.md">Расширение метаданных с помощью атрибутов</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParamArrayAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ParamArrayAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParamArrayAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ParamArrayAttribute" /> стандартными свойствами.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>