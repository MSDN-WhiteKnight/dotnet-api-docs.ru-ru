<Type Name="ProfileOptimization" FullName="System.Runtime.ProfileOptimization">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0915ded9947c9a7c9b06996766715c6a3e2d1d19" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56352184" /></Metadata><TypeSignature Language="C#" Value="public static class ProfileOptimization" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProfileOptimization extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ProfileOptimization" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileOptimization" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileOptimization abstract sealed" />
  <TypeSignature Language="F#" Value="type ProfileOptimization = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Улучшает производительность при запуске доменов приложения в приложениях, требующих JIT-компилятора путем фоновой компиляции методов, выполнение которых ожидается, на основе профилей, созданных во время предыдущих компиляций.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Оптимизация профиля требуется многоядерном компьютере. Методы учитываются на других компьютерах.  
  
 Всякий раз при создании профиля оптимизации в домене приложения, профиль, который был создан во время предыдущего использования доступен для чтения. Сведения в профиле используется вспомогательными фоновая компиляция, определяя методы, которые, скорее всего, для выполнения во время запуска. На многоядерных компьютерах это повышает вероятность того, что метод уже скомпилирован моменту, когда она нужна, поэтому основной поток приложения не нужно вызывать JIT-компилятор.  
  
 Файл профиля перезаписывается при каждом использовании, поэтому оно всегда содержит самые последние сведения о том, какие методы используются во время запуска.  
  
 Профили оптимизации не ограничиваются запуска домена приложения. Они могут использоваться для любого действия, потребуется активно использовать JIT-компилятор. Таким образом, чтобы каждое такое действие имеет свой собственный профиль, может поддерживать несколько профилей для домена приложения.  
  
 Чтобы использовать профили оптимизации в домене приложения, необходимо вызвать <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> метод и указать папку для хранения профилей. Папка должна уже существовать. Чтобы приступить к использованию профиль, вызовите <xref:System.Runtime.ProfileOptimization.StartProfile%2A> метод и указать имя файла профиля. Если файл не был записан ранее, он создается при первом использовании. Нет времени преимущество первый производительности не создается профиль.  
  
 Оптимизация профиля не изменяет порядок, в котором выполняются методы. Методы, не выполняются в фоновом потоке; Если метод скомпилирован, но никогда не вызывается, он просто не используется. Если файл профиля поврежден или не может быть записан в указанную папку (например, если папка не существует), выполнение программы продолжается без оптимизации профилирования.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetProfileRoot">
      <MemberSignature Language="C#" Value="public static void SetProfileRoot (string directoryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetProfileRoot(string directoryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetProfileRoot (directoryPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetProfileRoot(System::String ^ directoryPath);" />
      <MemberSignature Language="F#" Value="static member SetProfileRoot : string -&gt; unit" Usage="System.Runtime.ProfileOptimization.SetProfileRoot directoryPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directoryPath">Полный путь к папке, где хранятся файлы профиля для текущего домена приложения.</param>
        <summary>Включает профилирование оптимизации для текущего домена приложения и задает каталог, в котором хранятся файлы профиля оптимизации. На одноядерном компьютере этот метод игнорируется.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод необходимо вызвать перед вызовом метода <xref:System.Runtime.ProfileOptimization.StartProfile%2A> метода в первый раз в текущем домене приложения. При вызове метода <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> более одного раза в одном домене приложения, все вызовы после первого учитываются.  
  
 Указанная папка должна существовать. Если он не существует, вызов этого метода не создает его и профилирования не возникает.  
  
 На компьютерах с несколькими ядрами этот метод учитывается.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Требует полного доверия для непосредственного вызывающего объекта. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
      </Docs>
    </Member>
    <Member MemberName="StartProfile">
      <MemberSignature Language="C#" Value="public static void StartProfile (string profile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartProfile(string profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ProfileOptimization.StartProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StartProfile (profile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StartProfile(System::String ^ profile);" />
      <MemberSignature Language="F#" Value="static member StartProfile : string -&gt; unit" Usage="System.Runtime.ProfileOptimization.StartProfile profile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="profile">Имя файла профиля для использования.</param>
        <summary>Запускает JIT-компиляцию методов, которые ранее были записаны в указанном файле профиля, в фоновом потоке. Запускает процесс записи текущего использования методов, который позже перезаписывает указанный файл профиля.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если указанный профиль существует в папке, заданной параметром <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> метод, его данные используется для определения порядка, в котором методы компилируются в фоновом потоке. <xref:System.Runtime.ProfileOptimization.StartProfile%2A> Метод создает профиль, если он еще не существует и инициирует запись использования методов.  
  
 Записываются только методы, вызываемые на самом деле, независимо от того, является ли они были скомпилированы в фоновом потоке или в основной поток приложения. Метод компилируется на основной поток приложения, если приложению необходимо вызвать его, прежде чем он скомпилирован в фоновом потоке.  
  
 Код, который выполняет запись отслеживает частоту, с которой методы компилируются, включая методы, которые компилируются в фоновом потоке и в основном потоке. Если скорость падает ниже заранее определенном уровне, запись останавливается. Запись также прекращается, если частота JIT-компиляции превышает установленного верхнего предела.  
  
 Если <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> метод не был вызван для текущего домена приложения, или если компьютер имеет несколько ядер <xref:System.Runtime.ProfileOptimization.StartProfile%2A> метод не оказывает влияния.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Требует полного доверия для непосредственного вызывающего объекта. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
      </Docs>
    </Member>
  </Members>
</Type>