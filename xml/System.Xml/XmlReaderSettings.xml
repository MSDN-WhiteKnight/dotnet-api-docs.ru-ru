<Type Name="XmlReaderSettings" FullName="System.Xml.XmlReaderSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ae931c958dae3132cfa810019a63792586fde5dd" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58696534" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlReaderSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlReaderSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlReaderSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlReaderSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReaderSettings sealed" />
  <TypeSignature Language="F#" Value="type XmlReaderSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Задает набор функций, которые должны поддерживаться объектом <see cref="T:System.Xml.XmlReader" />, создаваемым с помощью метода <see cref="Overload:System.Xml.XmlReader.Create" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использовании <xref:System.Xml.XmlReader.Create%2A> метод, чтобы получить <xref:System.Xml.XmlReader> экземпляров. Этот метод использует <xref:System.Xml.XmlReaderSettings> класс, чтобы указать, какие возможности следует реализовывать в <xref:System.Xml.XmlReader> объекта он создает.  
  
 См. в разделах "Примечания" <xref:System.Xml.XmlReader> и <xref:System.Xml.XmlReader.Create%2A> ссылаются на страницы, сведения о какие параметры следует использовать для проверки согласованности, проверки и других стандартных сценариев. См. в разделе <xref:System.Xml.XmlReaderSettings.%23ctor> конструктор для списка параметры по умолчанию.  
  
## <a name="security-considerations"></a>Замечания по безопасности  
 Учитывайте следующее при использовании <xref:System.Xml.XmlReaderSettings> класса.  
  
-   Флаги проверки <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> и <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> объекта <xref:System.Xml.XmlReaderSettings> по умолчанию не установлены. Если эти флаги установлены, для разрешения расположения схем, обнаруженных в экземпляре документа в объекте <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>, используется арбитр <xref:System.Xml.XmlReaderSettings> объекта <xref:System.Xml.XmlReader>. Если <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> объект `null`, расположения схем не разрешаются даже в том случае, если <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> и <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> установлены флаги проверки.  
  
-   Схемы, добавленные во время проверки, добавляют новые типы и могут изменить результат проверки документа. Поэтому следует разрешать только внешние схемы из доверенных источников.  
  
-   Сообщения об ошибках проверки могут предоставлять сведения о конфиденциальных модели содержимого. Ошибка проверки и предупреждающие сообщения обрабатываются с помощью <xref:System.Xml.Schema.ValidationEventHandler> делегировать или представляются как <xref:System.Xml.Schema.XmlSchemaValidationException> Если ни один обработчик событий для <xref:System.Xml.XmlReaderSettings> объекта (предупреждения проверки не вызывают <xref:System.Xml.Schema.XmlSchemaValidationException> исключение). Это сведения о модели содержимого не должны предоставляться в сценариях без доверия. Проверка предупреждения подавляются по умолчанию и может быть включено в отчет, задав <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> флаг.  
  
-   <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Свойство <xref:System.Xml.Schema.XmlSchemaValidationException> Возвращает пути URI к файлу схемы, вызвавшего исключение. <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Свойства не должны предоставляться в сценариях без доверия.  
  
-   Отключение <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> флаг (включено по умолчанию) рекомендуется использовать при проверки ненадежных, больших XML документы в сценарии высокой доступности по схеме с ограничениями удостоверения по большой части этого документа.  
  
-   Объекты <xref:System.Xml.XmlReaderSettings> могут содержать конфиденциальные сведения, например учетные данные пользователей. Следует соблюдать осторожность при кэшировании объектов <xref:System.Xml.XmlReaderSettings> или при передаче объекта <xref:System.Xml.XmlReaderSettings> от одного компонента другому.  
  
-   Обработка DTD по умолчанию отключена. Если обработка DTD включена, необходимо Имейте в виду, в том числе DTD из ненадежных источников и возможных отказ в обслуживании. Используйте <xref:System.Xml.XmlSecureResolver> для ограничения ресурсов, <xref:System.Xml.XmlReader> доступны.  
  
-   Не следует принимать вспомогательные компоненты, например объекты <xref:System.Xml.NameTable>, <xref:System.Xml.XmlNamespaceManager> и <xref:System.Xml.XmlResolver>, из ненадежных источников.  
  
-   Объем памяти, который требуется приложению, использующему объект <xref:System.Xml.XmlReader>, может соотноситься с размерами анализируемого XML-документа. Одна из форм атаки типа «отказ в обслуживании» заключается в передаче для синтаксического анализа чрезмерно больших XML-документов. Можно ограничить размер документа, который может быть проанализирован, задав <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A> свойство и затем ограничивает число символов, которые возникают вследствие расширения сущностей, задав <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A> свойство.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.XmlReader> , использующий <xref:System.Xml.XmlUrlResolver> с необходимыми учетными данными.  
  
 [!code-csharp[XmlReader.Create#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#2)]
 [!code-vb[XmlReader.Create#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md">XML-документы и данные</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице представлены исходные значения свойств для экземпляра <xref:System.Xml.XmlReaderSettings>.  
  
|Свойство.|Исходное значение|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|0 (нет ограничений на число символов, которые возникают вследствие расширения сущностей).|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|0 (нет ограничений на размер XML-документа).|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|`null`.|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|`true`. Это свойство устарело. Взамен рекомендуется использовать <xref:System.Xml.XmlTextReader.DtdProcessing%2A>. Если вы задали <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> к значению по умолчанию `true` задать <xref:System.Xml.XmlTextReader.DtdProcessing%2A> для `Prohibit`. Если вы задали <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> для `false` задать <xref:System.Xml.XmlTextReader.DtdProcessing%2A> для `Parse`.|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|Пустой объект <xref:System.Xml.Schema.XmlSchemaSet>|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<xref:System.Xml.ValidationType.None>.|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|Новый объект <xref:System.Xml.XmlUrlResolver>.|  
  
   
  
## Examples  
 Ниже создает объект параметров, который может использоваться для создания средства чтения, которое удаляет инструкции по обработке, комментарии и незначащие пробельные символы.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings (System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor(System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings(System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlReaderSettings : System.Xml.XmlResolver -&gt; System.Xml.XmlReaderSettings" Usage="new System.Xml.XmlReaderSettings resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resolver">Сопоставитель XML.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Async : bool with get, set" Usage="System.Xml.XmlReaderSettings.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, можно ли использовать асинхронные методы <see cref="T:System.Xml.XmlReader" /> для конкретного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
        <value>Значение <see langword="true" />, если могут использоваться асинхронные методы; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это значение необходимо задать `true` при создании нового <xref:System.Xml.XmlReader> экземпляра, если вы хотите использовать асинхронные <xref:System.Xml.XmlReader> методы на этом экземпляре. После <xref:System.Xml.XmlReader> , создается экземпляр <xref:System.Xml.XmlReaderSettings.Async%2A> свойство доступно только для чтения. По умолчанию этому свойству присваивается значение `false`.  
  
 Этот флаг игнорируется <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> перегрузки. Это означает, что если вы создаете новый <xref:System.Xml.XmlReader> на основе существующего <xref:System.Xml.XmlReader>, async поведение зависит от входных данных <xref:System.Xml.XmlReader>, и вы не можете использовать <xref:System.Xml.XmlReaderSettings.Async%2A> флаг, чтобы изменить поведение async.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Асинхронное программирование с использованием ключевых слов Async и Await (C# и Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCharacters : bool with get, set" Usage="System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, осуществляется ли проверка символов.</summary>
        <value>Значение <see langword="true" /> — проверка осуществляется; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.  
  
 <block subset="none" type="note"><para>  
 Если средство чтения <see cref="T:System.Xml.XmlReader" /> обрабатывает текстовые данные, всегда происходит проверка допустимости XML-имен и текстового содержимого независимо от значения этого свойства. Задание свойству <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> значения <see langword="false" /> отключает проверку символов для ссылок на сущности символов.  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство указывает, что средство чтения XML для проверки символов в XML-данных, он считывает данные и создавать <xref:System.Xml.XmlException> Если обнаруживаются символы вне диапазона допустимых XML-символов. Если включена проверка символов, гарантируется выполнение следующих условий.  
  
-   Символы находятся в диапазоне допустимых XML-символов, согласно [2.2 Characters](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets) разделе рекомендаций консорциума W3C XML 1.0.  
  
-   Все XML-имена являются допустимыми, в соответствии с определением [2,3 общие синтаксические конструкции](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) разделе рекомендаций консорциума W3C XML 1.0.  
  
 Если присвоить этому свойству `true`, которое является значением по умолчанию, <xref:System.Xml.XmlException> исключение вызывается в том случае, если XML-файл содержит недопустимые символы или недопустимый XML-имен (например, имя элемента начинается с цифры).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReaderSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReaderSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReaderSettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.XmlReaderSettings" Usage="xmlReaderSettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает копию экземпляра <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
        <returns>Точная копия объекта <see cref="T:System.Xml.XmlReaderSettings" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Клонированный <xref:System.Xml.XmlReaderSettings> объект может быть изменен без влияния на параметры на исходном объекте.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public bool CloseInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseInput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CloseInput : bool with get, set" Usage="System.Xml.XmlReaderSettings.CloseInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли закрыть основной поток или <see cref="T:System.IO.TextReader" /> при закрытии средства чтения.</summary>
        <value>Значение <see langword="true" /> — закрыть основной поток или <see cref="T:System.IO.TextReader" /> при закрытии средства чтения; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот параметр используется в том случае, когда поток или <xref:System.IO.TextReader> передается <xref:System.Xml.XmlReader.Create%2A> метод. Если поток создан средством чтения для собственной обработки, например при создании средства чтения с URI или при открытии внешнее определение типа документа, он будет всегда закрываться при закрытии средства чтения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceLevel : System.Xml.ConformanceLevel with get, set" Usage="System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает уровень соответствия для <see cref="T:System.Xml.XmlReader" />.</summary>
        <value>Одно из значений перечисления, которое указывает уровень соответствия, обеспечиваемый средством чтения XML. Значение по умолчанию: <see cref="F:System.Xml.ConformanceLevel.Document" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Средства чтения XML, созданным <xref:System.Xml.XmlReader.Create%2A> метод следующие предварительные требования соответствия по умолчанию:  
  
-   Новые строки и значения атрибутов нормализуются в соответствии с W3C [XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).  
  
-   Все сущности автоматически раскрываются.  
  
-   По умолчанию атрибутов, объявленных в определении типа документа всегда добавляются даже в том случае, если средство чтения не выполняет проверку.  
  
-   Допускается объявление префикса XML, сопоставленного с правильным URI пространства имен XML.  
  
-   Имена нотаций в одном `NotationType` объявление атрибута и `NmTokens` в одном `Enumeration` объявление атрибута отличаются.  
  
 Можно использовать <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> свойство на проверку и гарантирует, что считываемый поток согласуется с правилами для правильного формата XML-документа 1.0 или фрагмент документа. Если данные не соответствует, <xref:System.Xml.XmlException> возникает исключение. По умолчанию используется <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (согласованность на уровне документа).  
  
 Ниже приведены уровни три соответствия.  
  
|Параметр|Описание|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|Гарантирует, что XML-данные соответствуют правилам для документа правильного формата XML 1.0. Этот уровень проверки гарантирует, что любое средство обработки сможет обработать считываемый поток как [документа правильного формата XML 1.0](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed).<br /><br /> Модуль чтения проверяет следующие условия.<br /><br /> -Элемент верхнего уровня не должен иметь все узлы, отличные от XML-декларация, определение типа документа (DTD), элемент, комментарий, пробелы или инструкцию по обработке.<br />-XML-данные должны иметь ровно один узел элемента верхнего уровня.|  
|<xref:System.Xml.ConformanceLevel.Fragment>|Гарантирует, что XML-данные соответствуют правилам для правильного фрагмент документа XML 1.0.<br /><br /> Этот параметр принимает XML-данные с несколькими корневыми элементами или текстовыми узлами на верхнем уровне. Этот уровень проверки гарантирует, что любое средство обработки сможет обработать считываемый поток как [внешние проанализированная сущность](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities).|  
|<xref:System.Xml.ConformanceLevel.Auto>|Указывает, что средство чтения должно определять уровень проверки на соответствие на основе входящих данных.<br /><br /> Проверка согласованности на уровне документа применяется, если XML-данные содержат сведения DTD.<br /><br /> Проверка согласованности фрагментов применяется, если в XML-данных содержится один из следующих случаев:<br /><br /> -Text, CDATA или сущность узел ссылки на корневом уровне.<br />-Более одного элемента корневого уровня.<br />— Должен отсутствовать элемент корневого уровня.<br /><br /> Исключение <xref:System.Xml.XmlException> создается, если обнаруживается конфликт, например если на корневом уровне одновременно существуют текстовый узел и DTD.<br /><br /> Это свойство можно использовать в сценариях с оболочками, когда метод <xref:System.Xml.XmlReader.Create%2A> используется для добавления дополнительных функций в существующий модуль <xref:System.Xml.XmlReader>. В этом случае <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> не обеспечивает проверку согласованности. Проверка согласованности выполняется модулем <xref:System.Xml.XmlReader>, для которого создается оболочка.|  
  
> [!NOTE]
>  Рекомендация XML 1.0 требует согласованности на уровне документа, если присутствует DTD. Таким образом Если модуль чтения настроен для поддержки <xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>, но данные XML содержат определения типа документа (DTD), <xref:System.Xml.XmlException> возникает исключение.  
  
 Вот как модуль чтения обрабатывает нарушения согласованности определенные зависимости от настройки <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> свойство:  
  
|Условие|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|Текст или типизированное значение отображается на верхнем уровне.|<xref:System.Xml.XmlException> возникает исключение.|Не считается нарушением для этого параметра.|Не считается нарушением для этого параметра.|  
|Несколько элементов или элемент не отображается на верхнем уровне.|<xref:System.Xml.XmlException> возникает исключение.|Не считается нарушением для этого параметра.|Не считается нарушением для этого параметра.|  
|Элемент верхнего уровня является пробелом.|Не считается нарушением для этого параметра.|Не считается нарушением для этого параметра.|Не считается нарушением для этого параметра.|  
|Элемент верхнего уровня является атрибутом (распознается как текстовый узел).|<xref:System.Xml.XmlException> возникает исключение.|Не считается нарушением для этого параметра.|Не считается нарушением для этого параметра.|  
|Найдены несколько смежных текстовых узлов.|Не считается нарушением для этого параметра.|Не считается нарушением для этого параметра.|Не считается нарушением для этого параметра.|  
|Одинаковый префикс пространства имен объявлен дважды в одной и той же локальной области.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|  
|Пространство имен в элемент или атрибут не существует в локальной области.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|  
|Данные содержат несоответствия префиксов и пространств имен.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|  
|`xml:space` атрибут содержит недопустимое значение.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|  
|Обнаружено недопустимое имя.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|  
|`xml` Префикс не сопоставлен http://www.w3.org/XML/1998/namespace URI.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.XmlReader> объект, который считывает XML-фрагмент.  
  
 [!code-csharp[XmlReader.Create#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#1)]
 [!code-vb[XmlReader.Create#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DtdProcessing">
      <MemberSignature Language="C#" Value="public System.Xml.DtdProcessing DtdProcessing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.DtdProcessing DtdProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Property DtdProcessing As DtdProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::DtdProcessing DtdProcessing { System::Xml::DtdProcessing get(); void set(System::Xml::DtdProcessing value); };" />
      <MemberSignature Language="F#" Value="member this.DtdProcessing : System.Xml.DtdProcessing with get, set" Usage="System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.DtdProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, определяющее обработку определений DTD.</summary>
        <value>Одно из значений перечисления, определяющее обработку определений DTD. Значение по умолчанию — <see cref="F:System.Xml.DtdProcessing.Prohibit" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Проверка определения DTD типа документа реализуется с помощью ограничений допустимости, определенных в W3C [языка (XML) 1.0 (четвертый выпуск) рекомендация](https://www.w3.org/TR/2006/REC-xml-20060816/). DTD используется формальная Грамматика для описания структуры и синтаксиса совместимых XML-документов; они указывают содержимое и значения, разрешенные для XML-документа.  
  
 Это свойство может принимать одно из следующих значений.  
  
-   <xref:System.Xml.DtdProcessing.Parse?displayProperty=nameWithType> Чтобы включить обработку DTD.  
  
-   <xref:System.Xml.DtdProcessing.Prohibit?displayProperty=nameWithType> исключение <xref:System.Xml.XmlException> возникло исключение при обнаружении DTD.  
  
-   <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType> Чтобы отключить обработку без предупреждений и исключений DTD.  
  
 Для выполнения проверки по DTD объект <xref:System.Xml.XmlReader> использует DTD, определенный в декларации DOCTYPE XML-документа. Декларация DOCTYPE может указывать на встроенный DTD или ссылаться на внешний DTD-файл. Для проверки по DTD XML-файла:  
  
-   Задайте свойству <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A?displayProperty=nameWithType> значение `DtdProcessing.Parse.`  
  
-   Задайте для свойства <xref:System.Xml.XmlReaderSettings.ValidationType%2A?displayProperty=nameWithType> значение `ValidationType.DTD`.  
  
-   Если DTD является внешним файлом, хранящимся на сетевом ресурсе, для которого требуется проверка подлинности, передайте объект <xref:System.Xml.XmlResolver> с необходимыми учетными данными методу <xref:System.Xml.XmlReader.Create%2A>.  
  
> [!IMPORTANT]
>  Если <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> свойству <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, <xref:System.Xml.XmlReader> не сообщит о DTD. Это означает, что на выходные данные будут потеряны DTD и DOCTYPE.  
  
   
  
## Examples  
 В следующем примере XML-файл проверяется c использованием DTD-файла.  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
## <a name="input"></a>Входные данные  
 В примере в качестве входных данных используется файл `itemDTD.xml`.  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreComments">
      <MemberSignature Language="C#" Value="public bool IgnoreComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreComments" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreComments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreComments { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreComments : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли игнорировать комментарии.</summary>
        <value><see langword="true" /> — игнорировать комментарии; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этому свойству присвоить `true` может привести к несколько смежных текстовых узлов, возвращаемых из средства чтения. Это не влияет на проверку.  
  
   
  
## Examples  
 Ниже создает объект параметров, который может использоваться для создания средства чтения, которое удаляет инструкции по обработке, комментарии и незначащие пробельные символы.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreProcessingInstructions">
      <MemberSignature Language="C#" Value="public bool IgnoreProcessingInstructions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreProcessingInstructions" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreProcessingInstructions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreProcessingInstructions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreProcessingInstructions : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли игнорировать инструкции по обработке.</summary>
        <value><see langword="true" /> — игнорировать инструкции обработки; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этому свойству присвоить `true` может привести к несколько смежных текстовых узлов, возвращаемых из средства чтения. Это не влияет на проверку.  
  
   
  
## Examples  
 Ниже создает объект параметров, который может использоваться для создания средства чтения, которое удаляет инструкции по обработке, комментарии и незначащие пробельные символы.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWhitespace">
      <MemberSignature Language="C#" Value="public bool IgnoreWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWhitespace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreWhitespace : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, будут ли игнорироваться незначимые символы-разделители.</summary>
        <value>Значение <see langword="true" />, если пустое пространство будет игнорироваться; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пробелы, которые не рассматриваются как значительные включает пробелы, знаки табуляции и пустые строки, используемый для настройки разметки для повышения удобства чтения. Примером этого является пробелом в содержимом элемента.  
  
 Значение этого свойства не влияет на пробел между элементами разметки в режиме смешанного содержимого или пробел, которое происходит в пределах `xml:space='preserve'` атрибута.  
  
   
  
## Examples  
 Ниже создает объект параметров, который может использоваться для создания средства чтения, которое удаляет инструкции по обработке, комментарии и незначащие пробельные символы.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LineNumberOffset">
      <MemberSignature Language="C#" Value="public int LineNumberOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumberOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LineNumberOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumberOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LineNumberOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает смещение номера строки объекта <see cref="T:System.Xml.XmlReader" />.</summary>
        <value>Смещение номера строки. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A> Параметр определяет точку где <xref:System.Xml.IXmlLineInfo.LineNumber%2A> свойство начинается отсчет. Это полезно в том случае, если XML-данных внедрен в большой документ. Например если XML-данные были внедрены в большего документа, а данные, начатый на строке 101 документа, можно указать, что средство чтения работу с 100 строки. Таким образом Если средство чтения вызвал исключение при синтаксическом анализе первая часть XML, но отчет номер строки, как строка 101, а не в строке 1.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LinePositionOffset">
      <MemberSignature Language="C#" Value="public int LinePositionOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePositionOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LinePositionOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePositionOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LinePositionOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает смещение позиции строки объекта <see cref="T:System.Xml.XmlReader" />.</summary>
        <value>Смещение позиции строки. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A> Параметр определяет точку где <xref:System.Xml.IXmlLineInfo.LinePosition%2A> свойство начинается отсчет. Это полезно в том случае, если XML-данные внедрены в большего документа, а не новую строку в начале XML-код. Таким образом Если модуль чтения создает исключение при анализе кода XML, необходимо возвращать положение строки относительно основного документа, а не только относительно фрагмента XML.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersFromEntities">
      <MemberSignature Language="C#" Value="public long MaxCharactersFromEntities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersFromEntities" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersFromEntities As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersFromEntities { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersFromEntities : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее максимально допустимое количество символов в документе, которые возникают вследствие расширения сущностей.</summary>
        <value>Наибольшее количество символов вследствие расширения сущностей. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Нуль (0) означает отсутствие ограничений на число символов, которые возникают вследствие расширения сущностей. Ненулевое значение указывает максимальное количество символов, полученных вследствие расширения сущностей.  
  
 Если средство чтения пытается считать документ, содержащий сущности, таким образом, размер после расширения превысит это свойство <xref:System.Xml.XmlException> будет создано.  
  
 Это свойство позволяет устранять атаки, когда злоумышленник отправляет XML-документов, которые пытаются превышают ограничения по памяти путем расширения сущностей. Ограничивая символов, возникающих вследствие расширения сущностей, можно обнаружить атаку и обеспечить работоспособность системы.  
  
   
  
## Examples  
 Следующий код задает это свойство, а затем пытается выполнить синтаксический анализ документа, содержащего сущность, которая раскрывается, размер которого превышает установленный предел. В реальной ситуации, бы этот предел устанавливается в значение, достаточное для обработки допустимых документов, еще достаточно небольшим, чтобы ограничить угроз от вредоносных документов.  
  
```csharp  
string markup =  
@"<!DOCTYPE Root [  
  <!ENTITY anEntity ""Expands to more than 30 characters"">  
  <!ELEMENT Root (#PCDATA)>  
]>  
<Root>Content &anEntity;</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.DtdProcessing = DtdProcessing.Parse;  
settings.ValidationType = ValidationType.DTD;  
settings.MaxCharactersFromEntities = 30;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = _  
    "<!DOCTYPE Root [" + Environment.NewLine + _  
    "  <!ENTITY anEntity ""Expands to more than 30 characters"">" + Environment.NewLine + _  
    "  <!ELEMENT Root (#PCDATA)>" + Environment.NewLine + _  
    "]>" + Environment.NewLine + _  
    "<Root>Content &anEntity;</Root>"  
  
Dim settings As XmlReaderSettings = New XmlReaderSettings()  
settings.DtdProcessing = DtdProcessing.Parse;  
settings.ValidationType = ValidationType.DTD  
settings.MaxCharactersFromEntities = 30  
  
Try  
    Dim reader As XmlReader = XmlReader.Create(New StringReader(markup), settings)  
    While (reader.Read())  
    End While  
Catch ex As XmlException  
    Console.WriteLine(ex.Message)  
End Try  
```  
  
 В этом примере выводятся следующие данные:  
  
```  
There is an error in XML document (MaxCharactersFromEntities, ).  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersInDocument">
      <MemberSignature Language="C#" Value="public long MaxCharactersInDocument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersInDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersInDocument As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersInDocument { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersInDocument : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее максимальное допустимое количество символов в XML-документе. Нуль (0) означает отсутствие ограничений на размер XML-документа. Значение, не равное нулю, указывает максимальное количество символов.</summary>
        <value>Максимально допустимое количество символов в XML-документе. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Нуль (0) означает отсутствие ограничений на число символов в документе для анализа. Ненулевое значение указывает максимальное количество символов, которые могут быть проанализированы.  
  
 Максимальное число символов для документа содержит число символов, возникающих вследствие расширения сущностей.  
  
 Если средство чтения пытается считать документ, объем которого превышает это свойство <xref:System.Xml.XmlException> будет создано.  
  
 Это свойство позволяет устранять атаки, когда злоумышленник отправляет чрезвычайно больших XML-документов. Путем ограничения размера документа, можно обнаружить атаку и обеспечить работоспособность системы.  
  
   
  
## Examples  
 Следующий код задает это свойство, а затем пытается выполнить синтаксический анализ документа, размер которых превышает предел. В реальной ситуации, бы этот предел устанавливается в значение, достаточное для обработки допустимых документов, еще достаточно небольшим, чтобы ограничить угроз от вредоносных документов.  
  
```csharp  
string markup = "<Root>Content</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.MaxCharactersInDocument = 10;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = "<Root>Content</Root>"  
  
Dim settings As XmlReaderSettings = New XmlReaderSettings()  
settings.MaxCharactersInDocument = 10  
  
Try  
    Dim reader As XmlReader = XmlReader.Create(New StringReader(markup), settings)  
    While (reader.Read())  
    End While  
Catch ex As XmlException  
    Console.WriteLine(ex.Message)  
End Try  
```  
  
 Этот код выводит следующие результаты:  
  
```  
There is an error in XML document (MaxCharactersInDocument, ).  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); void set(System::Xml::XmlNameTable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable with get, set" Usage="System.Xml.XmlReaderSettings.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает таблицу <see cref="T:System.Xml.XmlNameTable" />, используемую для разделенных сравнений строк.</summary>
        <value>Таблица <see cref="T:System.Xml.XmlNameTable" />, в которой хранятся все разделенные строки, используемые экземплярами <see cref="T:System.Xml.XmlReader" />, созданными с помощью объекта <see cref="T:System.Xml.XmlReaderSettings" />.  
  
Значение по умолчанию: <see langword="null" />. Созданный экземпляр <see cref="T:System.Xml.XmlReader" /> будет использовать новую пустую таблицу <see cref="T:System.Xml.NameTable" />, если это значение будет равно <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Присвойте этому свойству значение <xref:System.Xml.XmlNameTable> экземпляра, если вы хотите совместно использовать общие таблицы имен между всеми созданный <xref:System.Xml.XmlReader> экземпляров.  
  
> [!NOTE]
>  Класс <xref:System.Xml.NameTable> не является потокобезопасным. Поэтому он не может быть совместно <xref:System.Xml.XmlReader> объектов, которые одновременно работают в разных потоках.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProhibitDtd">
      <MemberSignature Language="C#" Value="public bool ProhibitDtd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProhibitDtd" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberSignature Language="VB.NET" Value="Public Property ProhibitDtd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProhibitDtd { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProhibitDtd : bool with get, set" Usage="System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Use XmlReaderSettings.DtdProcessing property instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, следует ли запретить обработку DTD. Это свойство устарело. Взамен рекомендуется использовать <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />.</summary>
        <value>Значение <see langword="true" /> для запрещения обработки DTD; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если задано значение `true`, <xref:System.Xml.XmlReader> вызывает <xref:System.Xml.XmlException> при обнаружении любое содержимое DTD. Не включайте обработку DTD, если есть опасность атак типа «отказ в обслуживании» или если ведется работа с ненадежными источниками.  
  
 Если обработка DTD включена, то с помощью класса <xref:System.Xml.XmlSecureResolver> можно ограничить ресурсы, доступные для объекта <xref:System.Xml.XmlReader>. Кроме того, можно создать собственное приложение, ограничивающее объем памяти и время, выделяемое на обработку XML. Например, можно ограничить время ожидания в приложении ASP.NET.  
  
 Это свойство устарело. Взамен рекомендуется использовать <xref:System.Xml.XmlTextReader.DtdProcessing%2A>. Если вы задали <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> к значению по умолчанию `true` задать <xref:System.Xml.XmlTextReader.DtdProcessing%2A> для `Prohibit`. Если вы задали <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> для `false` задать <xref:System.Xml.XmlTextReader.DtdProcessing%2A> для `Parse`.  
  
   
  
## Examples  
 Следующий пример проверяет данные, с помощью DTD.  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
 В примере используется файл itemDTD.xml в качестве входных данных.  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="xmlReaderSettings.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Повторно загружает значения по умолчанию для элементов класса параметров.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице представлены исходные значения свойств для экземпляра <xref:System.Xml.XmlReaderSettings>.  
  
|Свойство.|Начальное значение|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|0 (нет ограничений на число символов, которые возникают вследствие расширения сущностей).|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|0 (нет ограничений на размер XML-документа).|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|`null`.|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|`true`. Это свойство устарело. Взамен рекомендуется использовать <xref:System.Xml.XmlTextReader.DtdProcessing%2A>. Если вы задали <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> к значению по умолчанию `true` задать <xref:System.Xml.XmlTextReader.DtdProcessing%2A> для `Prohibit`. Если вы задали <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> для `false` задать <xref:System.Xml.XmlTextReader.DtdProcessing%2A> для `Parse`.|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|Пустой объект <xref:System.Xml.Schema.XmlSchemaSet>|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<xref:System.Xml.ValidationType.None>.|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|Новый объект <xref:System.Xml.XmlUrlResolver>.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); void set(System::Xml::Schema::XmlSchemaSet ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet with get, set" Usage="System.Xml.XmlReaderSettings.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.Xml.Schema.XmlSchemaSet" /> для использования при проверке схемы.</summary>
        <value>Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" /> для использования при проверке схемы. Значением по умолчанию является пустой объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> -   Не используйте схем из неизвестных или ненадежных источников или расположения. Это приведет к компрометации вашего кода.  
> -   XML-схем (включая встроенные схемы) по своей природе уязвимы для атак; не согласны с ними в сценариях без доверия.  
> -   Сообщения об ошибках проверки схемы и исключения может содержать конфиденциальные сведения о модели содержимого или пути URI к файлу схемы. Следите за тем, чтобы не предоставить эти сведения для ненадежных вызывающих объектов.  
> -   Дополнительные сведения см. в разделе «Вопросы безопасности».  
  
 <xref:System.Xml.Schema.XmlSchemaSet> Класс поддерживает только схемами языка определения схемы XML. <xref:System.Xml.XmlReader> экземпляры, созданные <xref:System.Xml.XmlReader.Create%2A> метод нельзя настроить для включения проверки схемы XML-Data Reduced (XDR).  
  
## <a name="security-considerations"></a>Замечания по безопасности  
  
-   Не использовать схемы из неизвестных или ненадежных источников. Это приведет к компрометации вашего кода. <xref:System.Xml.XmlUrlResolver> Класс используется для разрешения внешних схем по умолчанию. Чтобы отключить разрешение include, импорта и переопределить элементы схемы, установите <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> свойства `null`.  
  
-   Исключения, возникшие в результате использования <xref:System.Xml.Schema.XmlSchemaSet> класс, например <xref:System.Xml.Schema.XmlSchemaException> класс может содержать конфиденциальные сведения, которые не должны предоставляться в сценариях без доверия. Например <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> свойство <xref:System.Xml.Schema.XmlSchemaException> Возвращает пути URI к файлу схемы, вызвавшего исключение. <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Свойства не должны предоставляться в сценариях без доверия. Исключения должны обрабатываться должным образом, таким образом, чтобы конфиденциальная информация не предоставляется в сценариях без доверия.  
  
   
  
## Examples  
 В примере ниже используется <xref:System.Xml.XmlReaderSettings> объекта и <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> способ сопоставления схему с XML-документа. Схема добавляется в <xref:System.Xml.XmlReaderSettings.Schemas%2A> свойство <xref:System.Xml.XmlReaderSettings> объекта. Значение <xref:System.Xml.XmlReaderSettings.Schemas%2A> свойство <xref:System.Xml.Schema.XmlSchemaSet> объекта. Схема используется для проверки XML-документа на соответствие схеме модель содержимого. Схема ошибок и предупреждений проверки, обрабатываются <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> определенные в <xref:System.Xml.XmlReaderSettings> объекта.  
  
 [!code-cpp[XmlSchemaSetOverall Example#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaSetOverall Example/CPP/xmlschemasetexample.cpp#1)]
 [!code-csharp[XmlSchemaSetOverall Example#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaSetOverall Example/CS/xmlschemasetexample.cs#1)]
 [!code-vb[XmlSchemaSetOverall Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaSetOverall Example/VB/xmlschemasetexample.vb#1)]  
  
 В примере используется файл books.xml в качестве входных данных.  
  
 [!code-xml[XmlSchemaSetOverall Example#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xml#2)]  
  
 В примере используется файлу books.xsd в качестве входных данных.  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlReaderSettings.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает, когда средство чтения встречает ошибки проверки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эти события возникают при чтении документа экземпляра XML, если <xref:System.Xml.XmlReaderSettings.ValidationType%2A> может принимать значение <xref:System.Xml.ValidationType.DTD> или <xref:System.Xml.ValidationType.Schema>. Если <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> включен параметр для <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> свойства, эти события происходят при возникновении любые предупреждения проверки.  
  
 Если модуль чтения настроен для проверки и не задана обработчик событий проверки отсутствует <xref:System.Xml.Schema.XmlSchemaValidationException> для всех ошибок проверки возникает исключение. (Не вызывают предупреждения проверки <xref:System.Xml.Schema.XmlSchemaValidationException> исключение).  
  
> [!IMPORTANT]
>  Сообщения об ошибках проверки могут предоставлять сведения о конфиденциальных модели содержимого. Ошибка проверки и предупреждающие сообщения обрабатываются с помощью <xref:System.Xml.Schema.ValidationEventHandler> делегировать или представляются как <xref:System.Xml.Schema.XmlSchemaValidationException> Если ни один обработчик событий для <xref:System.Xml.XmlReaderSettings> объекта (предупреждения проверки не вызывают <xref:System.Xml.Schema.XmlSchemaValidationException> исключение). Это сведения о модели содержимого не должны предоставляться в сценариях без доверия. Проверка предупреждения подавляются по умолчанию и может быть включено в отчет, задав <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> флаг.  
>   
>  <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Свойство <xref:System.Xml.Schema.XmlSchemaValidationException> Возвращает пути URI к файлу схемы, вызвавшего исключение. <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Свойства не должны предоставляться в сценариях без доверия.  
  
   
  
## Examples  
 В следующем примере параметров, чтобы указать для создания модуля чтения, который проверяет, с помощью встроенной схемы и отображает предупреждения проверки. Использует обработчик событий проверки <xref:System.Xml.Schema.XmlSeverityType> перечисление, чтобы различать ошибки и предупреждения.  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationFlags">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationFlags As XmlSchemaValidationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaValidationFlags ValidationFlags { System::Xml::Schema::XmlSchemaValidationFlags get(); void set(System::Xml::Schema::XmlSchemaValidationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationFlags : System.Xml.Schema.XmlSchemaValidationFlags with get, set" Usage="System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее параметры проверки схемы. Этот параметр применим к объектам <see cref="T:System.Xml.XmlReader" />, служащим для проверки схем (значение свойства <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> равно <see langword="ValidationType.Schema" />).</summary>
        <value>Побитовое сочетание значений перечисления, определяющих параметры проверки. Поля <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> и <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> по умолчанию включены. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> и <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> по умолчанию отключены.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Флаги проверки <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> и <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> объекта <xref:System.Xml.XmlReaderSettings> по умолчанию не установлены. Если эти флаги установлены, для разрешения расположения схем, обнаруженных в экземпляре документа в объекте <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>, используется арбитр <xref:System.Xml.XmlReaderSettings> объекта <xref:System.Xml.XmlReader>. Если <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> объект `null`, расположения схем не разрешаются даже в том случае, если <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> и <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> установлены флаги проверки.  
>   
>  Схемы, добавленные во время проверки, добавляют новые типы и могут изменить результат проверки документа. Поэтому следует разрешать только внешние схемы из доверенных источников.  
>   
>  Отключение <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> флаг (включено по умолчанию) рекомендуется использовать при проверки ненадежных, больших XML документы в сценарии высокой доступности по схеме с ограничениями удостоверения по большой части этого документа.  
  
   
  
## Examples  
 В следующем примере проверяется по встроенной XML-схемы XML-файл, включив <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> параметр. Модуль чтения XML настроен для вывода ошибок проверки, sp также отобразится ожидаемое предупреждение для корневого элемента.  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
## <a name="input"></a>Входные данные  
 В этом примере в качестве входных данных используется файл inlineSchema.xml.  
  
 [!code-xml[XmlReaderSettings.IgnoreInlineSchema#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/XML/inlineSchema.xml#3)]  
  
## <a name="output"></a>Вывод  
 Предупреждение:   Не найдена совпадающая схема. Проверка не выполнялась. Не удалось найти сведения о схеме для элемента 'root'.  
  
 Ошибка проверки:   Элемент 'xsdheadcount: HeadCount' имеет недопустимый дочерний элемент 'division'. Ожидается ID.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationType">
      <MemberSignature Language="C#" Value="public System.Xml.ValidationType ValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ValidationType ValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationType As ValidationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ValidationType ValidationType { System::Xml::ValidationType get(); void set(System::Xml::ValidationType value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationType : System.Xml.ValidationType with get, set" Usage="System.Xml.XmlReaderSettings.ValidationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ValidationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, будет ли <see cref="T:System.Xml.XmlReader" /> при считывании выполнять проверку типа назначения.</summary>
        <value>Одно из значений <see cref="T:System.Xml.ValidationType" />, указывающее, будет ли XmlReader при считывании выполнять проверку или назначение типа. Значение по умолчанию — <see langword="ValidationType.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице описаны <xref:System.Xml.ValidationType> значения.  
  
> [!NOTE]
>  <xref:System.Xml.ValidationType.Auto> И <xref:System.Xml.ValidationType.XDR> значений перечисления являются устаревшими в .NET Framework версии 2.0.  
  
|ValidationType|Описание|  
|--------------------|-----------------|  
|`DTD`|Проверка выполняется с помощью определения типа документа (DTD). **Примечание.**  <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> Свойство также должно быть присвоено <xref:System.Xml.DtdProcessing.Parse>.|  
|`None`|<xref:System.Xml.XmlReader> Не проверять данные или выполнить любой тип назначения.|  
|`Schema`|Проверка и назначение типа выполняется с помощью схему языка определения схемы XML. Средство чтения получает доступ к схеме XML, следующим образом:<br /><br /> — Позволяет использовать <xref:System.Xml.XmlReaderSettings.Schemas%2A> свойство для доступа к <xref:System.Xml.Schema.XmlSchemaSet> объект, связанный с средство чтения.<br />— Позволяет использовать встроенный схему, содержащуюся в документ экземпляра XML. ( <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> Необходимо включить параметр.)<br />-Использует схему XML, заданные указания по расположению схемы (`xsi:schemaLocation` или `xsi:noNamespaceSchemaLocation` атрибута) в документе экземпляра XML. ( <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> Необходимо включить параметр.)|  
  
   
  
## Examples  
 В следующем примере проверяется с помощью схемы, хранящиеся в <xref:System.Xml.Schema.XmlSchemaSet>.  
  
 [!code-cpp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CPP/XmlReader_Validate_SchemaSet.cpp#1)]
 [!code-csharp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CS/validschemaset.cs#1)]
 [!code-vb[XmlReader_Validate_SchemaSet#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_SchemaSet/VB/validschemaset.vb#1)]  
  
 В примере используются следующие входные файлы:  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/booksschemafail.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает <see cref="T:System.Xml.XmlResolver" />, используемый для доступа ко внешним документам.</summary>
        <value><see cref="T:System.Xml.XmlResolver" />, используемый для доступа ко внешним документам. Если задано значение <see langword="null" />, создается исключение <see cref="T:System.Xml.XmlException" /> при попытке <see cref="T:System.Xml.XmlReader" /> получить доступ к внешнему ресурсу. По умолчанию используется новый <see cref="T:System.Xml.XmlUrlResolver" /> без учетных данных.  Начиная с .NET Framework 4.5.2, этот параметр имеет значение по умолчанию <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlResolver> Используется, чтобы найти и открыть документ экземпляра XML, или чтобы найти и открыть любые внешние ресурсы, которые ссылается документ экземпляра XML. Это могут быть сущности, DTD или схемы. <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> Свойство может использоваться для указания учетных данных, необходимых для проверки подлинности сети.  
  
> [!IMPORTANT]
>  Так как <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> может содержать конфиденциальные сведения, например учетные данные пользователя, следует соблюдать осторожность при кэшировании <xref:System.Xml.XmlReaderSettings> объектов, или при передаче <xref:System.Xml.XmlReaderSettings> объект из одного компонента в другой.  
>   
>  <xref:System.Xml.XmlSecureResolver> Может использоваться для доступа ко внешним документам. <xref:System.Xml.XmlSecureResolver> Класс помогает защитить другую реализацию <xref:System.Xml.XmlResolver> путем заключения <xref:System.Xml.XmlResolver> объекта и ограничивая ресурсы, базовый <xref:System.Xml.XmlResolver> имеет доступ к.  
>   
>  Флаги проверки <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> и <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> объекта <xref:System.Xml.XmlReaderSettings> по умолчанию не установлены. Если эти флаги установлены, для разрешения расположения схем, обнаруженных в экземпляре документа в объекте <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>, используется арбитр <xref:System.Xml.XmlReaderSettings> объекта <xref:System.Xml.XmlReader>. Если <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> объект `null`, расположения схем не разрешаются даже в том случае, если <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> и <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> установлены флаги проверки.  
>   
>  Схемы, добавленные во время проверки, добавляют новые типы и могут изменить результат проверки документа. Поэтому следует разрешать только внешние схемы из доверенных источников.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.XmlReader> , использующий <xref:System.Xml.XmlSecureResolver> с учетными данными по умолчанию.  
  
 [!code-csharp[XmlReader.Create#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#10)]
 [!code-vb[XmlReader.Create#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>