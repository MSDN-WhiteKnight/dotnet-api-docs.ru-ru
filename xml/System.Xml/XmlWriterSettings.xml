<Type Name="XmlWriterSettings" FullName="System.Xml.XmlWriterSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7860161af0480191bd26b797987d160249630be6" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52734582" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlWriterSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlWriterSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriterSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlWriterSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterSettings sealed" />
  <TypeSignature Language="F#" Value="type XmlWriterSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Задает набор функций, которые должны поддерживаться объектом <see cref="T:System.Xml.XmlWriter" />, создаваемым с помощью метода <see cref="Overload:System.Xml.XmlWriter.Create" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriter.Create%2A> Метод является предпочтительным механизмом для получения <xref:System.Xml.XmlWriter> экземпляров. <xref:System.Xml.XmlWriter.Create%2A> Использует метод <xref:System.Xml.XmlWriterSettings> класс, чтобы указать, какие возможности следует реализовывать в <xref:System.Xml.XmlWriter> созданный объект.  
  
> [!NOTE]
>  Если вы используете <xref:System.Xml.XmlWriter> объекта с <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> метод, следует использовать <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> свойство для получения <xref:System.Xml.XmlWriterSettings> объекта с верными параметрами. Это гарантирует правильность параметров выходных данных для объекта <xref:System.Xml.XmlWriter>.  
  
 <xref:System.Xml.XmlWriterSettings> Класс предоставляет свойства этого элемента управления данных соответствия и формата вывода информации.  
  
 Для проверки согласованности данных и автоматического исправления используйте следующие свойства:  
  
|Свойство|Что определяет|Значение|Значение по умолчанию|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|Нужно ли проверять, что символы являются в допустимые XML-кодировка, как определено консорциумом W3C.|`true` или `false`|`true`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|Нужно ли проверять, что на выходе — как правильный формат XML-документа 1.0 или фрагмент.|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (уровня документа), <xref:System.Xml.ConformanceLevel.Fragment> (уровня фрагмента), или <xref:System.Xml.ConformanceLevel.Auto> (автоматическое обнаружение)|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (согласованность на уровне документа)|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|Следует ли добавлять закрывающие теги ко всем элементам незакрытые при <xref:System.Xml.XmlWriter.Close%2A> вызывается метод.|`true` или `false`|`true`|  
  
 Чтобы указать выходной формат, используйте эти свойства:  
  
|Свойство|Что определяет|Значение|Значение по умолчанию|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|Кодировка текста.|Значение<xref:System.Text.Encoding?displayProperty=nameWithType> |<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|Следует ли использовать отступ для элементов|`true` или `false`|`false` (нет отступа)|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Символьная строка, используемых для отступа (используется, когда <xref:System.Xml.XmlWriterSettings.Indent%2A> присваивается `true`).|String|Два пробела|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|Строка символов, используемую для разрывов строки.|String|`\r\n` (возврат каретки, перевод строки)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|Способ обработки символов новой строки.|<xref:System.Xml.NewLineHandling?displayProperty=nameWithType> значение: <xref:System.Xml.NewLineHandling.Entitize> (нормализовать), <xref:System.Xml.NewLineHandling.Replace> (заменить), или <xref:System.Xml.NewLineHandling.None> (оставьте без изменений)|<xref:System.Xml.NewLineHandling.Replace> (Замените символы, заданные <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|Следует ли записывать атрибуты в отдельные строки (не действует, если <xref:System.Xml.XmlWriterSettings.Indent%2A> — `false`).|`true` или `false`|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|Следует ли записывать объявление XML.|`true` или `false`|`false`|  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.XmlWriter> , записывает XML-файл и записывает каждый атрибут в новой строке.  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 Пример выводит следующие результаты:  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице представлены исходные значения свойств для экземпляра <xref:System.Xml.XmlWriterSettings>.  
  
|Свойство.|Начальное значение|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Два пробела.|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n` (возврат каретки, новая строка).|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.XmlWriter> объект, который использует символ табуляции для отступа.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Async : bool with get, set" Usage="System.Xml.XmlWriterSettings.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, можно ли использовать асинхронные методы <see cref="T:System.Xml.XmlWriter" /> для конкретного экземпляра <see cref="T:System.Xml.XmlWriter" />.</summary>
        <value>Значение <see langword="true" />, если могут использоваться асинхронные методы; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это значение необходимо задать `true` при создании нового <xref:System.Xml.XmlWriter> экземпляра, если вы хотите использовать асинхронные <xref:System.Xml.XmlWriter> методы на этом экземпляре. После <xref:System.Xml.XmlWriter> , создается экземпляр <xref:System.Xml.XmlWriterSettings.Async%2A> свойство доступно только для чтения. По умолчанию этому свойству присваивается значение `false`.  
  
 Этот флаг игнорируется <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> перегрузки. Это означает, что если вы создаете новый <xref:System.Xml.XmlWriter> на основе существующего <xref:System.Xml.XmlWriter>, async поведение зависит от входных данных <xref:System.Xml.XmlWriter>, и вы не можете использовать <xref:System.Xml.XmlWriterSettings.Async%2A> флаг, чтобы изменить поведение async.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Асинхронное программирование с использованием ключевых слов Async и Await (C# и Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCharacters : bool with get, set" Usage="System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, должно ли средство записи XML выполнять проверку на предмет того, соответствуют ли все символы в документе разделу "2.2 Characters" документа W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/#charsets).</summary>
        <value>Значение <see langword="true" /> для выполнения проверки символов; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Xml.XmlWriter> объект поддерживает проверку символов, он создает исключение, если обнаруживаются символы вне диапазона допустимых XML-символов, указан в разделе «2.2 Characters» консорциума W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/#charsets).  
  
 Проверка символов включает поиск недопустимых символов в именах XML или проверки, что все имена XML являются допустимыми. Эти проверки являются частью проверки на соответствие и выполняются всегда.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlWriterSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlWriterSettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.XmlWriterSettings" Usage="xmlWriterSettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает копию экземпляра <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
        <returns>Точная копия объекта <see cref="T:System.Xml.XmlWriterSettings" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Клонированный <xref:System.Xml.XmlWriterSettings> объект может быть изменен без влияния на параметры на исходном объекте.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutput">
      <MemberSignature Language="C#" Value="public bool CloseOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseOutput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseOutput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CloseOutput : bool with get, set" Usage="System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли объекту <see cref="T:System.Xml.XmlWriter" /> закрывать также и основной поток или <see cref="T:System.IO.TextWriter" /> при вызове метода <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
        <value>Значение <see langword="true" />, если следует закрыть основной поток или <see cref="T:System.IO.TextWriter" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот параметр полезен, когда требуется запись в поток XML, а затем добавить дополнительные сведения в конец потока после <xref:System.Xml.XmlWriter> окончания записи.  
  
 Это свойство применяется только к <xref:System.Xml.XmlWriter> экземпляров, которые выводят XML содержимого в поток или <xref:System.IO.TextWriter>; в противном случае этот параметр игнорируется.  
  
   
  
## Examples  
 Следующий пример записывает фрагмент XML в поток памяти.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceLevel : System.Xml.ConformanceLevel with get, set" Usage="System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает уровень соответствия, на предмет которого средство записи XML проверяет выходные данные XML.</summary>
        <value>Одно из значений перечисления, указывающее уровень соответствия (документ, фрагмент или автоматическое обнаружение). Значение по умолчанию — <see cref="F:System.Xml.ConformanceLevel.Document" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> Свойство настраивает модуль записи XML, проверку и гарантирует соответствие записываемого потока определенному набору правил. Чтобы увидеть, что он соответствует правилам для XML 1.0 документа правильного формата или фрагментом документа, можно проверить XML-данные. В следующей таблице описаны три параметра. По умолчанию используется согласованность на уровне документа.  
  
|Параметр|Описание|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|Гарантирует, что выходные данные XML соответствует [правила для документа правильного формата XML 1.0](https://www.w3.org/TR/REC-xml/#sec-well-formed) и могут обрабатываться любым процессором согласование.<br /><br /> Проверки согласованности документа включают большую часть проверки уровня фрагмента и соблюдение следующих:<br /><br /> -Элемент верхнего уровня, не все узлы, отличные от XML-декларации, DTD, элемента, комментария, пробелы или инструкции по обработке.<br />-XML-данных имеет только один узел элемента верхнего уровня.<br /><br /> Средство записи XML не выполнить синтаксический анализ записываемых данных DTD. Пользователь несет ответственность за то, что DTD имеет правильный формат.|  
|<xref:System.Xml.ConformanceLevel.Fragment>|Гарантирует, что выходные данные XML соответствует [правила для правильного фрагмент документа XML 1.0](https://www.w3.org/TR/REC-xml/#wf-entities).<br /><br /> Этот параметр принимает XML-данных, который имеет несколько корневых элементов либо текстовых узлов верхнего уровня. Этот уровень проверки гарантирует, что любое средство обработки сможет обработать считываемый поток как сущность XML 1.0 с внешним синтаксическим анализом.<br /><br /> Данные определения DTD не допускается в фрагментов документа.|  
|<xref:System.Xml.ConformanceLevel.Auto>|Указывает, что средство записи XML должен определить уровень проверки на соответствие на основе входящих данных. Этот параметр можно использовать, если вам неизвестно, будет ли созданный XML правильного формата XML-документ или фрагмент.<br /><br /> Проверка согласованности на уровне документа применяется в следующих случаях:<br /><br /> Если <xref:System.Xml.XmlWriter.WriteStartDocument%2A> вызывается метод.<br />— Если записываются данные DTD.<br /><br /> Проверка согласованности фрагментов применяется, если XML-данных содержит один из следующих:<br /><br /> -Узел текст, CDATA или EntityReference на корневом уровне.<br />-Более одного элемента корневого уровня.<br />— Должен отсутствовать элемент корневого уровня.<br /><br /> Исключение <xref:System.Xml.XmlException> создается, если обнаруживается конфликт, например когда на корневом уровне одновременно записываются текстовый узел и DTD.<br /><br /> Если вы создается программа-оболочка другой <xref:System.Xml.XmlWriter> объект, внешний объект не выполняет никаких проверок на соответствие дополнительных; это поле оставить к базовому объекту.|  
  
 Если средство записи XML обнаруживает любые сведения, которые нарушают указанный уровень соответствия, создается исключение. В некоторых случаях средство записи XML автоматически исправляет ошибку соответствия. Например модуль записи закрывает незакрытый атрибут без создания исключения. В следующей таблице показаны как различные нарушения согласованности обрабатываются в каждый параметр.  
  
|Условие|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|Найдены данные DTD.|Не нарушение для этого параметра. Тем не менее средство записи XML не проверку DTD; пользователь должен убедиться, что DTD имеет правильный формат.|<xref:System.Xml.XmlException> возникает исключение.|Проверка согласованности на уровне документа применяется.|  
|вызывается метод <xref:System.Xml.XmlWriter.WriteStartDocument%2A>;|Не считается нарушением для этого параметра.|<xref:System.Xml.XmlException> возникает исключение.|Проверка согласованности на уровне документа применяется.|  
|<xref:System.Xml.XmlWriter.WriteStartDocument%2A> вызывается несколько раз.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|  
|Текстовое значение отображается на верхнем уровне (не ниже узла элемента или атрибута).|<xref:System.Xml.XmlException> возникает исключение.|Не считается нарушением.|Применяется проверка соответствия фрагмента.|  
|Несколько элементов или элементов не отображаются на верхнем уровне.|<xref:System.Xml.XmlException> возникает исключение.|Не считается нарушением.|Применяется проверка соответствия фрагмента.|  
|Элемент верхнего уровня является пробелом.|Не считается нарушением.|Не считается нарушением.|Не считается нарушением.|  
|<xref:System.Xml.XmlWriter.WriteEndAttribute%2A> не вызывается для завершения узла атрибута.|Выпущено средство записи XML.|Выпущено средство записи XML.|Выпущено средство записи XML.|  
|Средство записи XML находится в недопустимом состоянии вложенности (например, <xref:System.Xml.XmlWriter.WriteStartElement%2A> вызов сопровождается <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|  
|Элемент верхнего уровня является атрибутом.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|  
|Найдены несколько смежных текстовых узлов.|Не считается нарушением, но он отвечает за пользователю конкатенацию текстовых узлов.|Не считается нарушением, но он отвечает за пользователю конкатенацию текстовых узлов.|Не считается нарушением, но он отвечает за пользователю конкатенацию текстовых узлов.|  
|В элементе дважды объявлен один и тот же префикс пространства имен.|Средство записи XML создает новый префикс для второго пространства имен.|Средство записи XML создает новый префикс для второго пространства имен.|Средство записи XML создает новый префикс для второго пространства имен.|  
|<xref:System.Xml.XmlWriter.WriteStartElement%2A> Задает префикс и пространство имен, не объявленных внутри этой области или префикс связан с другим пространством имен.|Средство записи XML записывает необходимого узла пространства имен.|Средство записи XML записывает необходимого узла пространства имен.|Средство записи XML записывает необходимого узла пространства имен.|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> Задает префикс и пространство имен, не объявленных внутри этой области.|Средство записи XML записывает необходимого узла пространства имен.|Средство записи XML записывает необходимого узла пространства имен.|Средство записи XML записывает необходимого узла пространства имен.|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> Задает префикс и пространство имен, но префикс связан с другим пространством имен в области.|Средство записи XML игнорирует указанный префикс и либо выполняет поиск правильного префикса, либо создает новый префикс.|Средство записи XML игнорирует указанный префикс и либо выполняет поиск правильного префикса, либо создает новый префикс.|Средство записи XML игнорирует указанный префикс и либо выполняет поиск правильного префикса, либо создает новый префикс.|  
|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> используется для записи содержимого элемента с помощью пространства имен, который не существует в области.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|  
|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> используется для записи содержимого атрибута с помощью пространства имен, который не существует в области.|Средство записи XML записывает необходимой декларации пространства имен.|Средство записи XML записывает необходимой декларации пространства имен.|Средство записи XML записывает необходимой декларации пространства имен.|  
|`xml:space` Атрибут не содержит допустимое значение.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|  
|Обнаружено недопустимое имя.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|  
|`xml` Префикс не сопоставлен с URI.|Средство записи XML не проверяется этим типом нарушения.|Средство записи XML не проверяется этим типом нарушения.|Средство записи XML не проверяется этим типом нарушения.|  
|`xml` Префикс не сопоставлен http://www.w3.org/XML/1998/namespace URI.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|  
|`xmlns` Префикс или локальное имя не сопоставлены с URI.|Средство записи XML не проверяется этим типом нарушения.|Средство записи XML не проверяется этим типом нарушения.|Средство записи XML не проверяется этим типом нарушения.|  
|`xmlns` Префикс или локальное имя не сопоставлены с http://www.w3.org/2000/xmlns URI.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|<xref:System.Xml.XmlException> возникает исключение.|  
  
   
  
## Examples  
 Следующий пример записывает фрагмент XML в поток памяти.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotEscapeUriAttributes">
      <MemberSignature Language="C#" Value="public bool DoNotEscapeUriAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotEscapeUriAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotEscapeUriAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotEscapeUriAttributes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoNotEscapeUriAttributes : bool with get, set" Usage="System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, преобразует ли <see cref="T:System.Xml.XmlWriter" /> атрибуты URI в escape-последовательности.</summary>
        <value><see langword="true" /> Если <see cref="T:System.Xml.XmlWriter" /> escape-последовательности атрибуты URI; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Xml.XmlWriterSettings.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает тип используемой кодировки текста.</summary>
        <value>Используемая кодировка текста. Значение по умолчанию — <see langword="Encoding.UTF8" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriter> Кодирует буфер символов, за один раз, а не символ за символом. Исключение возникает, когда <xref:System.Xml.XmlWriter.Flush%2A> метод вызывается при возникновении ошибки кодировки.  
  
 <xref:System.Xml.XmlWriterSettings.Encoding%2A> Свойство применяется только к <xref:System.Xml.XmlWriter> экземпляров, созданных с помощью указанного <xref:System.IO.Stream> или с указанным именем файла. Если <xref:System.Xml.XmlWriter> создается экземпляр с указанным <xref:System.IO.TextWriter>, <xref:System.Xml.XmlWriterSettings.Encoding%2A> свойство переопределяется при кодировании базового <xref:System.IO.TextWriter>. Например, если это свойство имеет значение в Юникод (UTF-16), для какого-либо <xref:System.Xml.XmlWriter>, но базовый модуль записи <xref:System.IO.StreamWriter> (который является производным от <xref:System.IO.TextWriter>) с задать кодировку UTF8, выходные данные будут в кодировке UTF-8.  
  
 Если <xref:System.Xml.XmlWriter> с другими параметрами выходных данных, создается экземпляр <xref:System.Xml.XmlWriterSettings.Encoding%2A> свойство учитывается.  
  
 В следующем примере:  
  
-   Значением свойства <xref:System.Xml.XmlWriterSettings.Encoding%2A> по умолчанию является `Encoding.UTF8`.  
  
-   <xref:System.IO.StreamWriter> Присваивается `Encoding.Unicode` и <xref:System.IO.StreamWriter>кодировка переопределения <xref:System.Xml.XmlWriterSettings.Encoding%2A> параметр.  
  
-   Выходные данные будут `Encoding.Unicode`.  
  
```csharp  
using (StreamWriter output =  
    new StreamWriter(new FileStream("Xml01.xml", FileMode.Create), Encoding.Unicode))  
{  
    using (XmlWriter xmlWriter =  
        XmlWriter.Create(output, new XmlWriterSettings()))  
    {  
        xmlWriter.WriteStartDocument();  
        xmlWriter.WriteStartElement("Root");  
        xmlWriter.WriteEndElement();  
        xmlWriter.WriteEndDocument();  
    }  
}  
```  
  
> [!IMPORTANT]
>  Не принимаю <xref:System.Text.Encoding> объекта из ненадежного источника.  
  
   
  
## Examples  
 Следующий пример записывает фрагмент XML в поток памяти.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public bool Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Indent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Indent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : bool with get, set" Usage="System.Xml.XmlWriterSettings.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли использовать отступ для элементов.</summary>
        <value>Значение <see langword="true" />, если необходимо записывать отдельные элементы в новых строках с отступом; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство применяется только к <xref:System.Xml.XmlWriter> экземпляров, вывода содержимого текста; в противном случае этот параметр игнорируется.  
  
 Элементы отображаются с отступом, до тех пор, пока элемент содержит смешанное содержимое. Один раз <xref:System.Xml.XmlWriter.WriteString%2A> или <xref:System.Xml.XmlWriter.WriteWhitespace%2A> для записи элемента со смешанным содержимым, вызывается метод <xref:System.Xml.XmlWriter> останавливает отступов. Отступы возобновляется после закрытия элемента со смешанным содержимым.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.XmlWriter> объект, который использует символ табуляции для отступа.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentChars">
      <MemberSignature Language="C#" Value="public string IndentChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndentChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.IndentChars" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndentChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChars : string with get, set" Usage="System.Xml.XmlWriterSettings.IndentChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку символов, используемую для отступов. Этот параметр используется, если значение свойства <see cref="P:System.Xml.XmlWriterSettings.Indent" /> равно <see langword="true" />.</summary>
        <value>Строка символов, используемая для отступов. Может принять любое строковое значение. Однако в целях обеспечения корректности XML-кода необходимо использовать только допустимые символы-разделители: символы пробела, табуляции, возврата каретки или перевода строки. По умолчанию - два пробела.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство применяется только к <xref:System.Xml.XmlWriter> экземпляров, вывода содержимого текста; в противном случае этот параметр игнорируется. <xref:System.Xml.XmlWriter> Создает исключение, если символы отступа приведет к недопустимый XML.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.XmlWriter> объект, который использует символ табуляции для отступа.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойству <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> присваивается значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="NamespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NamespaceHandling NamespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NamespaceHandling NamespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceHandling As NamespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NamespaceHandling NamespaceHandling { System::Xml::NamespaceHandling get(); void set(System::Xml::NamespaceHandling value); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceHandling : System.Xml.NamespaceHandling with get, set" Usage="System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.NamespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающие, должен ли объект <see cref="T:System.Xml.XmlWriter" /> при записи содержимого XML удалять дубликаты объявлений пространств имен. По умолчанию средство записи выводит все объявления пространства имен, присутствующие в его сопоставителе пространства имен.</summary>
        <value>Перечисление <see cref="T:System.Xml.NamespaceHandling" />, которое указывает, нужно ли удалять дубликаты объявлений пространств имен в объекте <see cref="T:System.Xml.XmlWriter" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineChars">
      <MemberSignature Language="C#" Value="public string NewLineChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLineChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLineChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineChars : string with get, set" Usage="System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку символов, используемую для разрыва строк.</summary>
        <value>Строка символов, используемая для разрыва строк. Может принять любое строковое значение. Однако в целях обеспечения корректности XML-кода необходимо использовать только допустимые символы-разделители: символы пробела, табуляции, возврата каретки или перевода строки. По умолчанию используется <c>\r\n</c> (возврат каретки, новая строка).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство применяется только к <xref:System.Xml.XmlWriter> экземпляров, вывода содержимого текста; в противном случае этот параметр игнорируется. <xref:System.Xml.XmlWriter> Создает исключение, если символы разрыва строки приведет к недопустимый XML.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойству <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> присваивается значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="NewLineHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NewLineHandling NewLineHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NewLineHandling NewLineHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineHandling As NewLineHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NewLineHandling NewLineHandling { System::Xml::NewLineHandling get(); void set(System::Xml::NewLineHandling value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineHandling : System.Xml.NewLineHandling with get, set" Usage="System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.NewLineHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли осуществлять нормализацию разрывов строк в выходных данных.</summary>
        <value>Одно из значений <see cref="T:System.Xml.NewLineHandling" />. Значение по умолчанию — <see cref="F:System.Xml.NewLineHandling.Replace" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот параметр применяется при записи текста содержимого или значений атрибута. Каждый из <xref:System.Xml.NewLineHandling> значения представлен ниже:  
  
-   <xref:System.Xml.NewLineHandling.Entitize> Параметр указывает <xref:System.Xml.XmlWriter> заменить символы новой строки, которые бы в противном случае утеряны нормализующим считывателем <xref:System.Xml.XmlReader> на сущности знаков. Это полезно в сценариях приема-передачи, где результат читается нормализующим считывателем <xref:System.Xml.XmlReader>. Дополнительные правила нормализации применяются для значений атрибутов при round tripping с момента `\t`, `\n` и `\r` заменяются пробелом в значениях атрибутов при нормализации в <xref:System.Xml.XmlReader>.  
  
-   <xref:System.Xml.NewLineHandling.Replace> Параметр указывает <xref:System.Xml.XmlWriter> заменить символы новой строки с `\r\n`, который является новый формат строки, используемый операционной системой Microsoft Windows. Это позволяет гарантировать, что файл правильное отображение приложения «Блокнот» или Microsoft Word. Этот параметр также заменяет новые строки в атрибуты сущности знаков для сохранения символов. Это значение по умолчанию.  
  
-   <xref:System.Xml.NewLineHandling.None> Параметр указывает <xref:System.Xml.XmlWriter> оставить без изменений входных данных. Этот параметр используется в том случае, когда требуется запретить обработку любой новой строки. Это полезно, когда результат читается нормализующим <xref:System.Xml.XmlReader> , не выполняя нормализации (например, <xref:System.Xml.XmlTextReader> с параметрами по умолчанию.)  
  
 В следующих таблицах показаны выходные данные <xref:System.Xml.XmlWriter.WriteString%2A> метод, если ей передать входное значение в зависимости от <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> значение свойства. В таблицах показаны выходные данные при записи содержимого текста, а также при записи значения атрибута.  
  
 `Text Node Value:`  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Преобразование в сущность|& #D; \n|\n|&AMP; #D;|\t|  
|Заменить|\r\n|\r\n|\r\n|\t|  
|Нет|\r\n|\n|\r|\t|  
  
 `Attribute Value:`  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Преобразование в сущность|&AMP; #D; &AMP; #A;|&AMP; #A;|&AMP; #D;|&\#9;|  
|Заменить|&AMP; #D; &AMP; #A;|&AMP; #A;|&AMP; #D;|&\#9;|  
|Нет|\r\n|\n|\r|\t|  
  
> [!NOTE]
>  <xref:System.Xml.XmlWriter> Имеет следующие особенности при записи содержимого в раздел CDATA, комментарий или инструкцию по обработке. Новые строки не заменяются их сущности символов, даже если <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> свойству <xref:System.Xml.NewLineHandling.Entitize>. Это обусловлено сущности знаков не распознаются в разделы CDATA, комментарии и инструкции обработки. Если <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> свойству <xref:System.Xml.NewLineHandling.None> или <xref:System.Xml.NewLineHandling.Replace>, происходит так же, как при написании текстовое значение узла.  
  
 В следующей таблице описаны какие считывателем <xref:System.Xml.XmlReader> возвращает для каждого входного пробела. Дополнительные сведения см. в разделах 2.11 и 3.3.3 консорциума W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/).  
  
> [!NOTE]
>  Считыватель нормализации представляет собой любой <xref:System.Xml.XmlReader> объект, созданный <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод. Эти объекты всегда выполняют нормализацию разрывов и полную нормализацию атрибутов. <xref:System.Xml.XmlTextReader> Объект также может быть нормализации чтения, если это <xref:System.Xml.XmlTextReader.Normalization%2A> свойству `true`.  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Значение узла текста|\n|\n|\n|\t|  
|Значение атрибута|одиночный пробел|одиночный пробел|одиночный пробел|одиночный пробел|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineOnAttributes">
      <MemberSignature Language="C#" Value="public bool NewLineOnAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NewLineOnAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineOnAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NewLineOnAttributes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineOnAttributes : bool with get, set" Usage="System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли записывать атрибуты на новой строке.</summary>
        <value>Значение <see langword="true" />, если необходимо записывать атрибуты в отдельные строки; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.  
  
 <block subset="none" type="note"><para>  
 Этот параметр ни на что не влияет, если значение свойства  <see cref="P:System.Xml.XmlWriterSettings.Indent" /> равно <see langword="false" />.  
  
</para></block>  
  
 Если значение объекта <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> равно <see langword="true" />, каждому атрибуту предшествует новая строка и дополнительный уровень отступа.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство применяется только к <xref:System.Xml.XmlWriter> экземпляров, вывода содержимого текста; в противном случае этот параметр игнорируется.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.XmlWriter> , записывает XML-файл и записывает каждый атрибут в новой строке.  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 Пример выводит следующие результаты:  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OmitXmlDeclaration">
      <MemberSignature Language="C#" Value="public bool OmitXmlDeclaration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OmitXmlDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Property OmitXmlDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OmitXmlDeclaration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OmitXmlDeclaration : bool with get, set" Usage="System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, следует ли опустить XML-объявление.</summary>
        <value>Значение <see langword="true" />, если необходимо опустить XML-объявление; в противном случае — значение <see langword="false" />. Значением по умолчанию является <see langword="false" />; XML-объявление записывается.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство применяется только к <xref:System.Xml.XmlWriter> экземпляров, вывода содержимого текста; в противном случае этот параметр игнорируется.  
  
 Если <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> присваивается `false`, автоматически будет записан объявление XML  
  
 XML-объявление записывается всегда в том случае, если <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> присваивается <xref:System.Xml.ConformanceLevel.Document>, даже если <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> присваивается `true`.  
  
 XML-объявление записывается никогда не в том случае, если <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> присваивается <xref:System.Xml.ConformanceLevel.Fragment>. Вы можете вызвать <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> явным образом записать объявление XML.  
  
   
  
## Examples  
 Следующий пример записывает фрагмент XML в поток памяти.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputMethod">
      <MemberSignature Language="C#" Value="public System.Xml.XmlOutputMethod OutputMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlOutputMethod OutputMethod" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputMethod As XmlOutputMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlOutputMethod OutputMethod { System::Xml::XmlOutputMethod get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputMethod : System.Xml.XmlOutputMethod" Usage="System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlOutputMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает метод, используемый для сериализации выходных данных объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
        <value>Одно из значений <see cref="T:System.Xml.XmlOutputMethod" />. Значение по умолчанию — <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство указывает метод, используемый для сериализации выходных данных. Выходные данные могут быть сериализованы с помощью правил HTML, правилами XML 1.0 и т. д. Этот параметр имеет значение процессором XSLT и используется внутри Visual Studio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="xmlWriterSettings.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Повторно загружает значения по умолчанию для элементов класса параметров.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Следующая таблица показывает значение по умолчанию значения свойств для экземпляра <xref:System.Xml.XmlWriterSettings>.  
  
|Свойство.|Исходное значение|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Два пробела.|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n`.|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentOnClose">
      <MemberSignature Language="C#" Value="public bool WriteEndDocumentOnClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteEndDocumentOnClose" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEndDocumentOnClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteEndDocumentOnClose { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WriteEndDocumentOnClose : bool with get, set" Usage="System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, добавляет ли <see cref="T:System.Xml.XmlWriter" /> закрывающие теги ко всем незакрытым тегам элементов при вызове метода <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
        <value>Значение <see langword="true" />, если все незакрытые теги элементов будут закрыты; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если задан этот флаг `false`, выходной XML-файл не может быть правильного формата.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>