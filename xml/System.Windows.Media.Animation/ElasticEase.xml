<Type Name="ElasticEase" FullName="System.Windows.Media.Animation.ElasticEase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2a592249fb1fb2aa4b1eb53c292a08956c2e8cfb" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53502040" /></Metadata><TypeSignature Language="C#" Value="public class ElasticEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElasticEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ElasticEase" />
  <TypeSignature Language="VB.NET" Value="Public Class ElasticEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ElasticEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <TypeSignature Language="F#" Value="type ElasticEase = class&#xA;    inherit EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет функцию плавности для создания анимации, напоминающую пружину, которая колеблется вперед-назад до полного успокоения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно управлять при весной «» происходит в анимации, указав <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> значение свойства. Приведенный ниже график показывает различные значения <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, где *f*(*t*) обозначает ход анимации и *t* представляет время.  
  
 ![Графы ElasticEase при различных значениях easingmode. ] (~/add/media/elasticease-graph.png "ElasticEase для различных значениях easingmode.")  
  
 Можно указать, сколько раз анимации oscillates и обратно с помощью <xref:System.Windows.Media.Animation.ElasticEase.Oscillations%2A> свойство и тесная как с помощью свойства springiness из колебаний <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A> свойство.  
  
> [!NOTE]
>  Так как эта анимация вызывает колебания значений, анимация может непредвиденным образом создать отрицательные числа интерполяции. Это может привести к ошибкам при анимации свойства, которые не допускают отрицательные числа. Например, при применении этой анимации для <xref:System.Windows.FrameworkElement.Height%2A> объекта (например от 0 до 200 с <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> из <xref:System.Windows.Media.Animation.EasingMode.EaseIn>), анимация будет пытаться выполнить интерполяцию через отрицательных чисел для <xref:System.Windows.FrameworkElement.Height%2A> которого вызовет ошибку.  
  
 Существует несколько других функций плавности помимо <xref:System.Windows.Media.Animation.ElasticEase>.
Помимо использования функций плавности, входящих в среду выполнения, можно создать собственные функции плавности путем наследования от <xref:System.Windows.Media.Animation.EasingFunctionBase>.  
  
## <a name="xaml-object-element-usage"></a>Использование элемента объекта XAML  
  
```xaml
<ElasticEase .../>  
```  
  
   
  
## Examples  
 В следующем примере применяется <xref:System.Windows.Media.Animation.ElasticEase> функцию для реалистичной анимации <xref:System.Windows.Media.Animation.DoubleAnimation> для создания анимации, напоминающую пружину, и обратно до до полного успокоения.  
  
 [!code-xaml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.PowerEase" />
    <altmember cref="T:System.Windows.Media.Animation.BackEase" />
    <altmember cref="T:System.Windows.Media.Animation.BounceEase" />
    <altmember cref="T:System.Windows.Media.Animation.CircleEase" />
    <altmember cref="T:System.Windows.Media.Animation.CubicEase" />
    <altmember cref="T:System.Windows.Media.Animation.ExponentialEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuadraticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuarticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuinticEase" />
    <altmember cref="T:System.Windows.Media.Animation.SineEase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ElasticEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ElasticEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ElasticEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Media.Animation.ElasticEase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ElasticEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="elasticEase.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр производного класса <see cref="T:System.Windows.Freezable" />. При создании производного класса вы должны переопределить этот метод.</summary>
        <returns>Новый экземпляр.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы анимации косвенно наследовать от <xref:System.Windows.Freezable>. По этой причине необходимо переопределить <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> метод для создания пользовательской анимации объекта.  
  
   
  
## Examples  
 Пример типичной реализации <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ElasticEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberSignature Language="F#" Value="override this.EaseInCore : double -&gt; double" Usage="elasticEase.EaseInCore normalizedTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime">Нормализованное время (ход выполнения) анимации.</param>
        <summary>Предоставляет часть логики функции для реалистичной анимации, которую можно переопределить для создания режима <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> настраиваемой функции для реалистичной анимации.</summary>
        <returns>Значение типа double, представляющее преобразованный ход выполнения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод преобразует Нормированное время для управления скоростью анимации для <xref:System.Windows.Media.Animation.EasingMode.EaseIn> вариант <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.  
  
 Необходимо только указать функции плавности для <xref:System.Windows.Media.Animation.EasingMode.EaseIn> прописные, так как реализация <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> метод преобразования `normalizedTime` для <xref:System.Windows.Media.Animation.EasingMode.EaseOut> и <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> случаев.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Oscillations">
      <MemberSignature Language="C#" Value="public int Oscillations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Oscillations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ElasticEase.Oscillations" />
      <MemberSignature Language="VB.NET" Value="Public Property Oscillations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Oscillations { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Oscillations : int with get, set" Usage="System.Windows.Media.Animation.ElasticEase.Oscillations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает количество перемещений целевого объекта в анимации.</summary>
        <value>Количество перемещений целевого объекта в анимации. Это значение должно быть больше или равно 0. Значение по умолчанию — 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.ElasticEase.OscillationsProperty>  
  
<a name="xamlAttributeUsage_Occilations"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<ElasticEase Oscillations="int"/>  
```  
  
   
  
## Examples  
 В следующем примере применяется <xref:System.Windows.Media.Animation.ElasticEase> функцию для реалистичной анимации <xref:System.Windows.Media.Animation.DoubleAnimation> для создания анимации, напоминающую пружину, и обратно до до полного успокоения.  
  
 [!code-xaml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OscillationsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OscillationsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OscillationsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ElasticEase.OscillationsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OscillationsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OscillationsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OscillationsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.ElasticEase.OscillationsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет свойство зависимостей <see cref="P:System.Windows.Media.Animation.ElasticEase.Oscillations" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Springiness">
      <MemberSignature Language="C#" Value="public double Springiness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Springiness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ElasticEase.Springiness" />
      <MemberSignature Language="VB.NET" Value="Public Property Springiness As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Springiness { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Springiness : double with get, set" Usage="System.Windows.Media.Animation.ElasticEase.Springiness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает жесткость пружины. Чем ниже значение свойства Springiness, тем пружина более жесткая и тем быстрее уменьшается интенсивность эластичности при каждом колебании.</summary>
        <value>Положительное число, указывающее жесткость пружины. Значение по умолчанию — 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Наименьшее значение <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A> является значение, тем пружина более жесткая и тем быстрее уменьшается интенсивность эластичности каждом колебании.  
  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.ElasticEase.SpringinessProperty>  
  
 На следующей схеме показано влияние различных значений свойства <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>.  
  
 ![Демонстрация разных значений свойства Springiness. ] (~/add/media/elasticease-springiness.png "Демонстрация разных значений свойства Springiness.")  
  
<a name="xamlAttributeUsage_Springiness"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<ElasticEase Springiness="double"/>  
```  
  
   
  
## Examples  
 В следующем примере применяется <xref:System.Windows.Media.Animation.ElasticEase> функцию для реалистичной анимации <xref:System.Windows.Media.Animation.DoubleAnimation> для создания анимации, напоминающую пружину, и обратно до до полного успокоения.  
  
 [!code-xaml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpringinessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpringinessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpringinessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ElasticEase.SpringinessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SpringinessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SpringinessProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SpringinessProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.ElasticEase.SpringinessProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет свойство зависимостей <see cref="P:System.Windows.Media.Animation.ElasticEase.Springiness" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>