<Type Name="ChartSerializer" FullName="System.Web.UI.DataVisualization.Charting.ChartSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59e145f7990c9907f6917cc516248cfa6342db06" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56792672" /></Metadata><TypeSignature Language="C#" Value="public class ChartSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChartSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class ChartSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChartSerializer" />
  <TypeSignature Language="F#" Value="type ChartSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Format")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Включает сериализацию элемента управления <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс указывается в виде <xref:System.Web.UI.DataVisualization.Charting.Chart.Serializer%2A> свойство корневого <xref:System.Web.UI.DataVisualization.Charting.Chart> класса.  
  
 Сериализация сохраняет состояние элемента диаграммы, а также предоставляет возможность загрузки сериализованных данных в диаграмму. Все свойства диаграммы может быть сохранена, включая данные диаграммы. Кроме того можно сбросить все свойства диаграммы, помеченные для сериализации.  
  
 При необходимости этот класс можно использовать при управлении состояния представления, определяемые пользователем. Один из его `Load` методы можно использовать для загрузки состояния представления и одна из `Save` методы могут использоваться при задании состояния представления.  
  
 XML-индекс или двоичные форматы могут использоваться для хранения сериализованных данных. По умолчанию используется XML, но можно изменить формат с <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> свойство.  
  
 Свойства диаграммы сохраняются и загрузить с помощью `Save` и `Load` методы, соответственно. Обратите внимание на то, что будут сохранены только те свойства, значения по умолчанию. Данные можно сохранить и/или загружены с помощью файла, потоковую передачу, <xref:System.IO.TextWriter>, <xref:System.IO.TextReader>, <xref:System.Xml.XmlWriter> и <xref:System.Xml.XmlReader> объектов. При сохранении или загрузке данных с помощью объекта производным от <xref:System.IO.TextReader>, <xref:System.IO.TextWriter>, <xref:System.Xml.XmlReader> или <xref:System.Xml.XmlWriter> классы, формат данных должна быть в формате XML.  
  
 Ниже перечислены три метода: от простейших до самых сложных, используемый для определения сериализуемых данных. Обратите внимание, что также можно определить несериализуемые данных. Этот метод описан в следующем абзаце.  
  
-   Сериализация <xref:System.Web.UI.DataVisualization.Charting.Chart> с помощью `Save` и `Load` методы, не указывая любые сериализуемые свойства. Все свойства диаграммы со значения по умолчанию, включая данные диаграммы сериализуются.  
  
-   Сериализация диаграммы свойства, определенные <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойство. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Свойство группирует свойства диаграммы должен быть сериализован в категорий, таких как данных, вид и т. д. Обратите внимание, что имена <xref:System.Web.UI.DataVisualization.Charting.ChartArea> и <xref:System.Web.UI.DataVisualization.Charting.Series> объекты сериализуются автоматически; в сериализованных данных применяется к существующей области диаграммы и ряда при загрузке.  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Свойство реализуется внутренне <xref:System.Web.UI.DataVisualization.Charting.Chart> управление в качестве <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойство  
  
-   Сериализация свойств диаграммы, определяемое <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойство. Это разделенный запятыми список всех свойств диаграммы, которые могут быть сериализованы. Это свойство было присвоено явным значением, это ответственность разработчика, чтобы указать все свойства должен быть сохранен. Другими словами, в отличие от <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойства, имена областей диаграммы и ряда не будут сохранены автоматически. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> И <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойства также могут использоваться совместно. Тем не менее, убедитесь, что <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> объединяется с самим собой, при задаваемое, в противном случае свойства диаграммы, определяемое <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойство будет переопределено.  
  
 Чтобы запретить некоторые свойства из сериализации, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойство. Когда будет задано одно значение как сериализуемые и не поддерживают сериализацию, что обычно происходит при использовании подстановочных знаков, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойство имеет приоритет. Тем не менее приоритет также зависит от количества подстановочные знаки были использованы при задании свойства.  
  
 По умолчанию сериализуемые свойства сбрасываются в значения по умолчанию перед загрузкой. Это поведение можно изменить с помощью <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> свойство. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset%2A> Метод может также использоваться явным образом Сброс свойств диаграммы к значениям по умолчанию.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationContents Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationContents Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As SerializationContents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationContents Content { System::Web::UI::DataVisualization::Charting::SerializationContents get(); void set(System::Web::UI::DataVisualization::Charting::SerializationContents value); };" />
      <MemberSignature Language="F#" Value="member this.Content : System.Web.UI.DataVisualization.Charting.SerializationContents with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationContents), "Default")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationContents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип подлежащего сериализации содержимого диаграммы.</summary>
        <value>Значение перечисления <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationContents" />, представляющее содержимое диаграммы, которое будет сериализовано в ходе операции загрузки, сохранения или сброса. По умолчанию сохраняются все отличающиеся от значений по умолчанию свойства диаграммы, включая данные.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию, сериализуются все свойства диаграммы, если любой из `Save` и `Load` методы вызываются. Чтобы обеспечить больший контроль над тем, какие сериализуется, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойство. Обратите внимание, что <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойства также могут использоваться вместе с <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойство.  
  
 > [!IMPORTANT]
 > <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Свойство определяет типы характеристики диаграммы, такие как «внешний вид», подлежащий сериализации и фактически реализуются внутренним образом как <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойство. Это значит, что параметр <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойства, а затем установив <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойства приведет к <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> значение свойства переопределения, если не <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> объединяется. См. в разделе пример кода ниже пример этой процедуры.  
  
 Если задать <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойство, все <xref:System.Web.UI.DataVisualization.Charting.ChartArea> и <xref:System.Web.UI.DataVisualization.Charting.Series> имена объектов будет автоматически сериализован; это означает, что сериализованные данные, относящиеся к области диаграммы и ряда будет применяться к существующим объектам при загрузке.  
  
 Это свойство влияет на все загрузки, сохранения и операций сброса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationFormat Format" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationFormat Format { System::Web::UI::DataVisualization::Charting::SerializationFormat get(); void set(System::Web::UI::DataVisualization::Charting::SerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.Format : System.Web.UI.DataVisualization.Charting.SerializationFormat with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationFormat), "Xml")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает формат, используемый при сериализации диаграммы.</summary>
        <value>Значение перечисления <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationFormat" />, представляющее формат сериализованных данных. Значение по умолчанию - XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данные могут быть сериализованы в XML или двоичном формате. Двоичный формат является компактным и использует меньше памяти, чем XML. Тем не менее, в XML, — это текстовый формат, удобное для восприятия.  
  
 При сохранении или загрузке сериализованных данных, формат должен быть XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentString">
      <MemberSignature Language="C#" Value="protected string GetContentString (System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetContentString(valuetype System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetContentString (content As SerializationContents, serializable As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetContentString(System::Web::UI::DataVisualization::Charting::SerializationContents content, bool serializable);" />
      <MemberSignature Language="F#" Value="member this.GetContentString : System.Web.UI.DataVisualization.Charting.SerializationContents * bool -&gt; string" Usage="chartSerializer.GetContentString (content, serializable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Web.UI.DataVisualization.Charting.SerializationContents" />
        <Parameter Name="serializable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="content">Сериализуемое содержимое.</param>
        <param name="serializable">Значение <see langword="true" />для получения сериализуемой строки; значение <see langword="false" /> для получения несериализуемой строки.</param>
        <summary>Возвращает сериализуемые или несериализуемые имена классов и свойств в зависимости от значения флага.</summary>
        <returns>Значение типа <see langword="string" />, представляющее сериализуемые или несериализуемые имена классов и свойств.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResetWhenLoading">
      <MemberSignature Language="C#" Value="public bool IsResetWhenLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResetWhenLoading" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property IsResetWhenLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResetWhenLoading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsResetWhenLoading : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает флаг, определяющий, нужно ли перед загрузкой установить для свойств объекта значения по умолчанию.</summary>
        <value>Значение <see langword="true" />, если перед загрузкой для свойств объекта устанавливаются значения по умолчанию; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemplateMode">
      <MemberSignature Language="C#" Value="public bool IsTemplateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemplateMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTemplateMode : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает флаг, указывающий, работает ли сериализатор диаграмм в режиме создания шаблона.</summary>
        <value>Значение <see langword="true" />, если сериализатор диаграмм работает в режиме создания шаблона; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknownAttributeIgnored">
      <MemberSignature Language="C#" Value="public bool IsUnknownAttributeIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknownAttributeIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUnknownAttributeIgnored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknownAttributeIgnored { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknownAttributeIgnored : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает флаг, указывающий, будут ли неизвестные элементы и свойства XML пропускаться без создания исключения.</summary>
        <value>Значение <see langword="true" />, если неизвестные элементы и свойства XML пропускаются без создания исключения; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает сериализованные данные в элемент управления <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.Stream -&gt; unit" Usage="chartSerializer.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Объект класса, производного от <see cref="T:System.IO.Stream" />, например объект <see cref="T:System.IO.MemoryStream" />.</param>
        <summary>Загружает в элемент управления сериализованные данные из объекта класса, производного от <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод для загрузки сериализованных данных в <xref:System.Web.UI.DataVisualization.Charting.Chart> элемента управления.  
  
 При операции загрузки, сериализуемые свойства по умолчанию, сначала сбрасываются к значениям по умолчанию, прежде чем они заданы хранимые значения, если сохранен. Чтобы изменить это поведение, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> свойство.  
  
 По умолчанию будут загружены все сериализованные свойства диаграммы. Для загрузки определенных свойств сериализованный укажите <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> или <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойства перед загрузкой данных.  
  
 Обратите внимание, что при сохранении данных с помощью `Save` фактически сериализуются метод, только те свойства, которые имеют значения по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.TextReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">Объект чтения, например <see cref="T:System.IO.StringReader" />, относящийся к классу, производному от класса <see cref="T:System.IO.TextReader" />.</param>
        <summary>Загружает в элемент управления сериализованные данные из объекта чтения, который относится к классу, производному от класса <see cref="T:System.IO.TextReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод для загрузки сериализованных данных в <xref:System.Web.UI.DataVisualization.Charting.Chart> элемента управления.  
  
 При операции загрузки, по умолчанию сериализуемые свойства сначала восстанавливаются значения по умолчанию, прежде чем они заданы хранимые значения, если сохранен. Чтобы изменить это поведение, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> свойство.  
  
 По умолчанию будут загружены все сериализованные свойства диаграммы. Установив <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> или <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойства, определенный набор свойств могут быть загружены.  
  
 Если вы используете это определение, обратите внимание, что формат, который устанавливается при <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> свойство, должны быть XML.  
  
 Если <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> свойство <xref:System.Web.UI.DataVisualization.Charting.Chart> элемент управления используется для сохранения состояния, этот метод можно использовать для загрузки сериализованного данные, переданных клиентом обратно <xref:System.Web.UI.DataVisualization.Charting.Chart> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="chartSerializer.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Относительный или абсолютный путь к файлу, используемому для хранения сериализованных данных. Если указан относительный путь, он определяется относительно текущего каталога.</param>
        <summary>Загружает сохраненные на диске сериализованные данные в элемент управления <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод для загрузки сериализованных данных в <xref:System.Web.UI.DataVisualization.Charting.Chart> элемента управления.  
  
 При операции загрузки, сериализуемые свойства по умолчанию, сначала сбрасываются к значениям по умолчанию, прежде чем они заданы хранимые значения, если сохранен. Чтобы изменить это поведение, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> свойство.  
  
 По умолчанию будут загружены все сериализованные свойства диаграммы. Для загрузки определенных свойств сериализованный укажите <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> или <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойства перед загрузкой данных.  
  
 Обратите внимание, что при сохранении данных с помощью `Save` фактически сериализуются метод, только те свойства, которые имеют значения по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Объект, из которого считываются сохраненные данные. Объект относится к классу, производному от <see cref="T:System.Xml.XmlReader" />, и может представлять собой как объект .NET Framework, так и объект, определенный пользователем.</param>
        <summary>Загружает в элемент управления сериализованные данные из объекта класса, производного от <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод для загрузки сериализованных данных в <xref:System.Web.UI.DataVisualization.Charting.Chart> элемента управления.  
  
 При операции загрузки, по умолчанию сериализуемые свойства сначала восстанавливаются значения по умолчанию, прежде чем они заданы хранимые значения, если сохранен. Чтобы изменить это поведение, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> свойство.  
  
 По умолчанию будут загружены все сериализованные свойства диаграммы. Если задать <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> или <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойства, определенный набор свойств могут быть загружены.  
  
 При использовании этого определения, следует использовать формат XML. его можно изменить с помощью <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> свойство.  
  
 При работе с XML формата текстовых файлов, для простоты использования <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load%2A> метод вместо этого.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NonSerializableContent">
      <MemberSignature Language="C#" Value="public string NonSerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NonSerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property NonSerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NonSerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NonSerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает свойства диаграммы, которые не будут сериализованы.</summary>
        <value>Выражение типа <see langword="string" /> с разделенными запятыми значениями, представляющее свойства, которые не будут сериализованы. Используется синтаксис "Класс.Свойство[,Класс.Свойство]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию все свойства диаграммы будут сериализованы при `Save` и `Load` методы вызываются. Можно использовать <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойство, чтобы ограничить характеристики диаграммы, подлежащий сериализации, наряду с <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойства.  
  
 Это свойство определяет, какие характеристики диаграммы не будут сериализованы. Можно использовать подстановочные знаки в строковом выражении, так же, как <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойство. Например, чтобы исключить все диаграммы `BackColor` свойства из сериализации, присвойте этому свойству значение «*. BackColor».  
  
 В некоторых случаях свойству можно присвоить как подлежащее и не сериализуется, что обычно происходит при использовании подстановочных знаков. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Выражение имеет более низкий приоритет по сравнению с <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> выражение. Тем не менее Обратите внимание на то, что меньше вес назначается строка выражения, использующие подстановочные знаки. Например если <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойство имеет значение «*. Цвет фона» и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойству <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, все B`ackColor` свойства, за исключением <xref:System.Web.UI.DataVisualization.Charting.ChartArea> сериализуются объекты.  
  
 Если <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойство задано, приоритет зависит от того, сколько подстановочных знаков, используемых в <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> выражение. Например, установка <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойства <xref:System.Web.UI.DataVisualization.Charting.SerializationContents.Appearance> приведет к <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> содержащий свойство "\*. Обратно\*«выражение. Если <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойство имеет значение "\*. Обратно\*«, что все `Back*` такие как свойства диаграммы `BackColor`, `BackGradient`, и т. д., по-прежнему должен быть сериализован. Это обусловлено <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> значение свойства имеет более высокий приоритет по сравнению с <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойство.  
  
 Это свойство влияет на все сохранения, загрузки и операций сброса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="chartSerializer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сбрасывает все свойства диаграммы, помеченные для сериализации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию этот метод сбрасывает все свойства диаграммы, к значениям по умолчанию.  
  
 Чтобы ограничить свойства, которые сбрасываются в значения по умолчанию, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойства.  
  
 Обратите внимание, что этот метод также вызывается автоматически при `Load` используется метод и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> свойству `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Сохраняет свойства диаграммы, значения которых отличаются от значений по умолчанию. Все свойства диаграммы можно сериализовать, в том числе данные.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream -&gt; unit" Usage="chartSerializer.Save stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Объект класса, производного от <see cref="T:System.IO.Stream" />, например <see cref="T:System.IO.MemoryStream" />, который служит для сохранения свойств диаграммы.</param>
        <summary>Сохраняет данные и свойства диаграммы, значения которых отличаются от значений по умолчанию, в объекте класса, производного от <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию при вызове этого метода сериализуются все свойства диаграммы со значения по умолчанию, которые включают доступ к данным. Для управления характеристики диаграммы для сериализации, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойства.  
  
 Если этот метод используется для сохранения свойства внешнего вида в качестве шаблона, убедитесь, что <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> свойство <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> объекта сначала устанавливается `true` перед вызовом этого метода.  
  
 Сериализация диаграммы в качестве шаблона происходит по-разному из нешаблонных сериализации. сериализация шаблона сосредоточена на свойства внешнего вида.  
  
 При сериализации шаблона <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> метод может использоваться, чтобы загрузить шаблон, чтобы предоставить свойства внешнего вида диаграммы.  
  
 Шаблоны можно использовать для имитации пользовательских палитр.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект класса, производного от <see cref="T:System.IO.TextWriter" />, например <see cref="T:System.IO.StringWriter" />, который служит для сохранения свойств диаграммы.</param>
        <summary>Сохраняет данные и свойства диаграммы, значения которых отличаются от значений по умолчанию, в заданном объекте класса, производного от <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию при вызове этого метода сериализуются все свойства диаграммы со значения по умолчанию, которые включают доступ к данным. Для управления, какие характеристики диаграммы сериализуются, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойства.  
  
 При использовании этого определения, следует использовать формат XML. формат можно задать с помощью <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> свойство.  
  
 Если <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> свойство <xref:System.Web.UI.DataVisualization.Charting.Chart> элемент управления используется для сохранения состояния, этот метод можно использовать для сохранения сериализованных данных объект, производный от <xref:System.IO.TextWriter>, который затем используется для записи данных <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="chartSerializer.Save fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Относительный или абсолютный путь к файлу, используемому для хранения сериализованных данных. Обратите внимание, что если указан относительный путь, он определяется относительно текущего каталога.</param>
        <summary>Сохраняет данные и свойства диаграммы, значения которых отличаются от значений по умолчанию, в указанный файл.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию при вызове этого метода сериализуются все свойства диаграммы со значения по умолчанию, которые включают доступ к данным. Для управления характеристики диаграммы, чтобы быть сериализовано используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойства.  
  
 По умолчанию данные сохраняются в формате XML. Чтобы сохранить данные в двоичном формате, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> свойство.  
  
 Обратите внимание на то, что необходимо включить разрешения на запись для каталога, в котором хранится файл. По умолчанию это папка Bin приложения.  
  
 Если этот метод используется для сохранения свойств внешнего вида как шаблон, убедитесь, что <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> сначала свойству `true` перед вызовом этого метода.  
  
 Сериализация диаграммы в качестве шаблона протекает по разному из сериализации не являющихся шаблонами, главным образом потому, что сериализация шаблона сосредоточена на свойства внешнего вида.  
  
 При сериализации шаблона <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> метод может использоваться, чтобы загрузить шаблон, чтобы предоставить свойства внешнего вида диаграммы.  
  
 Шаблоны можно использовать для имитации пользовательских палитр.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Xml.XmlWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект, производный от класса <see cref="T:System.Xml.XmlWriter" />, который используется для сохранения свойств объекта <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</param>
        <summary>Сохраняет данные и свойства диаграммы, значения которых отличаются от значений по умолчанию, в заданном объекте класса, производного от <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию при вызове этого метода сериализуются все свойства диаграммы со значения по умолчанию, которые включают доступ к данным. Для управления, какие характеристики диаграммы сериализуются, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойства.  
  
 При использовании этого определения, следует использовать формат XML. формат можно изменить с помощью <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> свойство.  
  
 При работе с XML формата текстовых файлов, для простоты использования <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> метод вместо этого.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializableContent">
      <MemberSignature Language="C#" Value="public string SerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает свойства диаграммы, которые можно сериализовать.</summary>
        <value>Выражение типа <see langword="string" /> с разделенными запятыми значениями, представляющее свойства диаграммы, которые подлежат сериализации. Используется синтаксис "Класс.Свойство[,Класс.Свойство]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию все свойства диаграммы будут сериализованы при `Save` и `Load` методы вызываются. Можно использовать <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойство, чтобы ограничить характеристики диаграммы, подлежащий сериализации, наряду с <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойства.  
  
 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Свойство определяет, какие характеристики диаграммы сериализуются. Можно использовать подстановочные знаки в строковом выражении, так же, как <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойство. Например, для сериализации всех диаграмм `BackColor` свойства, присвойте этому свойству значение «*. BackColor».  
  
 Если <xref:System.Web.UI.DataVisualization.Charting.ChartArea> и/или <xref:System.Web.UI.DataVisualization.Charting.Series> дочерних указаны свойства, затем имена всех <xref:System.Web.UI.DataVisualization.Charting.ChartArea> и <xref:System.Web.UI.DataVisualization.Charting.Series> объектов также необходимо указать для включения материализованных данных, применяемых к существующим <xref:System.Web.UI.DataVisualization.Charting.ChartArea> и <xref:System.Web.UI.DataVisualization.Charting.Series> объектов; то есть необходимо указать «Series.Name» и «ChartArea.Name» выражения. См. в разделе пример кода ниже пример этой процедуры. Аналогичным образом, если используются несколько областей диаграммы, <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> свойства всех диаграмме <xref:System.Web.UI.DataVisualization.Charting.Series> также должен быть сохранен.  
  
 В некоторых случаях свойству можно присвоить как подлежащее и не сериализуется, что обычно происходит при использовании подстановочных знаков. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Выражение имеет более низкий приоритет по сравнению с <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> выражение. Тем не менее Обратите внимание на то, что меньше вес назначается строка выражения, использующие подстановочные знаки. Например если <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойство имеет значение «*. Цвет фона» и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойству <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, все B`ackColor` свойства, за исключением <xref:System.Web.UI.DataVisualization.Charting.ChartArea> сериализуются объекты.  
  
 Если задать <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойство, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> будет установлено внутренним образом. Если <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойство уже задано, но другое свойство должно сериализоваться, убедитесь, что для объединения <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойство при указании этого дополнительного свойства. См. в разделе пример кода ниже пример этой процедуры.  
  
 Это свойство влияет на все сохранения, загрузки и операций сброса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>