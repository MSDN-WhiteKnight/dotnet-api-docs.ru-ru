<Type Name="ExpressionEditor" FullName="System.Web.UI.Design.ExpressionEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eb01c3d6cf6e42b1709ab5acc0cf88f7b14094c3" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53389953" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditor abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditor = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Определяет набор свойств и методов, чтобы оценить выражение, связанное со свойством элемента управления во время разработки и чтобы предоставить таблицу редактора выражений узлу визуального конструктора для использования в диалоговом окне редактора выражений. Это абстрактный класс.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Визуальный конструктор размещения, таких как [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], использует <xref:System.Web.UI.Design.ExpressionEditor> класса для представления пользовательских выражений таблицы редактора для пользователя, а затем определяется выбранным выражением для подготовки к просмотру во время разработки.  
  
 При просмотре <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> свойства для элемента управления в сетке свойств времени разработки, визуальный конструктор отображает диалоговое окно для задания выражений для свойства элемента управления. Можно выбрать тип выражения, на основе списка префиксов выражений. При выборе префикс выражения из списка визуальный конструктор использует связанный <xref:System.Web.UI.Design.ExpressionEditor> и <xref:System.Web.UI.Design.ExpressionEditorSheet> объекты для установки, оценки и преобразования строка выражения, исходя из синтаксиса для этого типа выражения. Визуальный конструктор задает выражение для свойства сопоставленного элемента управления, а затем использует результат оценки выражения для назначения значения свойств, которые отображаются в области конструктора элемента управления.  
  
 Статический <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> методы получения редактор выражений, который связан с префиксом определенного выражения или построителем выражений. <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> Свойство для <xref:System.Web.UI.Design.ExpressionEditor> объект возвращает префикс настроенные выражения. <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> Метод оценивает строку входного выражения. <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Возвращает метод <xref:System.Web.UI.Design.ExpressionEditorSheet> реализация, которая используется для запроса специальных выражений свойств в диалоговом окне выражения.  
  
 Как правило, для поддержки нового типа выражения во время разработки, определения префикса уникальное выражение и предоставлять пользовательскую <xref:System.Web.Compilation.ExpressionBuilder> и <xref:System.Web.UI.Design.ExpressionEditor> реализаций. При необходимости можно указать пользовательское <xref:System.Web.UI.Design.ExpressionEditorSheet> реализация, которая определяет свойства, которые используются для формирования выражения в диалоговом окне выражения.  
  
 Префикс выражения определяет настраиваемый тип выражения и связывает выражение с построитель выражений и редактор выражений. При пользовательских выражений анализируются на странице, префикс выражения используется для создания экземпляров связанного <xref:System.Web.Compilation.ExpressionBuilder> и <xref:System.Web.UI.Design.ExpressionEditor> классы. Чтобы связать префикс выражения построитель выражений и редактор выражений, применить <xref:System.Web.Compilation.ExpressionEditorAttribute> и <xref:System.Web.Compilation.ExpressionPrefixAttribute> атрибуты с пользовательскими <xref:System.Web.Compilation.ExpressionBuilder> и его настройка префикс выражения для expression builder в `expressionBuilders` элемент в файл веб-конфигурации. Префикс не требуется, но настоятельно рекомендуется.  
  
   
  
## Examples  
 В следующем примере кода показано, как выполнять наследование <xref:System.Web.UI.Design.ExpressionEditor> класс определяет настраиваемый редактор выражений.  
  
 [!code-csharp[CustomExpressionEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/customexpressioneditor/cs/CustomAppSettingsExpression.cs#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Следующие шаги при порождении пользовательского <see cref="T:System.Web.UI.Design.ExpressionEditor" /> класса: 
— Переопределение <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> метод для определения пользовательского выражения типа во время разработки.  
  
— При необходимости переопределить <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> метод для возврата пользовательского класса, который определяет свойства, которые вместе составляют пользовательское выражение.  
  
— Применение <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> атрибут <see cref="T:System.Web.Compilation.ExpressionBuilder" /> объявление должен быть сопоставлен конструктора собственных выражений класс редактора выражение производного класса.  
  
Например <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> класс является производным от <see cref="T:System.Web.UI.Design.ExpressionEditor" /> класса, который предоставляет реализацию для оценки и связывание является ссылкой на ресурс строки со свойством элемента управления во время разработки. <see cref="T:System.Web.Compilation.ResourceExpressionBuilder" /> Класс связывается с префикс выражения <see langword="Resources" /> и <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> реализации. <see cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> Возвращает метод <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />, который определяет отдельные свойства, которые образуют выражение со ссылкой на ресурс.</para></block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
    <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Так как <xref:System.Web.UI.Design.ExpressionEditor> класс является абстрактным, не удается создать экземпляр <xref:System.Web.UI.Design.ExpressionEditor> класса напрямую с помощью <xref:System.Web.UI.Design.ExpressionEditor.%23ctor%2A> конструктор.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Design.ExpressionEditor" /> класса, переопределить <see cref="M:System.Web.UI.Design.ExpressionEditor.#ctor" /> конструктор, чтобы реализовать пользовательские действия инициализации для реализации редактора выражений.</para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public abstract object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="expressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Оцениваемая строка выражения. Это выражение не содержит префикса выражения.</param>
        <param name="parseTimeData">Объект, содержащий дополнительные сведения анализа для оценки параметра <paramref name="expression" />. Они обычно предоставляются построителем выражений.</param>
        <param name="propertyType">Тип свойства элемента управления, к которому привязан параметр <paramref name="expression" />.</param>
        <param name="serviceProvider">Реализация поставщика службы, предоставленная узелом конструктора, используемым для получения дополнительных служб времени разработки.</param>
        <summary>Оценивает строку выражения и предоставляет значение времени выполнения для свойства элемента управления.</summary>
        <returns>Объект, на который ссылается оцененная строка выражения, если оценка выражения прошла успешно; в противном случае — значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Узел визуального конструктора использует <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> метода для оценки выражения и укажите значение времени разработки для свойства сопоставленного элемента управления.  
  
 Визуальный конструктор использует <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=nameWithType> метода для синтаксического анализа строки выражения во время разработки, а затем вызывает <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> метод с данными проанализированное выражение. Визуальный конструктор использует результат оценки выражения, чтобы назначить значения свойств, которые отображаются в области конструктора элемента управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Классы, производные от <see cref="T:System.Web.UI.Design.ExpressionEditor" /> класс должен переопределять <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> метод для определения пользовательского выражения типа во время разработки.  
  
Как минимум <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> реализации необходимо использовать следующие действия: 
1.  Оценка строки выражения и определение объекта, на который ссылается выражение.  
  
2.  Возвращает <see langword="null" />, если строка выражения не может быть вычислено.  
  
3.  Используйте <see cref="M:System.Type.IsAssignableFrom(System.Type)" /> метод <paramref name="propertyType" /> для определения ли упоминаемый объект можно назначить непосредственно в тип свойства элемента управления, а затем, в зависимости от результата, выполнение одного из следующих действий: 
— Если упоминаемый объект можно назначить свойству элемента управления, возврата ссылаемого объекта для выражения.  
  
— Если упоминаемый объект — простой тип, например строки, возврата ссылаемого объекта.  
  
-В противном случае определяет, может ли назначенные упоминаемого объекта, или они будут преобразуется в тип свойства.  
  
4.  Используйте <see cref="Overload:System.ComponentModel.TypeConverter.CanConvertFrom" /> метод <see cref="T:System.ComponentModel.TypeConverter" /> для объекта <paramref name="propertyType" /> для определения ли упоминаемый объект можно преобразовать в тип свойства элемента управления, а затем, в зависимости от результата, выполнение одного из следующих действий: 
— Если объект может быть преобразован в тип свойства элемента управления, возвратите объект, преобразованный, используя <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> метод.  
  
— Если упоминаемый объект нельзя назначить или преобразовать в <paramref name="propertyType" />, возврата ссылаемого объекта.  
  
При необходимости <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> могут использоваться реализацией <paramref name="parseTimeData" /> объекта, предоставляемую <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> реализации оптимизации или помочь в оценке входного выражения строки.</para></block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionPrefix">
      <MemberSignature Language="C#" Value="public string ExpressionPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionPrefix : string" Usage="System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает префикс выражений, идентифицирующий строки выражений, поддерживаемые реализацией редактора выражений.</summary>
        <value>Строка, представляющая префикс для выражений, поддерживаемых классом, производным от класса <see cref="T:System.Web.UI.Design.ExpressionEditor" />; в противном случае — пустая строка (""), если с редактором выражений не связан никакой префикс выражения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Префикс выражения определяет настраиваемый тип выражения и связывает выражение с построитель выражений и редактор выражений. При пользовательских выражений анализируются на странице, префикс выражения используется для создания экземпляров связанного <xref:System.Web.Compilation.ExpressionBuilder> и <xref:System.Web.UI.Design.ExpressionEditor> классы. Чтобы связать префикс выражения построитель выражений и редактор выражений, применить <xref:System.Web.Compilation.ExpressionEditorAttribute> и <xref:System.Web.Compilation.ExpressionPrefixAttribute> атрибуты с пользовательскими <xref:System.Web.Compilation.ExpressionBuilder> и его настройка префикс выражения для expression builder в `expressionBuilders` элемент в файл веб-конфигурации.  
  
 Как правило, производные классы не переопределить <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> свойство. Базовый <xref:System.Web.UI.Design.ExpressionEditor> класса наборы <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> значение на основе <xref:System.Web.Compilation.ExpressionPrefixAttribute> атрибутов для связанного <xref:System.Web.Compilation.ExpressionBuilder> объекта.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExpressionEditor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает реализацию <see cref="T:System.Web.UI.Design.ExpressionEditor" />, связанную с префиксом выражения или построителем выражений.</summary>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (string expressionPrefix, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(string expressionPrefix, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionPrefix As String, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(System::String ^ expressionPrefix, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionPrefix, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrefix" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionPrefix">Префикс выражения, используемый для поиска связанного редактора выражения.</param>
        <param name="serviceProvider">Реализация поставщика службы, предоставленная узелом конструктора, используемым для получения дополнительных служб времени разработки.</param>
        <summary>Возвращает реализацию <see cref="T:System.Web.UI.Design.ExpressionEditor" />, связанную с заданным префиксом выражения.</summary>
        <returns>Реализация <see cref="T:System.Web.UI.Design.ExpressionEditor" />, связанная с параметром <paramref name="expressionPrefix" />; в противном случае — значение <see langword="null" />, если параметр <paramref name="expressionPrefix" /> не определен или не связан с объектом <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте статический <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> перегрузок метода, чтобы найти <xref:System.Web.UI.Design.ExpressionEditor> объекта, связанного с префиксом определенного выражения или типом построителя выражений.  
  
 Для каждого типа пользовательского выражения выражения префикс выражения определяет связанные построитель выражений и редактор выражений. При пользовательских выражений анализируются на странице, префикс выражения используется для создания экземпляров связанного <xref:System.Web.Compilation.ExpressionBuilder> и <xref:System.Web.UI.Design.ExpressionEditor> классы.  
  
 Чтобы связать префикс выражения построитель выражений и редактор выражений, применить <xref:System.Web.Compilation.ExpressionEditorAttribute> и <xref:System.Web.Compilation.ExpressionPrefixAttribute> атрибуты с пользовательскими <xref:System.Web.Compilation.ExpressionBuilder> и его настройка префикс выражения для expression builder в `expressionBuilders` элемент в файл веб-конфигурации.  
  
 Для поиска редактора связанное выражение для выражения префикс, <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> метод перечисляет доступные <xref:System.Web.Compilation.ExpressionBuilder> реализации для соответствующий префикс. <xref:System.Web.Compilation.ExpressionBuilder> Реализации можно настроить в `expressionBuilders` раздел файла веб-конфигурации. Если доступный <xref:System.Web.Compilation.ExpressionBuilder> реализация определяет префикс выражения, <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> метод возвращает тип, который указан в <xref:System.Web.Compilation.ExpressionEditorAttribute> атрибут <xref:System.Web.Compilation.ExpressionBuilder> метаданных.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="serviceProvider" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (Type expressionBuilderType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(class System.Type expressionBuilderType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionBuilderType As Type, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(Type ^ expressionBuilderType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : Type * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionBuilderType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionBuilderType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionBuilderType">Тип производного класса построителя выражений, используемый для обнаружения связанного редактора выражений.</param>
        <param name="serviceProvider">Реализация поставщика службы, предоставленная узелом конструктора, используемым для получения дополнительных служб времени разработки.</param>
        <summary>Возвращает реализацию <see cref="T:System.Web.UI.Design.ExpressionEditor" />, связанную с заданным типом построителя выражений.</summary>
        <returns>Реализация <see cref="T:System.Web.UI.Design.ExpressionEditor" />, связанная с параметром <paramref name="expressionBuilderType" />; в противном случае — значение <see langword="null" />, если параметр <paramref name="expressionBuilderType" /> не может быть обнаружен или для него не существует связанного редактора <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте статический <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> перегрузок, чтобы найти <xref:System.Web.UI.Design.ExpressionEditor> объекта, связанного с префиксом определенного выражения или типом построителя выражений.  
  
 Для каждого типа пользовательского выражения выражения префикс выражения определяет связанные построитель выражений и редактор выражений. При пользовательских выражений анализируются на странице, префикс выражения используется для создания экземпляров связанного <xref:System.Web.Compilation.ExpressionBuilder> и <xref:System.Web.UI.Design.ExpressionEditor> классы.  
  
 Чтобы связать префикс выражения построитель выражений и редактор выражений, применить <xref:System.Web.Compilation.ExpressionEditorAttribute> и <xref:System.Web.Compilation.ExpressionPrefixAttribute> атрибуты с пользовательскими <xref:System.Web.Compilation.ExpressionBuilder> и его настройка префикс выражения для expression builder в `expressionBuilders` элемент в файл веб-конфигурации.  
  
 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> Метод перечисляет доступные <xref:System.Web.Compilation.ExpressionBuilder> реализации для поиска `expressionBuilderType`. <xref:System.Web.Compilation.ExpressionBuilder> Реализации можно настроить в `expressionBuilders` раздел файла веб-конфигурации. Если `expressionBuilderType` находится в набор доступных <xref:System.Web.Compilation.ExpressionBuilder> реализациях <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> метод возвращает тип, который указан в <xref:System.Web.Compilation.ExpressionEditorAttribute> атрибут <xref:System.Web.Compilation.ExpressionBuilder> метаданных.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="expressionBuilderType" /> имеет значение <see langword="null" />.  
  
-или- 
 Свойство <paramref name="serviceProvider" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet&#xA;override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="expressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Набор строк выражений для свойства элемента управления, используемый для инициализации таблицы редактора выражений.</param>
        <param name="serviceProvider">Реализация поставщика службы, предоставленная узелом конструктора, используемым для получения дополнительных служб времени разработки.</param>
        <summary>Возвращает таблицу редактора выражений, связанную с текущим редактором выражений.</summary>
        <returns>Объект <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />, определяющий настраиваемые свойства выражения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Возвращает метод <xref:System.Web.UI.Design.ExpressionEditorSheet> реализация, которая определяет строки, которые объединяются для формирования пользовательского выражения. Визуальный конструктор использует таблицу редактора выражений для запроса одну или несколько строк, в которых сочетаются в настраиваемое выражение. Метод базового класса возвращает таблицу редактора выражений по умолчанию, которая использует одну входную строку для создания выражения. Таблицы редактора выражений определяет таблицу свойств для выражения. Таким образом свойства, предоставляемые редактор выражений становятся свойствами, которые могут быть определены для выражения в диалоговом окне.  
  
 Классы, производные от <xref:System.Web.UI.Design.ExpressionEditor> при необходимости можно переопределить класс <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> метод, чтобы предоставить таблицу редактора пользовательских выражений. Таблицу редактора настраиваемых выражений можно разрешить входные данные времени разработки для нескольких свойств, которые объединяются вместе и образуют строку выражения.  
  
 Например <xref:System.Web.UI.Design.ResourceExpressionEditor> класс является производным от <xref:System.Web.UI.Design.ExpressionEditor> класса, который предоставляет реализацию для оценки и связывание является ссылкой на ресурс строки со свойством элемента управления во время разработки. <xref:System.Web.Compilation.ResourceExpressionBuilder> Класс связывается с префикс выражения `Resources` и <xref:System.Web.UI.Design.ResourceExpressionEditor> реализации. <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType> Возвращает метод <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, который определяет отдельные свойства, которые образуют выражение со ссылкой на ресурс.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Как правило, чтобы указать новый тип выражения во время разработки, определения префикса уникальное выражение и предоставлять пользовательскую <see cref="T:System.Web.Compilation.ExpressionBuilder" /> и <see cref="T:System.Web.UI.Design.ExpressionEditor" /> реализаций. При необходимости можно указать пользовательское <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> реализация, которая определяет свойства, которые используются для создания выражения. Несмотря на то, что файл конфигурации определяет префикс, также необходимо применить <see cref="T:System.Web.Compilation.ExpressionPrefixAttribute" /> объект и объект <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> объекта.  
  
Переопределить <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> метод, чтобы вернуть таблицу редактора выражений, который определяет входные данные времени разработки для нескольких свойств в пользовательское выражение. При выборе свойства элемента управления и тип редактора выражений, визуальный конструктор вызывает <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> метода и блоки, данное выражение строка, представляющая собой, задайте для свойства элемента управления. Используйте <paramref name="expression" /> для задания начальных значений для свойств выражения. Используйте <paramref name="serviceProvider" /> для инициализации конструктора настраиваемой таблицы выражений и для доступа к службам, которые предоставляются хост-узелом конструктора. Например, вызвать <see cref="M:System.IServiceProvider.GetService(System.Type)" /> метод с <see cref="T:System.Web.UI.Design.IWebApplication" /> тип доступа к элементам проекта, документов или сведений о файле конфигурации, которые обеспечиваются через визуальный конструктор.</para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>