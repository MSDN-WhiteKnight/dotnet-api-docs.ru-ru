<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef439d6328ba7f86152448a7ffa625b71451fbf9" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55375051" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditorSheet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет таблицу редактора времени разработки для настраиваемого выражения. Этот класс должен наследоваться.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Таблицу редактора настраиваемых выражений позволяет разработчику задать свойства настраиваемого выражения во время разработки. Значения свойств элементов управления можно задать с помощью строк выражений; строки выражений вычисляются во время выполнения построителем выражений, а также во время разработки с помощью редактора выражений.  
  
 При просмотре <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> свойства для элемента управления в сетке свойств времени разработки, визуальный конструктор отображает диалоговое окно для задания выражений, которые предоставляют значение для свойства элемента управления. Можно выбрать тип выражения, на основе списка префиксов выражений. При выборе префикс выражения из списка визуальный конструктор использует связанный <xref:System.Web.UI.Design.ExpressionEditor> и <xref:System.Web.UI.Design.ExpressionEditorSheet> объекты оценить и преобразовать строку выражения, основанные на синтаксис для этого типа выражения. Визуальный конструктор использует свойства таблицы редактора выражений запрашивать один или несколько строк, объединяемых в строка настраиваемого выражения.  
  
 Как правило, чтобы указать новый тип выражения во время разработки, определения префикса уникальное выражение и предоставлять пользовательскую <xref:System.Web.Compilation.ExpressionBuilder> и <xref:System.Web.UI.Design.ExpressionEditor> реализаций. При необходимости можно указать пользовательское <xref:System.Web.UI.Design.ExpressionEditorSheet> реализация, которая определяет свойства, которые используются для создания выражения. Должен быть сопоставлен с префиксом выражения expression builder и редактор выражений, применить <xref:System.Web.Compilation.ExpressionEditorAttribute> атрибут и <xref:System.Web.Compilation.ExpressionPrefixAttribute> для настраиваемого атрибута <xref:System.Web.Configuration.ExpressionBuilder> класса, а затем настройте префикс выражения для expression builder в `expressionBuilders` элемент в файл веб-конфигурации.  
  
 Реализация по умолчанию <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> метод возвращает таблицу простой редактор, который использует одну входную строку для создания выражения. Редакторы пользовательских выражений, которые являются производными от <xref:System.Web.UI.Design.ExpressionEditor> можно переопределить <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> метод для возврата пользовательского редактора реализация таблицы. Как правило Настраиваемая таблица редактора содержит несколько свойств, которые используются для создания строки выражения. <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Метод возвращает результирующую строку выражения на основе свойств текущего выражения.  
  
 Например <xref:System.Web.UI.Design.ResourceExpressionEditor> класс является производным от <xref:System.Web.UI.Design.ExpressionEditor> класса, который предоставляет реализацию для оценки и связывание является ссылкой на ресурс строки со свойством элемента управления во время разработки. <xref:System.Web.Compilation.ResourceExpressionBuilder> Класс связывается с префикс выражения `Resources` и <xref:System.Web.UI.Design.ResourceExpressionEditor> реализации. <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> Возвращает метод <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, который определяет отдельные свойства, которые образуют выражение со ссылкой на ресурс.  
  
 При наследовании от <xref:System.Web.UI.Design.ExpressionEditorSheet> класса, необходимо переопределить следующие члены:  
  
-   <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Метод для возврата пользовательского редактора реализация таблицы.  
  
-   <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> Конструктор, чтобы реализовать пользовательские действия инициализации для реализации лист редактора выражений.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Производные таблицу редактора настраиваемых выражений из <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> , если вы определяете новый тип выражения для значений свойств элемента управления, и вы хотите создать строку выражения на основе нескольких значений свойств выражения. Реализация производного класса должен содержать следующее: 
-Открытое свойство для каждого уникального значения в строке выражения, которое можно задать во время разработки.  
  
-Реализация <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метод, который формирует строка настраиваемого выражения с значениями свойств таблицы редактора.  
  
(Необязательно) реализация конструктора, задает начальные значения редактора листа свойств.  
  
Класс редактора связанные пользовательское выражение создает экземпляр класса лист производном редактора в <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> метод, инициализирует этот экземпляр с текущий набор строк выражений для свойства элемента управления и возвращает экземпляр в визуальный конструктор. Визуальный конструктор, можно задать выражение свойства, а затем вызывает <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метод строку выражения из значениями свойств таблицы входного выражения.</para></block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ExpressionEditorSheet : IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="new System.Web.UI.Design.ExpressionEditorSheet serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Реализация поставщика службы, предоставленная узелом конструктора, используемым для получения дополнительных служб времени разработки.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Так как <xref:System.Web.UI.Design.ExpressionEditorSheet> класс является абстрактным, не удается создать экземпляр <xref:System.Web.UI.Design.ExpressionEditorSheet> напрямую с помощью <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> конструктор.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> класса, переопределить <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> конструктор, чтобы реализовать пользовательские действия инициализации для реализации лист редактора выражений.  
  
Например, класс листа редактора пользовательских выражений, реализующий дополнительное выражение свойства можно определить значения по умолчанию для свойств выражения в <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> конструктор. Класс листа редактора настраиваемых выражений можно определить дополнительные перегрузки открытого конструктора, использующие значения входных параметров, чтобы задать начальные значения для свойств выражения.</para></block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="abstract member GetExpression : unit -&gt; string" Usage="expressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При переопределении в производном классе возвращает строку выражения, сформированную значениями свойств таблицы редактора выражений.</summary>
        <returns>Строка настраиваемого выражения для текущих значений свойств.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Таблицу редактора настраиваемых выражений содержит параметры разработки для нескольких выражений свойств, которые объединяются для создания строки выражения. Значения свойств элементов управления можно задать с помощью строк выражений; строки выражений вычисляются во время выполнения построителем выражений.  
  
 <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Метод возвращает строку выражения, который создается из текущих свойств выражения. Визуальный конструктор, можно задать выражение свойства, а затем вызывает <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> метод, чтобы получить строку выражения и задать значение свойства элемента управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Производные таблицу редактора настраиваемых выражений из <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> , если вы определяете новый тип выражения для значений свойств элемента управления, и вы хотите создать строку выражения на основе нескольких значений свойств выражения. Реализация производного класса должен содержать следующее: 
-Открытое свойство для каждого уникального значения в строке выражения, которое можно задать во время разработки.  
  
-Реализация <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метод, который формирует строка настраиваемого выражения с значениями свойств таблицы редактора.  
  
(Необязательно) реализация конструктора, задает начальные значения редактора листа свойств.  
  
Класс редактора связанные пользовательское выражение создает экземпляр класса лист производном редактора в <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> метод, инициализирует этот экземпляр с текущий набор строк выражений для свойства элемента управления и возвращает экземпляр визуального элемента конструктор. Визуальный конструктор, можно задать выражение свойства, а затем вызывает <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метод строку выражения из значениями свойств таблицы входного выражения.</para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, допустима ли строка выражения.</summary>
        <value>Значение <see langword="true" />, если строка выражения допустима; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Базовая реализация всегда возвращает значение `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider" Usage="System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает реализацию поставщика служб, используемую таблицей редактора выражений.</summary>
        <value>Интерфейс <see cref="T:System.IServiceProvider" />, обычно предоставляемый узелом разработки, который может использоваться для получения дополнительных служб времени разработки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> конструктор, чтобы задать <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> внедрению таблицу редактора пользовательских выражений.  
  
 <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> Свойство может использоваться для доступа к службам, которые предоставляются хост-узелом конструктора. Например, вызвать <xref:System.IServiceProvider.GetService%2A> метод с <xref:System.Web.UI.Design.IWebApplication> интерфейс для доступа к элементам проекта, документов или сведений о файле конфигурации, которые обеспечиваются через визуальный конструктор.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>