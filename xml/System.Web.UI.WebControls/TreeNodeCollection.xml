<Type Name="TreeNodeCollection" FullName="System.Web.UI.WebControls.TreeNodeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5cce4966301477a078a6b2fa8a110793caadbfd5" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51303856" /></Metadata><TypeSignature Language="C#" Value="public sealed class TreeNodeCollection : System.Collections.ICollection, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TreeNodeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNodeCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TreeNodeCollection&#xA;Implements ICollection, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNodeCollection sealed : System::Collections::ICollection, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type TreeNodeCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Представляет коллекцию объектов <see cref="T:System.Web.UI.WebControls.TreeNode" /> в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection> Класс используется для хранения и управления коллекцией <xref:System.Web.UI.WebControls.TreeNode> объекты в <xref:System.Web.UI.WebControls.TreeView> элемента управления. <xref:System.Web.UI.WebControls.TreeView> Управления использует <xref:System.Web.UI.WebControls.TreeNodeCollection> класс в двух из его свойств. Она сохраняет его корневые узлы в <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> свойство и его выбранные узлы в <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> свойство. <xref:System.Web.UI.WebControls.TreeNodeCollection> Коллекции также используется для <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> свойство для хранения дочерних узлов (при наличии).  
  
 <xref:System.Web.UI.WebControls.TreeNodeCollection> Класс поддерживает несколько способов доступа к элементам в коллекции:  
  
-   Используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A> индексатор для получения <xref:System.Web.UI.WebControls.TreeNode> объекта непосредственно с указанным индексом (с нуля).  
  
-   Используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> метод для создания перечислителя, который может использоваться для итерации по коллекции.  
  
-   Используйте `foreach` (C#) или `For Each` (Visual Basic) для выполнения итерации по коллекции.  
  
-   Используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> метод, чтобы скопировать содержимое коллекции в <xref:System.Array> объекта.  
  
 Можно программно управлять <xref:System.Web.UI.WebControls.TreeNodeCollection> , добавляя и удаляя <xref:System.Web.UI.WebControls.TreeNode> объектов. Чтобы добавить узлы в коллекцию, используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> или <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> метод. Чтобы удалить узлы из коллекции, используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>, <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>, или <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> метод.  
  
> [!NOTE]
>  Когда <xref:System.Web.UI.WebControls.TreeView> управления привязан к источнику данных, <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> и <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> коллекций заполняются автоматически каждый раз при привязке. Любые изменения в коллекциях между привязками будут потеряны. Чтобы сохранить эти изменения, обновить источник данных или вручную перестроить коллекции каждый раз, когда можно выполнить привязку.  
  
 <xref:System.Web.UI.WebControls.TreeNodeCollection> Содержит свойства и методы, которые позволяют получить сведения о самой коллекции. Чтобы узнать, сколько элементов находятся в коллекции, используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> свойство. Если вы хотите определить, содержит ли коллекция определенный <xref:System.Web.UI.WebControls.TreeNode> , используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> метод. Чтобы получить индекс <xref:System.Web.UI.WebControls.TreeNode> объекта в коллекции, используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> метод.  
  
   
  
## Examples  
 Следующий пример демонстрирует программным способом добавить узлы и их удалению из <xref:System.Web.UI.WebControls.TreeNodeCollection>. Обратите внимание, что <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> и <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> возвращают свойства <xref:System.Web.UI.WebControls.TreeNodeCollection> объекта.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Count" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNodeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNodeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />, используя значения по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для инициализации нового экземпляра <xref:System.Web.UI.WebControls.TreeNodeCollection> класса, используя значения по умолчанию. Этот конструктор обычно используется при создании коллекции корневых узлов, когда родительский узел (или владелец) не требуется.  
  
> [!NOTE]
>  При создании коллекции узлов, отличного от root, следует использовать перегруженный конструктор, принимающий `owner` параметра вместо использования этого конструктора, чтобы указать родительский узел.  
  
 Этот конструктор используется преимущественно разработчиками элементов управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNodeCollection (System.Web.UI.WebControls.TreeNode owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.TreeNode owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNodeCollection(System::Web::UI::WebControls::TreeNode ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNodeCollection : System.Web.UI.WebControls.TreeNode -&gt; System.Web.UI.WebControls.TreeNodeCollection" Usage="new System.Web.UI.WebControls.TreeNodeCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="owner">Объект <see cref="T:System.Web.UI.WebControls.TreeNode" />, представляющий родитель узел коллекции.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />, используя указанный родительский узел (или владелец).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для инициализации нового экземпляра <xref:System.Web.UI.WebControls.TreeNodeCollection> класса, используя указанный родительский узел (или владелец). Этот конструктор обычно используется при создании коллекции некорневых узлов, где необходимо указать родительский узел.  
  
> [!NOTE]
>  При создании коллекции корневых узлов, рассмотрите возможность использования конструктора по умолчанию, поскольку корневые узлы не имеют родительского узла.  
  
 Этот конструктор используется преимущественно разработчиками элементов управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.TreeNode child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.TreeNode child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (child As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::WebControls::TreeNode ^ child);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.Add child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="child">Объект <see cref="T:System.Web.UI.WebControls.TreeNode" /> для прикрепления.</param>
        <summary>Добавляет указанный объект <see cref="T:System.Web.UI.WebControls.TreeNode" /> в конец объекта <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> метод для добавления указанного <xref:System.Web.UI.WebControls.TreeNode> объект в конец <xref:System.Web.UI.WebControls.TreeNodeCollection>.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeNodeCollection> Позволяет добавлять ссылки null (Nothing в Visual Basic), а также повторяющиеся <xref:System.Web.UI.WebControls.TreeNode> объектов.  
  
 Кроме того, вы можете вставить <xref:System.Web.UI.WebControls.TreeNode> объекта в <xref:System.Web.UI.WebControls.TreeNodeCollection> с указанным индексом с помощью <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> метод.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как использовать <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> метод программным способом добавить узел к <xref:System.Web.UI.WebControls.TreeNodeCollection>. Обратите внимание, что <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> и <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> свойства каждого возвращают <xref:System.Web.UI.WebControls.TreeNodeCollection> объекта.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.TreeNode child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.TreeNode child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, child As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::TreeNode ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddAt : int * System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.AddAt (index, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс, по которому должен быть вставлен объект <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <param name="child">Добавляемый объект <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <summary>Вставляет указанный объект <see cref="T:System.Web.UI.WebControls.TreeNode" /> в объект <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> по указанному индексу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> метод для вставки указанного <xref:System.Web.UI.WebControls.TreeNode> объекта в <xref:System.Web.UI.WebControls.TreeNodeCollection> по указанному индексу (с нуля).  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeNodeCollection> Позволяет вставлять пустые ссылки (Nothing в Visual Basic), а также повторяющиеся <xref:System.Web.UI.WebControls.TreeNode> объектов.  
  
 Кроме того, можно добавить <xref:System.Web.UI.WebControls.TreeNode> объект в конец <xref:System.Web.UI.WebControls.TreeNodeCollection> с помощью <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> метод.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как использовать <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> метод программным способом добавить узел к <xref:System.Web.UI.WebControls.TreeNodeCollection>. Обратите внимание, что <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> и <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> свойства каждого возвращают <xref:System.Web.UI.WebControls.TreeNodeCollection> объекта.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="child" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="treeNodeCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Опустошает объект <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> метод для удаления каждого <xref:System.Web.UI.WebControls.TreeNode> объекта из <xref:System.Web.UI.WebControls.TreeNodeCollection>.  
  
> [!NOTE]
>  Чтобы удалить отдельный узел из коллекции, используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> или <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> метод.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как использовать <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> программно пустой метод <xref:System.Web.UI.WebControls.TreeNodeCollection>. Обратите внимание, что <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> и <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> возвращают свойства <xref:System.Web.UI.WebControls.TreeNodeCollection> объекта.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.TreeNode c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.TreeNode c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (c As TreeNode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::TreeNode ^ c);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.TreeNode -&gt; bool" Usage="treeNodeCollection.Contains c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="c">Искомый объект <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <summary>Определяет, присутствует ли в коллекции указанный объект <see cref="T:System.Web.UI.WebControls.TreeNode" />.</summary>
        <returns><see langword="true" />, если указанный объект <see cref="T:System.Web.UI.WebControls.TreeNode" /> содержится в коллекции; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> метод, чтобы определить, является ли <xref:System.Web.UI.WebControls.TreeNode> объект, содержащийся в <xref:System.Web.UI.WebControls.TreeNodeCollection>. Этот метод часто используется для проверки существования <xref:System.Web.UI.WebControls.TreeNode> объекта перед выполнением задачи, такие как добавление или удаление узла из коллекции.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как использовать <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> метод, чтобы определить, является ли выбранный узел в <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> коллекции. Обратите внимание, что <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> возвращает <xref:System.Web.UI.WebControls.TreeNodeCollection> объекта.  
  
 [!code-aspx-csharp[TreeNodeCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/CS/treenodecollectionindexofcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/VB/treenodecollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.TreeNode[] nodeArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.TreeNode[] nodeArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (nodeArray As TreeNode(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::TreeNode ^&gt; ^ nodeArray, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.TreeNode[] * int -&gt; unit" Usage="treeNodeCollection.CopyTo (nodeArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeArray" Type="System.Web.UI.WebControls.TreeNode[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="nodeArray">Индексируемый от нуля массив объектов <see cref="T:System.Web.UI.WebControls.TreeNode" />, получающий скопированные из коллекции<see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> элементы.</param>
        <param name="index">Позиция в массиве назначения, начиная с которой в него будет копироваться содержимое.</param>
        <summary>Копирует все элементы из объекта <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> в совместимый одномерный массив объектов <see cref="T:System.Web.UI.WebControls.TreeNode" />, начиная с указанного индекса в массиве назначения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> метод, чтобы скопировать содержимое <xref:System.Web.UI.WebControls.TreeNodeCollection> в указанный отсчитываемый от нуля <xref:System.Array?displayProperty=nameWithType> объекта. Элементы копируются, начиная с указанного индекса целевого массива. С помощью <xref:System.Array?displayProperty=nameWithType> объекта, синтаксис массива можно затем использовать для доступа к элементам в <xref:System.Web.UI.WebControls.TreeNodeCollection>.  
  
 Кроме того, можно также использовать <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> метод для создания перечислителя, который может использоваться для доступа к элементам в коллекции.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как использовать <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> метод копирования значения <xref:System.Web.UI.WebControls.TreeNodeCollection> в массив. Обратите внимание, что <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> возвращает <xref:System.Web.UI.WebControls.TreeNodeCollection> объекта.  
  
 [!code-aspx-csharp[TreeNodeCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/CS/treenodecollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/VB/treenodecollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.TreeNodeCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество элементов в объекте <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
        <value>Число элементов в объекте <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> свойства, чтобы определить количество элементов в <xref:System.Web.UI.WebControls.TreeNodeCollection>. Это свойство обычно используется при итерации по коллекции для определения верхней границы коллекции. <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> Свойства также часто используется для определения, является ли коллекция пустой.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как использовать <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> свойства, чтобы определить количество элементов в <xref:System.Web.UI.WebControls.TreeNodeCollection>. Затем выполняется при прохождении <xref:System.Web.UI.WebControls.TreeView> управления для отображения текста каждого узла.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="treeNodeCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечислитель, который может использоваться для итерации по объекту <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
        <returns>Перечислитель, который может использоваться для выполнения итерации по объекту <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> метод для создания перечислителя, который может быть итерация для получения каждого элемента в <xref:System.Web.UI.WebControls.TreeNodeCollection>. Для получения элемента, в настоящее время указанного перечислителя, используйте <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> свойство. Используйте <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> метод для перехода к следующему элементу. Если вам нужно переместить перечислитель в начало коллекции, используйте <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> метод.  
  
> [!NOTE]
>  После создания перечислителя или использовать <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> метод, необходимо вызвать <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> метод. В противном случае элемент, представленный <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> свойство не определено.  
  
 Кроме того, можно также использовать <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> метод для создания <xref:System.Array?displayProperty=nameWithType> объекта, который может использоваться для доступа к элементам в коллекции. Другой альтернативой является использование `foreach` или `For Each` структуры для итерации по коллекции.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как использовать <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> метод, чтобы создать перечислитель, содержащий корневые узлы <xref:System.Web.UI.WebControls.TreeView> элемента управления.  
  
 [!code-aspx-csharp[TreeNodeCollectionGetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionGetEnumerator/CS/treenodecollectiongetenumeratorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionGetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionGetEnumerator/VB/treenodecollectiongetenumeratorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.TreeNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.TreeNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As TreeNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::TreeNode ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.TreeNode -&gt; int" Usage="treeNodeCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Web.UI.WebControls.TreeNode" />, который требуется обнаружить.</param>
        <summary>Определяет индекс указанного объекта <see cref="T:System.Web.UI.WebControls.TreeNode" />.</summary>
        <returns>Индекс (с нуля) первого вхождения параметра <paramref name="value" /> внутри <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />, если он найден; в противном случае — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> метод, чтобы определить, отсчитываемый от нуля индекс указанного объекта <xref:System.Web.UI.WebControls.TreeNode> объекта в <xref:System.Web.UI.WebControls.TreeNodeCollection> объекта. Если узел не находится в коллекции, метод возвращает значение -1.  
  
> [!NOTE]
>  Если указанный узел встречается несколько раз в коллекции, возвращается индекс первого вхождения.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как использовать <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> метод для определения индекса из корневого узла. Обратите внимание, что <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> возвращает <xref:System.Web.UI.WebControls.TreeNodeCollection> объекта.  
  
 [!code-aspx-csharp[TreeNodeCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/CS/treenodecollectionindexofcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/VB/treenodecollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, является ли доступ к коллекции <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> синхронизированным (потокобезопасным).</summary>
        <value><see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> Свойство позволяет указать, является ли доступ к <xref:System.Web.UI.WebControls.TreeNodeCollection> является синхронизированным (потокобезопасным). Это свойство является производным от <xref:System.Collections.ICollection?displayProperty=nameWithType> класса и переопределено так, чтобы всегда возвращать `false`.  
  
 Дополнительные сведения о <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> свойство, см. в разделе <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> свойство <xref:System.Collections.ICollection?displayProperty=nameWithType> интерфейс.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ default[int] { System::Web::UI::WebControls::TreeNode ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeNodeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс объекта <see cref="T:System.Web.UI.WebControls.TreeNode" />, который требуется извлечь.</param>
        <summary>Возвращает <see cref="T:System.Web.UI.WebControls.TreeNode" />, расположенный в объекте <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> по указанному индексу.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.TreeNode" /> по указанному индексу в <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использовать этот индексатор для доступа к <xref:System.Web.UI.WebControls.TreeNode> объекта из <xref:System.Web.UI.WebControls.TreeNodeCollection> по указанному индексу, используя нотацию массива. Индексатор позволяет изменить или заменить <xref:System.Web.UI.WebControls.TreeNode> объекта в коллекции напрямую. Коллекции (с нуля).  
  
   
  
## Examples  
 Следующий пример демонстрирует, как использовать индексатор для доступа к элементу в <xref:System.Web.UI.WebControls.TreeNodeCollection>. Обратите внимание, что <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> и <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> возвращают свойства <xref:System.Web.UI.WebControls.TreeNodeCollection> объекта.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.TreeNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.TreeNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::TreeNode ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="value">Удаляемый объект <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <summary>Удаляет указанный объект <see cref="T:System.Web.UI.WebControls.TreeNode" /> из объекта <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> метод для удаления указанного узла из коллекции. Затем все элементы, которые после этого узла, сдвигаются для заполнения свободные позиции. Индексы перемещаемых элементов также обновляются.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeNodeCollection> Может содержать пустые ссылки (Nothing в Visual Basic), а также дублирование <xref:System.Web.UI.WebControls.TreeNode> объектов.  
  
 Кроме того, можно удалить узел с указанным индексом с помощью <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> метод. Можно также удалить каждый узел в коллекции с помощью <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> метод.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как использовать <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> метод, чтобы программно удалить узел из <xref:System.Web.UI.WebControls.TreeNodeCollection>. Обратите внимание, что <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> и <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> свойства каждого возвращают <xref:System.Web.UI.WebControls.TreeNodeCollection> объекта.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="treeNodeCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс расположения удаляемого узла.</param>
        <summary>Удаляет объект <see cref="T:System.Web.UI.WebControls.TreeNode" /> по указанному индексу из объекта <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> способ удаления <xref:System.Web.UI.WebControls.TreeNode> объект, находящийся по указанному отсчитываемый от нуля индексу из <xref:System.Web.UI.WebControls.TreeNodeCollection>. Затем все элементы, которые после этого узла, сдвигаются для заполнения свободные позиции. Индексы перемещаемых элементов также обновляются.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeNodeCollection> Может содержать пустые ссылки (Nothing в Visual Basic), а также дублирование <xref:System.Web.UI.WebControls.TreeNode> объектов.  
  
 Кроме того, можно удалить определенные <xref:System.Web.UI.WebControls.TreeNode> объекта с помощью <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> метод. Можно также удалить каждый узел в коллекции с помощью <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> метод.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как использовать <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> метод, чтобы программно удалить узел из <xref:System.Web.UI.WebControls.TreeNodeCollection>. Обратите внимание, что <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> и <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> свойства каждого возвращают <xref:System.Web.UI.WebControls.TreeNodeCollection> объекта.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.TreeNodeCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который позволяет синхронизировать доступ к объекту <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
        <value><see cref="T:System.Object" />, который может быть использован для синхронизации доступа к коллекции <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot%2A> Свойство предоставляет синхронизированную версию <xref:System.Web.UI.WebControls.TreeNodeCollection> , можно использовать с синхронизацией (Потоковый) код.  
  
> [!CAUTION]
>  <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> Свойства данного объекта класса всегда возвращает `false`, что означает, что <xref:System.Web.UI.WebControls.TreeNodeCollection> класс является не синхронизирован (не является потокобезопасным).  
  
 Синхронизация код должен выполнять операции над <xref:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot%2A> объект <xref:System.Web.UI.WebControls.TreeNodeCollection>, но не с самим <xref:System.Web.UI.WebControls.TreeNodeCollection> сам. Это обеспечивает правильную работу коллекций, являющихся производными других объектов. В частности, это обеспечивает правильную синхронизацию с другими потоками, которые могут одновременно вносить изменения <xref:System.Web.UI.WebControls.TreeNodeCollection> объекта.  
  
> [!NOTE]
>  Объект, возвращаемый в этой реализации является <xref:System.Collections.ArrayList?displayProperty=nameWithType> объект, используемый для хранения <xref:System.Web.UI.WebControls.TreeNode> объектов в коллекции.  
  
 Перечисление коллекции не является потокобезопасной процедурой. Даже если коллекция синхронизирована, другие потоки могут по-прежнему изменить в коллекции, которая приводит к возникновению исключения перечислителем. Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.  
  
 Дополнительные сведения о <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> свойство, см. в разделе <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> свойство <xref:System.Collections.ICollection?displayProperty=nameWithType> интерфейс.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Отсчитываемый от нуля объект <see cref="T:System.Array" />, получающий скопированные записи из объекта <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</param>
        <param name="index">Позиция в массиве назначения, начиная с которой в него будет копироваться содержимое.</param>
        <summary>Копирует все элементы из объекта <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> в совместимый одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса в массиве назначения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> метод, чтобы скопировать содержимое <xref:System.Web.UI.WebControls.TreeNodeCollection> в указанный отсчитываемый от нуля <xref:System.Array?displayProperty=nameWithType> объекта. Элементы копируются, начиная с указанного индекса целевого массива. С помощью <xref:System.Array?displayProperty=nameWithType> объекта, синтаксис массива можно затем использовать для доступа к элементам в <xref:System.Web.UI.WebControls.TreeNodeCollection>.  
  
 Кроме того, можно также использовать <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> метод для создания перечислителя, который может использоваться для доступа к элементам в коллекции.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как использовать <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> метод копирования значения <xref:System.Web.UI.WebControls.TreeNodeCollection> в массив. Обратите внимание, что <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> возвращает <xref:System.Web.UI.WebControls.TreeNodeCollection> объекта.  
  
 [!code-aspx-csharp[TreeNodeCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/CS/treenodecollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/VB/treenodecollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="array" /> не является массивом объектов <see cref="T:System.Web.UI.WebControls.TreeNode" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее сохраняет ли объект <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> изменения в данных о состоянии представления.</summary>
        <value>Значение <see langword="true" />, если элемент управления сохраняет состояние представления; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Общие сведения об управлении состоянием ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Объект <see cref="T:System.Object" />, содержащий сохраненных значениях сведения о состоянии представления.</param>
        <summary>Загружает сохраненное ранее состояние представления объекта <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Общие сведения об управлении состоянием ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет изменения состояния представления в <see cref="T:System.Object" />.</summary>
        <returns>Объект <see cref="T:System.Object" />, содержащий данные об изменении состояния представления.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Общие сведения об управлении состоянием ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Указывает <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> на необходимость отслеживания изменений в его состоянии представления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После вызова этого метода на серверный элемент управления <xref:System.Web.UI.Control.IsTrackingViewState%2A> свойство возвратит `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Общие сведения об управлении состоянием ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>