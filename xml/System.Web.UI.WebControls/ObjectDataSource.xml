<Type Name="ObjectDataSource" FullName="System.Web.UI.WebControls.ObjectDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7d5dc7d9209bc454de702e7d77fec188384e2c1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55352548" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type ObjectDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TypeName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ObjectDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет бизнес-объект, предоставляющий данные для элементов управления с привязкой к данным в многоуровневой архитектуре веб-приложений.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#introduction)  
  
-   [Назначение](#purpose)  
  
-   [Извлечение данных](#retrieving_data)  
  
-   [Выполнение операции с данными](#performing_data_operations)  
  
-   [Фильтрация данных](#filtering_data)  
  
-   [Кэширование](#caching)  
  
-   [Функции](#features)  
  
-   [Представление данных](#data_view)  
  
-   [С помощью LINQ to SQL](#using_linq_to_sql)  
  
-   [Декларативный синтаксис](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Работает с классом, который создается. Создайте методы для получения и обновления данных и укажите имена в этих методах <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления в разметке. Во время подготовки к просмотру или обработки обратной передачи <xref:System.Web.UI.WebControls.ObjectDataSource> вызывает методы, которые вы указали.  
  
 Имеется не визуализация элемента <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В результате <xref:System.Web.UI.WebControls.ObjectDataSource> не поддерживает функции visual, такие как <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> или <xref:System.Web.UI.DataSourceControl.SkinID%2A> свойство.  
  
<a name="purpose"></a>   
## <a name="purpose"></a>Цель  
 Распространенной практикой разработки приложений — для разделения уровня представления данных от бизнес-логики и инкапсулировать бизнес-логики в бизнес-объектов. Эти бизнес-объекты образуют отдельный уровень между уровнем представления и уровень данных, делая архитектуру 3 уровневого приложения. <xref:System.Web.UI.WebControls.ObjectDataSource> Управления позволяет разработчикам использовать элемент управления источником данных ASP.NET при этом сохраняя свою архитектуру 3 уровневого приложения.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Управления использует отражение для создания экземпляров бизнес-объектов и вызова методов на них для получения, обновления, вставки и удаления данных. <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Свойство определяет имя класса, <xref:System.Web.UI.WebControls.ObjectDataSource> работает с. <xref:System.Web.UI.WebControls.ObjectDataSource> Управления создает и уничтожает экземпляр класса для каждого вызова метода; он не сохраняет объект в памяти в течение времени существования веб-запроса. Это является серьезным вопросом, если бизнес-объект, который можно использовать, требуется много ресурсов или является затратным, создавать и уничтожать. С помощью ресурсоемкий объект может быть оптимальный выбор, но можно управлять жизненным циклом объекта с помощью <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события.  
  
> [!NOTE]
>  Методы, которые идентифицируются по <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойства могут быть методами экземпляра или `static` (`Shared` в Visual Basic) методов. Если методы являются `static` (`Shared` в Visual Basic), не создается экземпляр бизнес-объекта и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события не вызываются.  
  
<a name="retrieving_data"></a>   
## <a name="retrieving-data"></a>Получение данных  
 Для получения данных из бизнес-объект, значение <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> имя метода, который извлекает данные. Если метод не возвращает <xref:System.Collections.IEnumerable> или <xref:System.Data.DataSet> объекта, объект упаковывается средой выполнения, <xref:System.Collections.IEnumerable> коллекции. Если подпись метода имеет параметры, вы можете добавить <xref:System.Web.UI.WebControls.Parameter> объектов <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекции и привязать их к значениям, которые вы хотите передать в метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Чтобы <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления следует использовать параметры, параметры должны соответствовать имена и типы параметров в сигнатуре метода. Дополнительные сведения см. в разделе [использование параметров с помощью элемента управления ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Управления извлекает данные каждый раз, когда <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> вызывается метод. Этот метод предоставляет программный доступ к методу, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство вызывается автоматически элементами управления, привязанных к <xref:System.Web.UI.WebControls.ObjectDataSource> при их `DataBind` вызывается метод. Если задать `DataSourceID` свойства элемента управления с привязкой к данным элемент управления автоматически привязывается к данным из источника данных, при необходимости. Установка `DataSourceID` свойство — это рекомендуемый метод для привязки <xref:System.Web.UI.WebControls.ObjectDataSource> управления для элемента управления с привязкой данных. Кроме того, можно задать `DataSource` свойство, но затем необходимо явным образом вызывать `DataBind` метод элемента управления с привязкой к данным. Вы можете вызвать <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод программным способом в любое время для получения данных.  
  
 Дополнительные сведения о привязке элементов управления с привязкой к данным для элементов управления источниками данных см. в разделе [привязки к данным с помощью элемента управления источником данных](https://msdn.microsoft.com/library/e41adfff-8fb8-449e-9cd1-9bd49788c5f7).  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>Выполнение операции с данными  
 Объект, который зависит от возможностей бизнеса <xref:System.Web.UI.WebControls.ObjectDataSource> работает с, можно выполнить данных операций, таких как обновления, вставки и удаления. Для выполнения этих операций с данными, задайте соответствующее имя метода и все связанные параметры для операции, которое вы хотите выполнить. Например, для операции обновления, задайте <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> присвоено имя метода бизнес-объектов, который выполняет обновления и добавьте любую обязательные параметры для <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции. Если <xref:System.Web.UI.WebControls.ObjectDataSource> управления не связано с элементом управления с привязкой к данным, параметры добавляются с помощью элемента управления с привязкой к данным. В этом случае необходимо убедиться, что имена параметров метода совпадают с именами полей в элементе управления с привязкой к данным. Обновление выполняется при <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> вызывается метод, либо явно в коде, либо автоматически элементом управления с привязкой к данным. Те же общие операции выполняются для <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> и <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> операций. Бизнес-объектов, предполагается, что для выполнения этих типов данных операций по одной записи за раз, а не в пакетном режиме.  
  
<a name="filtering_data"></a>   
## <a name="filtering-data"></a>Фильтрация данных  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Управления можно отфильтровать данные, полученные по <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства, если данные возвращаются в виде <xref:System.Data.DataSet> или <xref:System.Data.DataTable> объекта. Можно задать <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойства выражение фильтрации с помощью формата строку синтаксиса и привязки значений в выражении, и параметры, заданные в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции.  
  
<a name="caching"></a>   
## <a name="caching"></a>Кэширование  
 Несмотря на то что <xref:System.Web.UI.WebControls.ObjectDataSource> не сохраняет экземпляр бизнес-объекта, нескольких запросах, она может кэшировать результат вызова метода, идентифицируемый <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Данные, хранящиеся кэшированных, последующие вызовы <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод возвращать кэшированные данные вместо создания бизнес-объекта и вызова его <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> с помощью отражения. Кэширование позволяет избежать создания объекта и вызова его метода данных за счет использования памяти на веб-сервере. <xref:System.Web.UI.WebControls.ObjectDataSource> Автоматически кэширует данные при <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойству `true`и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойству присваивается количество секунд, кэш хранит данные, прежде чем кэш удаляется. Можно также указать <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойство разделителя и необязательного <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> свойство. <xref:System.Web.UI.WebControls.ObjectDataSource> Управления позволяет кэшировать все типы данных, но не следует кэшировать объекты, в которых хранятся ресурсы или состояние, которое не может использоваться для обслуживания нескольких запросов (например, открытый <xref:System.Data.SqlClient.SqlDataReader> объекта), так как же экземпляр объекта будет использоваться для обслуживания нескольких запросов.  
  
<a name="features"></a>   
## <a name="features"></a>Функции  
 В следующей таблице описаны возможности <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
|Возможность|Требования|  
|----------------|------------------|  
|Выбор|Задайте <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> имя бизнес-объекта метод, который выбирает данные и включают все необходимые параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекции программно или с помощью элемента управления с привязкой данных.|  
|Сортировка|Задайте <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> имя параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> метод, который содержит критерии сортировки.|  
|Фильтрация|Задайте <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство выражение фильтрации и при необходимости добавьте любые параметры, которые <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции для фильтрации данных при <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> вызывается метод. Методом, заданным свойством <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство должно возвращать <xref:System.Data.DataSet> или <xref:System.Data.DataTable>.|  
|Разбивка на страницы|Разбиение по страницам источника данных поддерживается, если <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> метод содержит максимальное число извлекаемых записей и индекс первой записи, чтобы получить параметры. Имена этих параметров необходимо задать в <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> и <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> свойства, соответственно. Элемент управления с привязкой к данным могут иметь возможность выполнять разбиение по страницам, даже если <xref:System.Web.UI.WebControls.ObjectDataSource> управления не поддерживает разбиение по страницам напрямую в методом, заданным свойством <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Требования для управления привязкой к данным иметь возможность сделать это — метод, заданный параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство возвращает объект, реализующий <xref:System.Collections.ICollection> интерфейс.|  
|Updating|Задайте <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> имя бизнес-объекта метод, который обновляет данные и включают все необходимые параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции.|  
|Удаление|Задайте <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> имя бизнес-объект, метод или функцию, которая удаляет данные и включают все необходимые параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции.|  
|Вставка|Задайте <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> имя бизнес-объект, метод или функция, которая вставляет данные и включают все необходимые параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции.|  
|Кэширование|Задайте <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойства `true`и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойства в соответствии с поведением кэширования, требуется ваших кэшированных данных.|  
  
> [!NOTE]
>  При использовании <xref:System.Web.UI.WebControls.ObjectDataSource> класса для обновления или вставки данных, строки, введенные на стороне клиента, не преобразуются автоматически из формата языка и региональных параметров клиента в формат языка и региональных параметров сервера. Например языка и региональных параметров клиента может указать дд/мм/гггг в качестве формата даты и формат даты на сервере может быть мм/дд/гггг. В этом случае 5 октября 2009 г. будет вводиться в <xref:System.Web.UI.WebControls.TextBox> управлять как 5/10/2009, но будет интерпретироваться как 10 мая 2009 г. 15 октября 2009 г. будет вводиться как 10/15/2009 и была бы отклонена как недопустимая дата.  
  
<a name="data_view"></a>   
## <a name="data-view"></a>Представление данных  
 Как и для всех источников данных, <xref:System.Web.UI.WebControls.ObjectDataSource> управления связан с классом представления источника данных. Хотя <xref:System.Web.UI.WebControls.ObjectDataSource> управления является интерфейсом, который разработчик использует для работы с данными, <xref:System.Web.UI.WebControls.ObjectDataSourceView> класс является интерфейсом, который элементы управления с привязкой к данным работают с. Кроме того <xref:System.Web.UI.WebControls.ObjectDataSourceView> класс содержит сведения о функциях управления источником данных и выполняет фактическую работу. <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления имеет только один связанный <xref:System.Web.UI.WebControls.ObjectDataSourceView>, и ему всегда присваивается имя `DefaultView`. Хотя <xref:System.Web.UI.WebControls.ObjectDataSourceView> объект возвращается командлетом <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> упаковываются и предоставляются напрямую с помощью метода, многие из его свойств и методов <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. На самом деле <xref:System.Web.UI.WebControls.ObjectDataSourceView> объект выполняет все операции с данными, включая извлечение, вставка, обновление, удаление, фильтрация и сортировка данных. Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSourceView>.  
  
<a name="using_linq_to_sql"></a>   
## <a name="using-linq-to-sql"></a>С помощью LINQ to SQL  
 Можно использовать <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления с помощью LINQ to SQL, класс. Чтобы сделать это, необходимо задать <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойства имя класса контекста данных. Можно также задать <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> методов к методам в классе контекста данных, которые выполняют соответствующих операций. Необходимо создать обработчик событий для <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событий, чтобы отменить удаление класса контекста данных. Этот шаг необходим потому, что LINQ to SQL поддерживает отложенное выполнение, тогда как <xref:System.Web.UI.WebControls.ObjectDataSource> управления пытается удалить контекст данных после операции выбора. Дополнительные сведения о том, как создать LINQ to SQL classes см. в разделе [как: Создание классов LINQ to SQL в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081). Пример отмены удаления класса контекста данных, см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событий.  
  
## <a name="using-the-entity-framework"></a>С помощью Entity Framework  
 Можно также использовать <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления с Entity Framework. Дополнительные сведения см. в разделе [с помощью Entity Framework и элемент управления ObjectDataSource](https://go.microsoft.com/fwlink/?LinkId=209117).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:ObjectDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConvertNullToDBNull="True|False"  
    DataObjectTypeName="string"  
    DeleteMethod="string"  
    EnableCaching="True|False"  
    EnablePaging="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertMethod="string"  
    MaximumRowsParameterName="string"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnObjectCreated="ObjectCreated event handler"  
    OnObjectCreating="ObjectCreating event handler"  
    OnObjectDisposing="ObjectDisposing event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    runat="server"  
    SelectCountMethod="string"  
    SelectMethod="string"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    StartRowIndexParameterName="string"  
    TypeName="string"  
    UpdateMethod="string"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:ObjectDataSource>  
```  
  
   
  
## Examples  
 Проект Visual Studio Web сайта с исходным кодом доступен на следующей странице в этом разделе: [Скачайте](https://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=14838).  
  
 В этом разделе показано <xref:System.Web.UI.WebControls.ObjectDataSource> в разметке в .aspx страницы, в нем демонстрируется бизнес-объектов, которыми он работает. В примере показана страница .aspx. Он содержит <xref:System.Web.UI.WebControls.GridView> элемента управления, привязанного к <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. <xref:System.Web.UI.WebControls.ObjectDataSource> Разметка элемента управления задает имя бизнес-объекта и имя метода бизнес-объектов, вызываемого для получения данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 В следующем примере показано бизнес-объект <xref:System.Web.UI.WebControls.ObjectDataSource> использует элемент управления на странице ASPX. (Многие другие <xref:System.Web.UI.WebControls.ObjectDataSource> примеры кода также используют этот бизнес-объект.) Пример состоит из двух базовых классов:  
  
-   `EmployeeLogic` Классом является класс бизнес-логики, который <xref:System.Web.UI.WebControls.ObjectDataSource> использует.  
  
-   `NorthwindEmployee` Класс определяет объект данных, который возвращается методом `GetAllEmployees` метод `EmployeeLogic` класса.  
  
 Дополнительная `NorthwindDataException` класс предоставляется для удобства.  
  
 Этот набор примеров классов работает с базой данных Northwind Traders, который входит в состав Microsoft SQL Server и Microsoft Access. Полный рабочий пример необходимо скомпилировать и использовать эти классы в примере страницы .aspx, предоставляемый. Сведения о том, как установить базу данных Northwind Traders, см. в разделе [как: Установка образцов баз данных](https://msdn.microsoft.com/library/ed1291f6-604c-4972-ae22-0345c6dea12e).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
    <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea">Пошаговое руководство. Привязка данных к пользовательский бизнес-объект</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
    <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">С помощью Entity Framework и элемент управления ObjectDataSource</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource (string typeName, string selectMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string selectMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, selectMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource(System::String ^ typeName, System::String ^ selectMethod);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSource : string * string -&gt; System.Web.UI.WebControls.ObjectDataSource" Usage="new System.Web.UI.WebControls.ObjectDataSource (typeName, selectMethod)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="selectMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Имя класса, с которым работает объект <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</param>
        <param name="selectMethod">Имя метода или функции, вызываемых элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для извлечения данных.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> с заданными именем типа и именем метода извлечения данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение `typeName` параметр может быть сокращенное имя типа для кода, который находится в каталоге Bin или App_Code или полное имя типа для кода, который регистрируется в глобальном кэше сборок. Если вы используете в глобальном кэше сборок, необходимо добавить соответствующую ссылку на `assemblies` раздел файла конфигурации Machine.config и Web.config.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает длину промежутка времени (в секундах), в течение которого элемент управления источником данных кэширует данные, полученные с помощью свойства <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</summary>
        <value>Количество секунд, на протяжении которых объект <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> кэширует результаты вызова свойства <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />. Значение по умолчанию — 0. Значение не может быть отрицательным.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает кэширование данных. Хотя данные кэшируются, вызовы <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод извлекает данные из кэша, а не из бизнес-объект, <xref:System.Web.UI.WebControls.ObjectDataSource> работает с. По истечении срока действия кэша <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод извлекает данные из бизнес-объект и кэширует данные еще раз.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления автоматически кэширует данные при <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойству `true` и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойству присвоено значение больше 0, указывающее количество секунд, что кэш хранит данные до записи кэша удаляется. Значение 0 указывает кэша бесконечной длительности.  
  
 Кэш контролируется с помощью сочетания длительности и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> параметр. Если <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойству <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> значение, <xref:System.Web.UI.WebControls.ObjectDataSource> кэширует данные при первом вызове для <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод и хранит его в памяти, не более, в течение времени, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойство. Данные могут быть освобождены до значение длительности, при необходимости память. Кэш обновляется при следующем вызове <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод. Если <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойству <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> значение, элемент управления источником данных кэширует данные при первом вызове для <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод, но сбрасывает период, для которого он хранит кэша при каждом последующем вызове <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод. Срока действия кэша, если не выполняет никаких действий в течение времени, равный <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойство с момента последнего вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как <xref:System.Web.UI.WebControls.ObjectDataSource> объект поддерживает кэширование. Во втором примере кода демонстрируется реализация метода оболочки, возвращающий <xref:System.Data.DataSet> объекта, чтобы включить кэширование с <xref:System.Web.UI.WebControls.ObjectDataSource> объекта.  
  
 В следующем примере кода показано, как <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления поддерживает кэширование. Чтобы включить кэширование, необходимо реализовать метод, который извлекает данные, который определяется <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства, чтобы возвращать данные в виде <xref:System.Data.DataSet> объекта. В этом примере <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойству `true`и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойств. <xref:System.Web.UI.WebControls.ObjectDataSource> Кэширует данные, возвращаемые <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство на 30 секунд.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 В следующем примере кода показано, как реализовать метод программы-оболочки, возвращающий <xref:System.Data.DataSet> объекта, чтобы включить кэширование с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В базовой реализации `EmployeeLogic` класс, `GetAllEmployees` возвращает метод <xref:System.Collections.ArrayList> объекта. Вместо рефакторинг объект полностью для работы с <xref:System.Web.UI.WebControls.ObjectDataSource> на страницу Web Forms с именем метода оболочки `GetAllEmployeesAsDataSet` добавляется, возвращающий набор `NorthwindEmployee` данные в виде <xref:System.Data.DataSet>.  
  
 Данный пример кода является частью большего примера для <xref:System.Web.UI.WebControls.ObjectDataSource> класса.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает поведение при истечении срока действия кэша, которая в сочетании со сроком кэширования описывает принципы работы кэша, используемого элементом управления источником данных.</summary>
        <value>Одно из значений <see cref="T:System.Web.UI.DataSourceCacheExpiry" />. Значение по умолчанию — <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает кэширование данных. Хотя данные кэшируются, вызовы <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод извлекает данные из кэша, а не из бизнес-объект, <xref:System.Web.UI.WebControls.ObjectDataSource> работает с. По истечении срока действия кэша <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод извлекает данные из бизнес-объект и кэширует данные еще раз.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления автоматически кэширует данные при <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойству `true` и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойству присвоено значение больше 0, указывающее количество секунд, что кэш хранит данные до записи кэша удаляется. Значение 0 указывает на период существования кэша бесконечной длительности.  
  
 Кэш контролируется с помощью сочетания длительности и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> параметр. Если <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойству <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> значение, <xref:System.Web.UI.WebControls.ObjectDataSource> кэширует данные при первом вызове для <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод и хранит его в памяти, не более, в течение времени, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойство. Данные могут быть освобождены до значение длительности, при необходимости память. Кэш обновляется при следующем вызове <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод. Если <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойству <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> значение, элемент управления источником данных кэширует данные при первом вызове для <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод, но сбрасывает период, для которого он хранит в кэше для каждого последующего вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод. Срока действия кэша, если не выполняет никаких действий в течение времени, равный <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойство с момента последнего вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как <xref:System.Web.UI.WebControls.ObjectDataSource> объект поддерживает фильтрацию и кэширование. Во втором примере кода демонстрируется реализация метода оболочки, возвращающий <xref:System.Data.DataSet> объект для включения кэширования и фильтрации с <xref:System.Web.UI.WebControls.ObjectDataSource> объекта.  
  
 В следующем примере кода показано, как <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления поддерживает фильтрацию и кэширование. Чтобы включить фильтрацию и кэширование, необходимо реализовать метод, который извлекает данные, который определяется <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства, чтобы возвращать данные в виде <xref:System.Data.DataSet> объекта. В этом примере кэширование включено поскольку `EmployeeLogic` объект возвращает данные в виде <xref:System.Data.DataSet>, <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойству `true`и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойств. <xref:System.Web.UI.WebControls.ObjectDataSource> Кэширует данные, возвращаемые <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство на 30 секунд.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 В следующем примере кода показано, как реализовать метод программы-оболочки, возвращающий <xref:System.Data.DataSet> объект для включения кэширования и фильтрации с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В базовой реализации `EmployeeLogic` класс, `GetAllEmployees` возвращает метод <xref:System.Collections.ArrayList>. Вместо рефакторинг объект полностью для работы с <xref:System.Web.UI.WebControls.ObjectDataSource> на страницу Web Forms с именем метода оболочки `GetAllEmployeesAsDataSet` добавляется, возвращающий набор `NorthwindEmployee` данные в виде <xref:System.Data.DataSet>. Данный пример кода является частью большего примера для <xref:System.Web.UI.WebControls.ObjectDataSource> класса.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает определенную пользователем зависимость ключа, связанную со всеми объектами кэша данных, созданными элементом управления источником данных.</summary>
        <value>Ключ, по которому идентифицируются все объекты кэша, созданные элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Свойству можно присвоить любое произвольное строковое значение.  
  
 Срок действия всех объектов кэша истекает явным образом при истечении срока действия ключа. Это позволяет сделать недействительным записей кэша, созданные <xref:System.Web.UI.WebControls.ObjectDataSource> на основе собственной страницы кода программным образом.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает кэширование данных. Хотя данные кэшируются, вызовы <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод извлекает данные из кэша, а не из бизнес-объект, <xref:System.Web.UI.WebControls.ObjectDataSource> работает с. По истечении срока действия кэша <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод извлекает данные из бизнес-объект и кэширует данные еще раз.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления автоматически кэширует данные при <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойству `true` и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойству присвоено значение больше 0, указывающее количество секунд, что кэш хранит данные до записи кэша удаляется. Значение 0 указывает кэша бесконечной длительности.  
  
 Можно задать <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> свойство, чтобы создать зависимость между все записи кэша, созданные <xref:System.Web.UI.WebControls.ObjectDataSource> управления и ключ. Срок действия можно все записи кэша программным способом в любое время, истечение срока действия ключа. Срок действия ключа с помощью <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> метод с текущим <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> значение как параметр.  
  
 Уникальных записей кэша создается для каждой комбинации <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> свойства. Несколько <xref:System.Web.UI.WebControls.ObjectDataSource> элементы управления можно использовать те же записи кэша в сценариях, где они загружают данные, используя тип, метод и параметры.  
  
   
  
## Examples  
 В следующих трех примерах веб-страницу, класс фонового кода страницы и класс доступа к данным, которые извлекают записи из таблицы Employees в базе данных "Борей".  
  
 В первом примере веб-страницы, который содержит два <xref:System.Web.UI.WebControls.ObjectDataSource> элементов управления, <xref:System.Web.UI.WebControls.DropDownList> элемента управления и <xref:System.Web.UI.WebControls.DetailsView> элемента управления. Первый <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DropDownList> управления используются для получения и отображения имен сотрудников из базы данных. Второй <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DetailsView> управления используются для получения и отображения записи, выбранной пользователем.  
  
 Кэширование для <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Таким образом каждая запись извлекается только один раз, из базы данных. <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Свойство имеет значение «EmployeeDetails», но любое строковое значение может работать в качестве ключа. Веб-страница также содержит <xref:System.Web.UI.WebControls.Button> элемент управления, который пользователь может щелкнуть истекает срок действия кэшированных данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.Control.Load> событием и обработчиком для <xref:System.Web.UI.WebControls.Button.Click> событие <xref:System.Web.UI.WebControls.Button> элемента управления. <xref:System.Web.UI.Control.Load> Обработчик событий создает элемент кэша с ключом, равным <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> значение. <xref:System.Web.UI.WebControls.Button.Click> Обработчик событий удаляется элемент кэша, ключ которого равен <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> значение. При удалении элемента кэша, истек срок действия кэшированных данных, зависит от ключа.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 В третьем примере класс доступа к данным, который взаимодействует с базой данных "Борей". Этот класс использует LINQ для запроса к таблице сотрудников. В примере требуется LINQ to SQL, класс, представляющий базы данных Northwind и таблицы Employees. Дополнительные сведения см. в разделе [Как Создание классов LINQ to SQL в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, передаются ли методу <see langword="Update" /> только новые значения или же метод <see langword="Update" /> получает и старые значения, и новые.</summary>
        <value>Одно из значений <see cref="T:System.Web.UI.ConflictOptions" />. Значение по умолчанию — <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство определяет, применены ли параметры для старых и новых значений по указанному методу <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство. Например, если метод, который является определяемое <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> возвращает <xref:System.Data.DataTable> управления со столбцами `Name` и `Number`и <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.OverwriteChanges> , параметры создаются для `Name` и `Number` для `Update` метод. Если <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение, параметры создаются для `Name`, `Number`, `original_Name`, и `original_Number`. (Точное имя параметров для исходных значений зависит от <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойство.) <xref:System.Web.UI.WebControls.ObjectDataSource> Затем определяет, является ли метод, указанный в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство имеет параметры, которые соответствуют.  
  
 Управление параллелизмом — это метод, используемый хранилищ данных к элементу управления, как данные считываются и изменившийся в хранилище, когда несколько пользователей получают доступ и управление те же данные. Например один клиент считывает данные и предоставляет пользователю, пока другой клиент считывает те же данные и представляет их другому пользователю. Если оба пользователя обновить данные и отправляют их в хранилище данных, непредвиденный результат может произойти, так как оба клиента могут указывать разные значения для тех же данных. Это считается конфликтом. Установив <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> свойства <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение, `Update` метод затем можно сравнить старое и новое значения к исходному источнику данных для обнаружения конфликтов и обрабатывать их при необходимости.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertNullToDBNull : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, выполняет ли элемент управления <see cref="T:System.Web.UI.WebControls.Parameter" /> автоматическое преобразование значений <see cref="F:System.DBNull.Value" />, переданных операции обновления, вставки или удаления и равных величине <see langword="null" />, в значение <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <value>Значение <see langword="true" />, если любое значение <see langword="null" /> в объекте <see cref="T:System.Web.UI.WebControls.Parameter" />, переданное элементу управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />, автоматически преобразуется в значение <see cref="F:System.DBNull.Value" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразование не `null` для <xref:System.DBNull.Value> значение может привести к ошибкам во время выполнения. Используйте <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull%2A> свойство, указывающее ли <xref:System.Web.UI.WebControls.Parameter> значения, которые передаются для обновления, вставки или операции удаления, автоматически преобразуются из `null` для <xref:System.DBNull.Value> по <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataObjectTypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя класса, используемое элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> в качестве параметра в операции обновления, вставки или удаления данных вместо передачи отдельных значений из элемента управления с привязкой к данным.</summary>
        <value>Полное или сокращенное имя класса, обозначающее тип объекта, который может использоваться объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> в качестве параметра операции <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />, <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> или <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вместо указания нескольких параметров, которые передаются <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> методов, можно создать один объект, который выполняет статистическое вычисление нескольких значений полей данных. Один объект передается методам, а не несколько параметров.  
  
 По умолчанию <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления, привязанного к элементу управления с привязкой к данным — что создает элемент управления с привязкой к данным <xref:System.Web.UI.WebControls.Parameter> объекта для каждого параметра в источнике данных. Если бизнес-объект имеет множество полей, получившийся метод также имеет множество полей. <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Свойство позволяет указать тип, имеющий свойство для каждого поля данных. Затем вместо того чтобы передавать несколько параметров метода, среда выполнения создает один объект и задает все его свойства. Один объект добавляется в коллекцию параметров для вызова метода.  
  
 Тип, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство должно иметь конструктор по умолчанию, не имеющий параметров, поэтому <xref:System.Web.UI.WebControls.ObjectDataSource> управления можно создать экземпляр типа. Тип должен также содержать настраиваемые свойства, позволяющие <xref:System.Web.UI.WebControls.ObjectDataSource> управления для заполнения объекта со значениями, которые передаются из элемента управления с привязкой к данным. Свойство имена на <xref:System.Web.UI.WebControls.ObjectDataSource> должны точно соответствовать имени параметра значения, которые передаются с помощью элемента управления с привязкой к данным элемента управления.  
  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойству и <xref:System.Web.UI.WebControls.ObjectDataSource> связан элемент управления с привязкой к данным элементом управления, методы, которые определяются <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> и <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойства должны иметь один параметр типа, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. Если <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.OverwriteChanges> значение метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство должно иметь один параметр типа, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. Если <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство должно иметь два параметра типа, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. Первый параметр содержит исходные значения; Второй параметр содержит новые значения.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> , связанный с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
   
  
## Examples  
 В разделе содержатся два примера кода. В первом примере кода демонстрируется реализация типа, которая объединяет все значения параметров в один объект, с помощью <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. Во втором примере кода показана веб-страница использует два класса, которые используются в первом примере кода.  
  
 В следующем примере кода показано, как реализовать тип, который объединяет все значения параметров в один объект, с помощью <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. Выберите метод `AggregateData` возвращает <xref:System.Data.DataTable> объект с двумя столбцами с именем `Name` и `Number`. Аналогичным образом `NewData` класс определяет два свойства чтения/записи, `Name` и `Number`. `Insert` Метод `AggregateData` класс не принимает один параметр типа `NewData`. `TypeName` Свойство <xref:System.Web.UI.WebControls.ObjectDataSource> присваивается `AggregateData` и <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойству `NewData`.  
  
 [!code-csharp[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateData.cs#2)]
 [!code-vb[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateData.vb#2)]  
  
 В следующем примере кода показан веб-страницы, который использует два класса, которые используются в предыдущем примере кода.  
  
 [!code-aspx-csharp[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateDataPageCS.aspx#1)]
 [!code-aspx-vb[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateDataPageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4">Использование параметров с помощью элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="objectDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет операцию удаления путем вызова метода, заданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> с параметрами, содержащимися в коллекции <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />.</summary>
        <returns>Значение, соответствующее числу строк, удаляемых из базового хранилища данных, если в качестве значения свойства <see cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" /> объекта <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> задано событие <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />; в противном случае — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> выполняется операция, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событий. Можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событие для проверки значений параметров и всевозможной перед <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> операции. Для выполнения операции удаления <xref:System.Web.UI.WebControls.ObjectDataSourceView> объект использует отражение для создания экземпляра объекта, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство. Затем вызывается метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойства, используя все связанные <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> свойства. Если параметры удаления связанного элемента управления с привязкой к данным, имена параметров создается согласно <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойство. После <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> завершения операции <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> событий. Можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> событий любые возвращаемые значения выходных параметров и исключения, для анализа и выполнять любые операции постобработки.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Метод делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> метод <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
## <a name="data-bound-controls"></a>Элементы управления с привязкой данных  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource> связан элемент управления с привязкой к данным элементом управления, такие как <xref:System.Web.UI.WebControls.GridView> элемента управления, нет необходимости вызывать <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> метод из кода страницы. <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Метод вызывается непосредственно с помощью элемента управления с привязкой к данным, вместо этого.  
  
 Дополнительные сведения о параметр слияния, время жизни объекта и метод разрешения, см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении операции <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> событий проверьте значения, возвращаемого значения или выходные параметры, или требуется определить, возникло ли исключение после <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> завершения операции. Возвращаемое значение, выходные параметры и свойства обработки исключений доступны из <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Можно использовать <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> возвращаемого количество строк, удаленных из объекта <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> метод. Чтобы сделать это, установите <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> свойство. Если возвращается число удаленных строк из метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойство, значение можно получить из <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> объекта.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объект и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Второй пример показывает код `EmployeeLogic` класс, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объект и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Изначально <xref:System.Web.UI.WebControls.GridView> элемент управления отображает набор всех сотрудников, используя метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство для извлечения данных из `EmployeeLogic` объекта. Так как <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> свойству `true`, <xref:System.Web.UI.WebControls.GridView> элементов управления автоматически отображает **удалить** кнопки.  
  
 Если щелкнуть **удалить** кнопки, операция удаления выполняется с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойство и все параметры, указанные в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции. В этом примере кода также выполняются некоторые шаги предварительной и последующей обработки. `NorthwindEmployeeDeleting` Делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событие до выполнения операций и `NorthwindEmployeeDeleted` делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> событие после завершения операции для выполнения обработки исключений. В этом примере кода Если `NorthwindDataException` является исключение, обрабатывается `NorthwindEmployeeDeleted` метод.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 В следующем коде показано в примере `EmployeeLogic` класс, используемый в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">С помощью Entity Framework и элемент управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя метода или функции, вызываемого элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для удаления данных.</summary>
        <value>Строка, представляющая имя метода или функции, используемых объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для удаления данных. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предполагается, что бизнес-объект, удаление данных по одной записи за раз, а не в пакете.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Убедитесь, что для имен параметров <xref:System.Web.UI.WebControls.ObjectDataSource> контролировать <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции совпадают с именами столбцов, возвращаемых функцией метода выбора.  
  
## <a name="object-lifetime"></a>Время жизни объекта  
 Метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойство может быть методом экземпляра или `static` (`Shared` в Visual Basic) метод. Если он является методом экземпляра, бизнес-объект создается и уничтожается каждый раз <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> вызывается свойство. Можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событий для работы с бизнес-объект, прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> вызывается свойство. Также можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событие, возникающее после <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> вызывается свойство. Если бизнес-объект реализует <xref:System.IDisposable> интерфейс, <xref:System.IDisposable.Dispose%2A> метод вызывается перед уничтожением объекта. Если метод является `static` (`Shared` в Visual Basic) метода, бизнес-объект еще не создан, и не может обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события.  
  
## <a name="parameter-merging"></a>Слияние параметров  
 Параметры добавляются <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции из трех источников:  
  
-   Из элемента управления с привязкой к данным, во время выполнения.  
  
-   Из `DeleteParameters` элемент, декларативно.  
  
-   Из `Deleting` метод, декларативно.  
  
 Во-первых, все параметры, которые создаются из элементов управления с привязкой данных добавляются к <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции. Например если <xref:System.Web.UI.WebControls.ObjectDataSource> привязан элемент управления <xref:System.Web.UI.WebControls.GridView> элемента управления, в которой присутствуют столбцы `Name` и `Number`, параметры для `Name` и `Number` добавляются в коллекцию. Точное имя параметра зависит от <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойство. Тип данных из этих параметров является `string`. Далее, параметры, которые перечислены в `DeleteParameters` добавляются. Если параметр в `DeleteParameters` найти элемент с именем параметра, которое уже находится в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекция, существующий параметр изменяется в соответствии с параметром, который указан в `DeleteParameters` элемент. Как правило используется для изменения типа данных в параметре. Наконец, можно программно добавлять и удалять параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событие, возникающее перед <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> выполнением метода. Метод разрешается после слияния параметров. Разрешение метода рассматривается в следующем разделе.  
  
## <a name="method-resolution"></a>Метод разрешения  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> вызове метода, поля данных из элемента управления с привязкой к данным, параметры, созданные декларативно в `DeleteParameters` элемент и параметры, которые были добавлены в <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> обработчик событий будут объединены. (Дополнительные сведения см. в предыдущем разделе.) <xref:System.Web.UI.WebControls.ObjectDataSource> Затем пытается найти метод, вызываемый объект. Во-первых, он ищет один или несколько методов с именем, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойство. Если совпадений не найдено, <xref:System.InvalidOperationException> возникает исключение. Если соответствие найдено, он будет искать совпадение имен. Например, предположим, что тип, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство имеет два метода с именем `DeleteARecord`. Один `DeleteARecord` имеет один параметр `ID`, а другой `DeleteARecord` имеет два параметра `Name` и `Number`. Если <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекция имеет только один параметр с именем `ID`, `DeleteARecord` метод с только что `ID` параметр называется. Тип параметра не проверяется при разрешении методов. Порядок параметров не имеет значения.  
  
 Если <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство задано, метод разрешается по-разному. <xref:System.Web.UI.WebControls.ObjectDataSource> Ищет метод с именем, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойство, которое принимает один параметр типа, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. В этом случае имя параметра не имеет значения.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объект и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Второй пример показывает код `EmployeeLogic` класс, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объект и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Изначально <xref:System.Web.UI.WebControls.GridView> элемент управления отображает набор всех сотрудников, используя метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство для извлечения данных из `EmployeeLogic` объекта. Так как <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> свойству `true`, <xref:System.Web.UI.WebControls.GridView> элементов управления автоматически отображает **удалить** кнопки.  
  
 Если щелкнуть **удалить** кнопки, операция удаления выполняется с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойство и все параметры, указанные в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции. В этом примере кода также выполняются некоторые шаги предварительной и последующей обработки. `NorthwindEmployeeDeleting` Делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событие, прежде чем операция выполняется и `NorthwindEmployeeDeleted` делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> событие после завершения операции для выполнения обработки исключений. В этом примере если `NorthwindDataException` является исключение, обрабатывается `NorthwindDataException` делегировать.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 В следующем коде показано в примере `EmployeeLogic` класс, используемый в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">С помощью Entity Framework и элемент управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию параметров, содержащую параметры, используемые методом <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащая параметры, используемые методом <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имена и типы параметров, которые содержатся в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции должны совпадать имена и типы параметров в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> сигнатуру метода. Имена параметров зависят от <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойство на них с учетом регистра. Параметры в коллекции зависит от данных в элемент управления с привязкой к данным, параметров, указанных декларативно и параметры, которые добавляются программно. Дополнительные сведения см. в разделе «Параметр слияния» в <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> и [использование параметров с помощью элемента управления ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Извлекает свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> свойство, которое содержится в <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Дополнительные сведения о параметр слияния, время жизни объекта и метод разрешения, см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объект и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Второй пример показывает код `EmployeeLogic` класс, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объект и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Изначально <xref:System.Web.UI.WebControls.GridView> элемент управления отображает набор всех сотрудников, используя метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство для извлечения данных из `EmployeeLogic` объекта. Так как <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> свойству `true`, <xref:System.Web.UI.WebControls.GridView> элементов управления автоматически отображает **удалить** кнопки.  
  
 Если щелкнуть **удалить** кнопки, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событие вызывается с двумя параметрами. Один параметр `EmpID`, поступают из <xref:System.Web.UI.WebControls.DataGrid> управления и основан на <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> свойство. Другой параметр поступает из декларативного <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> свойство. `EmployeeLogic` Класса перегрузки `DeleteEmployee` метод. Одна перегрузка принимает `NorthwindEmployee` параметра, а другой <xref:System.Int32> параметр с именем `anID`. В <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событие, записи в <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> свойство корректируются, чтобы включать только один параметр с именем `anID` значением `original_EmpID`. При наличии обработчика событий, а соответствующий `DeleteEmployee` вызывается метод.  
  
 В следующем примере кода показан веб-страницы, отображающий <xref:System.Web.UI.WebControls.DataGrid> управления и дескрипторы <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событий.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/objds11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/objds11vb.aspx#1)]  
  
 В следующем коде показано в примере `EmployeeLogic` класс, используемый в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/northwindemployee11.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/northwindemployee11.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событию для выполнения дополнительной инициализации, характерное для приложения, для проверки значений параметров, или измените значения параметров перед <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления выполняет операцию удаления. Эти параметры доступны как <xref:System.Collections.IDictionary> коллекции, к которому обращаются <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> свойство, которое возвращается командлетом <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> объекта.  
  
 Можно отменить операцию удаления, установив <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> для `true`.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объект и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Второй пример показывает код `EmployeeLogic` класс, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объект и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Изначально <xref:System.Web.UI.WebControls.GridView> элемент управления отображает набор всех сотрудников, используя метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство для извлечения данных из `EmployeeLogic` объекта. Так как <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> свойству `true`, <xref:System.Web.UI.WebControls.GridView> элементов управления автоматически отображает **удалить** кнопки.  
  
 Если щелкнуть **удалить** кнопки, операция удаления выполняется с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойство и все параметры, указанные в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции. В этом примере кода также выполняются некоторые шаги предварительной и последующей обработки. `NorthwindEmployeeDeleting` Делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событие, прежде чем операция выполняется и `NorthwindEmployeeDeleted` делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> событие после завершения операции для выполнения обработки исключений. В этом примере кода Если `NorthwindDataException` является исключение, обрабатывается `NorthwindEmployeeDeleted` метод.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 В следующем коде показано в примере `EmployeeLogic` класс, используемый в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение позволяющее определить, включено ли кэширование для элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <value>Значение <see langword="true" />, если кэширование данных для элемента управления источником данных включено; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает кэширование данных. Хотя данные кэшируются, вызовы <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод извлечения данных из кэша, а не <xref:System.Web.UI.WebControls.ObjectDataSource> создания экземпляра бизнес-объекта и вызова его метода данных. По истечении срока действия кэша <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод извлекает данные из бизнес-объект и кэширует данные еще раз.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления автоматически кэширует данные при <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойству `true` и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойству присвоено значение больше 0, указывающее количество секунд, что кэш хранит данные до записи кэша удаляется. Значение 0 указывает кэша бесконечной длительности.  
  
   
  
## Examples  
 В следующих трех примерах веб-страницу, класс фонового кода страницы и класс доступа к данным, которые извлекают записи из таблицы Employees в базе данных "Борей".  
  
 В первом примере веб-страницы, который содержит два <xref:System.Web.UI.WebControls.ObjectDataSource> элементов управления, <xref:System.Web.UI.WebControls.DropDownList> элемента управления и <xref:System.Web.UI.WebControls.DetailsView> элемента управления. Первый <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DropDownList> управления используются для получения и отображения имен сотрудников из базы данных. Второй <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DetailsView> управления используются для получения и отображения записи, выбранной пользователем.  
  
 Кэширование для <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Таким образом каждая запись извлекается только один раз, из базы данных. <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Свойство имеет значение «EmployeeDetails», но любое строковое значение может работать в качестве ключа. Веб-страница также содержит <xref:System.Web.UI.WebControls.Button> элемент управления, который пользователь может щелкнуть истекает срок действия кэшированных данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.Control.Load> событием и обработчиком для <xref:System.Web.UI.WebControls.Button.Click> событие <xref:System.Web.UI.WebControls.Button> элемента управления. <xref:System.Web.UI.Control.Load> Обработчик событий создает элемент кэша с ключом, равным <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> значение. <xref:System.Web.UI.WebControls.Button.Click> Обработчик событий удаляется элемент кэша, ключ которого равен <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> значение. При удалении элемента кэша, истек срок действия кэшированных данных, зависит от ключа.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 В третьем примере класс доступа к данным, который взаимодействует с базой данных "Борей". Этот класс использует LINQ для запроса к таблице сотрудников. В примере требуется LINQ to SQL, класс, представляющий базы данных Northwind и таблицы Employees. Дополнительные сведения см. в разделе [Как Создание классов LINQ to SQL в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Свойству <see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" /> присваивается значение <see langword="true" />, если метод, заданный свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> возвращает <see cref="T:System.Data.Common.DbDataReader" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePaging : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, поддерживает ли элемент управления источником данных разбиение по страницам извлекаемого им набора данных.</summary>
        <value>Значение <see langword="true" />, если элемент управления источником данных поддерживает разбиение по страницам извлекаемых им данных; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Разбиение по страницам, <xref:System.Web.UI.WebControls.ObjectDataSource> управления обрабатывается путем задания <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойства <xref:System.Web.UI.WebControls.ObjectDataSource> и определение метода select в бизнес-объекта с соответствующими параметрами. При <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> свойству `true`, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекции входят два дополнительных параметра для первой строки, которую запрашивается и количество строк, которые запрашиваются. Эти два параметра именуются в соответствии с определением <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> и <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> свойства. `Select` Метод должен возвращать запрошенное число строк, начиная с указанного индекса. Так как данные не могут равномерно разделить по размеру страницы, последняя страница может содержать меньше строк. Таким образом число строк, которые запрашиваются является фактически максимальное количество возвращаемых строк.  
  
 При включении разбиения на страницы сопоставленного элемента управления с привязкой к данным элемента управления с привязкой данных вызывает `Select` метод с Начальный индекс и число строк, которые являются обязательными. Кроме того Если <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойство задано, элемент управления привязки данных вызывает метод перед отображением элементов управления pager. Например если <xref:System.Web.UI.WebControls.GridView> элемент управления имеет разбиение по страницам включено с размером страницы 5, а также метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойство возвращает 20, только 4 страницы будут отображаться в страничном навигаторе.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта.  
  
   
  
## Examples  
 В следующих трех примерах веб-страницу, класс фонового кода страницы и класс доступа к данным, позволяющий пользователю выбрать, сколько записей отображаются на странице.  
  
 Веб-страница содержит <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> свойству `true`. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойству присвоено имя метода, который возвращает общее количество записей в запросе. <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Свойство и <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> имеет значение имена параметров, которые используются в методе Select. Страница также содержит <xref:System.Web.UI.WebControls.DropDownList> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> событие <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Код в обработчик наборов <xref:System.Web.UI.WebControls.GridView.PageSize%2A> свойства для выбранного пользователем.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 В третьем примере класс доступа к данным, который получает данные из таблицы Customers. Он содержит метод с именем `GetSubsetOfEmployees`, которое присваивается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Пример также содержит метод с именем `GetEmployeeCount`, которое присваивается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Этот класс использует LINQ для запроса к таблице клиентов. В примере требуется LINQ to SQL, класс, представляющий базу данных "Борей" и таблице Customers. Дополнительные сведения см. в разделе [Как Создание классов LINQ to SQL в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает выражение фильтрации, применяемое при вызове метода, заданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</summary>
        <value>Строка, представляющая выражение фильтрации, которое применяется при извлечении данных с помощью метода или функции, заданных свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает фильтрации данных только тогда, когда <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> возвращает <xref:System.Data.DataSet> или <xref:System.Data.DataTable> объекта.  
  
 Синтаксис, используемый для <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство представляет собой выражение стиль строки формата. Синтаксис выражений фильтра — это тот же синтаксис, который принимается <xref:System.Data.DataColumn.Expression%2A> свойство. При добавлении параметров в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции, можно также включить заполнители формата строки. Например, включать `"{0}"` в выражении для замены значения параметров. Заполнители заменяются в соответствии с индексом параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции.  
  
 Можно включить параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство. Если тип параметра является типом строку или символ, параметр нужно заключите в одинарные кавычки. Кавычки не требуются, если параметр является числовым типом.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Коллекция содержит параметры, которые вычисляются для заполнители, которые находятся в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
> [!NOTE]
>  Обязательно проверяйте все значения параметров фильтра, полученные от клиента. Среда выполнения просто подставляет значение параметра в выражении фильтра и применяет его к <xref:System.Data.DataSet> или <xref:System.Data.DataTable> объект, возвращаемый <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод. Если вы используете <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство, чтобы ограничить число возвращаемых элементов, необходимо проверить значения параметров, прежде чем фильтрация выполняется из соображений безопасности.  
  
   
  
## Examples  
 В следующем примере кода показано, как отображать отфильтрованные данные с помощью <xref:System.Web.UI.WebControls.ObjectDataSource> управления для получения данных из среднего уровня бизнес-объект и <xref:System.Web.UI.WebControls.GridView> управления для отображения результатов. <xref:System.Web.UI.WebControls.ObjectDataSource> Управления можно фильтровать данные только в том случае, когда метод, который получает данные извлекает его как <xref:System.Data.DataSet> или <xref:System.Data.DataTable> объекта. По этой причине <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство идентифицирует метод бизнес-объекта, который получает данные в виде <xref:System.Data.DataSet>.  
  
 В примере кода состоит из <xref:System.Web.UI.WebControls.TextBox> элемента управления, <xref:System.Web.UI.WebControls.GridView> элемента управления, <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления и **отправить** кнопки. По умолчанию <xref:System.Web.UI.WebControls.TextBox> заполняется с именем одного из сотрудников компании Northwind Traders. <xref:System.Web.UI.WebControls.GridView> Отображает информацию о сотруднике, который идентифицируется по имени в <xref:System.Web.UI.WebControls.TextBox>. Для получения данных о другом сотруднике, введите полное имя сотрудника в <xref:System.Web.UI.WebControls.TextBox>, а затем нажмите кнопку **отправить** кнопки.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Свойство указывает выражение, которое используется для фильтрации данных, получаемых с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Она использует параметр заполнители, которые вычисляются для параметров, которые содержатся в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции. В этом примере заполнитель параметра связывает одинарными кавычками, так как тип параметра — строковый тип, который может содержать пробелы. Если тип параметра является типом числами или датами, ограничивающий кавычки не являются обязательными.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 В следующем примере кода приведен пример среднего уровня бизнес-объект, в предыдущем примере кода. В примере кода состоит из двух базовых классов:  
  
-   `EmployeeLogic` Класс, который является классом, инкапсулирующим бизнес-логики.  
  
-   `NorthwindEmployee` Класс, который является классом модели, который содержит только базовые функциональные возможности, необходимые для загрузки и сохранения данных на уровне данных.  
  
 Для простоты `EmployeeLogic` класс создает статический набор данных, а не получения данных из уровня данных. Это также полезно в этом примере, поскольку в нем нужно указать полное имя сотрудника в компании Northwind Traders для демонстрации фильтрации. Полный рабочий пример необходимо скомпилировать и использовать эти классы с примерами кода веб-форм, которые предоставляются.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Значение свойства <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> задано, а метод <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> не возвращает значение <see cref="T:System.Data.DataSet" /> или <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией фильтрации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> событию для выполнения операции проверки на значения параметров фильтра перед <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления выполняет операцию фильтрации. Выбранной операции можно отменить, установив <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> для `true`. Событие возникает только в том случае, если <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойству.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering?displayProperty=nameWithType> Делегирует событий <xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=nameWithType> событие <xref:System.Web.UI.WebControls.ObjectDataSourceView> , связанный с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
> [!IMPORTANT]
>  Обязательно проверяйте все значения параметров фильтра, полученные от клиента. Среда выполнения просто подставляет значение параметра в выражении фильтра и применяет его к <xref:System.Data.DataSet> или <xref:System.Data.DataTable> объект, возвращаемый <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод. Если вы используете <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство, чтобы ограничить число возвращаемых элементов, необходимо проверить значения параметров, прежде чем фильтрация выполняется из соображений безопасности.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию параметров, связанных с любыми прототипами параметров в строке <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащая набор параметров, связанных с любыми местозаполнителями параметров, содержащимися в свойстве <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает фильтрации данных только тогда, когда <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> возвращает <xref:System.Data.DataSet> или <xref:System.Data.DataTable> объекта.  
  
 Синтаксис, используемый для <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> является выражением стиль строки формата. Синтаксис выражений фильтра — это тот же синтаксис, который принимается <xref:System.Data.DataColumn.Expression%2A> свойство. При добавлении параметров в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции, можно также включить заполнители формата строки. Например, включать `"{0}"` в выражении для замены значения параметров. Заполнители заменяются в соответствии с индексом параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции.  
  
 Можно включить параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство. Если параметр является типом строку или символ, параметр нужно заключите в одинарные кавычки. Кавычки не требуются, если параметр является числовым типом.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Извлекает свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> свойство, которое содержится в <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как отображать отфильтрованные данные с помощью <xref:System.Web.UI.WebControls.ObjectDataSource> объект для извлечения данных из среднего уровня бизнес-объект и <xref:System.Web.UI.WebControls.GridView> управления для отображения результатов. Во втором примере кода приведен пример среднего уровня бизнес-объект, используемый в первом примере кода.  
  
 В следующем примере кода показано, как отображать отфильтрованные данные с помощью <xref:System.Web.UI.WebControls.ObjectDataSource> управления для получения данных из среднего уровня бизнес-объект и <xref:System.Web.UI.WebControls.GridView> управления для отображения результатов. <xref:System.Web.UI.WebControls.ObjectDataSource> Управления можно фильтровать данные только в том случае, когда метод, который получает данные извлекает его как <xref:System.Data.DataSet> или <xref:System.Data.DataTable> объекта. По этой причине <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство идентифицирует метод бизнес-объекта, который получает данные в виде <xref:System.Data.DataSet>.  
  
 В примере кода состоит из <xref:System.Web.UI.WebControls.TextBox> элемента управления, <xref:System.Web.UI.WebControls.GridView> элемента управления, <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления и **отправить** кнопки. По умолчанию <xref:System.Web.UI.WebControls.TextBox> заполняется с именем одного из сотрудников компании Northwind Traders. <xref:System.Web.UI.WebControls.GridView> Отображает информацию о сотруднике, который идентифицируется по имени в <xref:System.Web.UI.WebControls.TextBox>. Для получения данных о другом сотруднике в <xref:System.Web.UI.WebControls.TextBox>, введите полное имя сотрудника и затем нажмите кнопку **отправить** кнопки.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Свойство указывает выражение, которое используется для фильтрации данных, извлеченных методом <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Она использует параметр заполнители, которые вычисляются для параметров, которые содержатся в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции. В этом примере заполнитель параметра связывает одинарными кавычками, так как тип параметра — строковый тип, который может содержать пробелы. Если тип параметра является типом числами или датами, ограничивающий кавычки не являются обязательными. <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Коллекция содержит один параметр <xref:System.Web.UI.WebControls.FormParameter> объекта, привязанного к <xref:System.Web.UI.WebControls.TextBox> элемента управления.  
  
> [!IMPORTANT]
>  Обязательно проверяйте все значения параметров фильтра, полученные от клиента. Среда выполнения просто подставляет значение параметра в выражении фильтра и применяет его к <xref:System.Data.DataView> объект, возвращаемый <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод. Если вы используете <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство, чтобы ограничить число возвращаемых элементов, необходимо проверить значения параметров, прежде чем фильтрация выполняется из соображений безопасности.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 В следующем примере кода приведен пример среднего уровня бизнес-объект, в предыдущем примере кода. В примере кода состоит из двух базовых классов:  
  
-   `EmployeeLogic` Класс, который является классом, инкапсулирующим бизнес-логики.  
  
-   `NorthwindEmployee` Класс, который является классом модели, который содержит только базовые функциональные возможности, необходимые для загрузки и сохранения данных на уровне данных.  
  
 Для простоты `EmployeeLogic` класс создает статический набор данных, а не получения данных из уровня данных. Это также полезно в этом примере, поскольку в нем нужно указать полное имя сотрудника в компании Northwind Traders для демонстрации фильтрации. Полный рабочий пример необходимо скомпилировать и использовать эти классы с примерами кода веб-форм, которые предоставляются.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Значение свойства <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> задано, а метод <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> не возвращает значение <see cref="T:System.Data.DataSet" /> или <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="objectDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Имя извлекаемого представления. Поскольку объект <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> поддерживает только одно представление, параметр <paramref name="viewName" /> игнорируется.</param>
        <summary>Извлекает именованное представление источника данных, связанное с элементом управления источника данных.</summary>
        <returns>Представление <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> с именем <see langword="DefaultView" />, связанное с <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает только одно представление источника данных. Как и в случае всех объектов представления источника данных, <xref:System.Web.UI.WebControls.ObjectDataSourceView> связанный с данными системы управления версиями, определяет его возможности, выполняет всю работу, которая требуется для получения данных из хранилища базовых данных и выполняет операции, такие как сортировка, Вставка, удаление и обновление.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> Метод предназначен для вызова элементов управления с привязкой данных, не код страницы.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значением указанного параметра <paramref name="viewName" /> является <see langword="null" /> или значение, отличное от <see langword="DefaultView" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="objectDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает коллекцию имен, представляющую список объектов представления, связанных с объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <returns>Объект <see cref="T:System.Collections.ICollection" />, содержащий имена представлений, связанных с элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает только одно представление, с именем `DefaultView`, на свои данные. <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> Метод возвращает коллекцию одного элемента этого имени одно представление.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> Метод предназначен для вызова элементов управления с привязкой данных, не код страницы.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="objectDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет операцию вставки путем вызова метода, который определяется свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> и всеми параметрами в коллекции <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />.</summary>
        <returns>Значение, представляющее число строк, вставленных в базовое хранилище данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> выполняется операция, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> событий. Можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> событие для проверки значений параметров и всевозможной перед <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> операции. Для выполнения операции вставки <xref:System.Web.UI.WebControls.ObjectDataSourceView> объект использует отражение для создания экземпляра объекта, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство. Затем вызывается метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойства, используя все связанные <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> свойства. После <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> завершения операции <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> событий. Можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> событий любые возвращаемые значения выходных параметров и исключения, для анализа и выполнять любые операции постобработки.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Метод делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> метод <xref:System.Web.UI.WebControls.ObjectDataSourceView> , связанный с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Дополнительные сведения о параметр слияния, время жизни объекта и метод разрешения, см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.  
  
## <a name="data-bound-controls"></a>Элементы управления с привязкой данных  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource> объект, связанный с элементом управления с привязкой к данным, таких как <xref:System.Web.UI.WebControls.GridView> элемента управления, нет необходимости вызывать <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> метод из кода страницы. <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Метод вызывается непосредственно с помощью элемента управления с привязкой к данным, вместо этого.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea">Пошаговое руководство. Привязка данных к пользовательский бизнес-объект</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> событий проверьте значения, возвращаемого значения или выходные параметры, или требуется определить, возникло ли исключение после <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> завершения операции. Возвращаемое значение, выходные параметры и свойства обработки исключений доступны из <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> событию для выполнения дополнительной инициализации, характерное для приложения, для проверки значений параметров, или измените значения параметров перед <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления выполняет операцию вставки. Эти параметры доступны как <xref:System.Collections.IDictionary> коллекции, к которому обращаются <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> свойство, которое возвращается командлетом <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> объекта.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объект и <xref:System.Web.UI.WebControls.DetailsView> управления для вставки данных. Во втором примере кода приведен пример среднего уровня бизнес-объекта, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объект и <xref:System.Web.UI.WebControls.DetailsView> управления для вставки данных. Изначально <xref:System.Web.UI.WebControls.DetailsView> открывает новое `NorthwindEmployee` записей, а также автоматически созданный **вставить** кнопки. После ввода данных в поля <xref:System.Web.UI.WebControls.DetailsView> управлять, щелкните **вставить** кнопки. <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Свойство определяет, какой метод выполняет операцию вставки.  
  
 В этом примере `UpdateEmployeeInfo` метод используется для выполнения инструкции insert; Однако он требует `NorthwindEmployee` параметр для вставки данных. По этой причине коллекцию строк, <xref:System.Web.UI.WebControls.DetailsView> передает элемент управления автоматически не является достаточным. `NorthwindEmployeeInserting` Делегат является <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> объект, который обрабатывает <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> событий и позволяет управлять входных параметров перед <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> операции продолжается. Так как `UpdateEmployeeInfo` метод требует `NorthwindEmployee` объекта в виде параметра, один создается с помощью коллекции строк и добавляется к <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> коллекции, используя имя параметра (`ne`), он может принимать. Аналогичные действия можно выполнять при использовании существующего объекта среднего уровня в качестве источника данных с типами и методами, которые не предназначены специально для использования с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> выполняется операция, метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> вызывается свойство. Если `Insert` метод объекта имеет сигнатуру метода, который включает в себя параметры, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекция должна содержать параметр с именами, соответствующими параметры подписи метода для <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> успешного завершения метода.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 В следующем примере кода приведен пример среднего уровня бизнес-объект, в предыдущем примере кода. В примере кода состоит из двух базовых классов:  
  
-   `EmployeeLogic` Класс, который является классом без отслеживания состояния, который инкапсулирует бизнес-логики.  
  
-   `NorthwindEmployee` Класс, который является классом модели, который содержит только базовые функциональные возможности, необходимые для загрузки и сохранения данных на уровне данных.  
  
 Дополнительная `NorthwindDataException` класс предоставляется для удобства. Полный рабочий пример необходимо скомпилировать и использовать эти классы. `UpdateEmployeeInfo` Метод не реализован полностью, поэтому не будет вставлять данные в базе данных Northwind Traders, Экспериментируя с этим примером.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя метода или функции, вызываемого элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для вставки данных.</summary>
        <value>Строка, представляющая имя метода или функции, используемых объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для вставки данных. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предполагается, что бизнес-объект, вставка данных по одной записи за раз, а не в пакете.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> объекта.  
  
## <a name="object-lifetime"></a>Время жизни объекта  
 Метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойство может быть методом экземпляра или `static` (`Shared` в Visual Basic) метод. Если он является методом экземпляра, бизнес-объект создается и уничтожается каждый раз методом, заданным свойством <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> вызывается свойство. Можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событий для работы с бизнес-объект, прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> вызывается свойство. Также можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событие, возникающее после метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> вызывается свойство. Если бизнес-объект реализует <xref:System.IDisposable> интерфейс, <xref:System.IDisposable.Dispose%2A> метод вызывается перед уничтожением объекта. Если метод является `static` (`Shared` в Visual Basic), бизнес-объект еще не создан, и не может обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события.  
  
## <a name="parameter-merging"></a>Слияние параметров  
 Параметры добавляются <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции из трех источников:  
  
-   Из элемента управления с привязкой к данным, во время выполнения.  
  
-   Из `InsertParameters` элемент, декларативно.  
  
-   Из `Inserting` метод, программными средствами.  
  
 Во-первых, все параметры, которые создаются из элементов управления с привязкой данных добавляются к <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции. Например если <xref:System.Web.UI.WebControls.ObjectDataSource> привязан элемент управления <xref:System.Web.UI.WebControls.GridView> элемента управления, в которой присутствуют столбцы `Name` и `Number`, параметры для `Name` и `Number` добавляются в коллекцию. Тип данных из этих параметров является `string`. Далее, параметры, которые перечислены в `InsertParameters` добавляются. Если параметр в `InsertParameters` найти элемент с именем параметра, которое уже находится в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекция, существующий параметр изменяется в соответствии с параметром, который указан в `InsertParameters` элемент. Как правило используется для изменения типа данных в параметре. Наконец, можно программно добавлять и удалять параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> событие, возникающее перед <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> выполнением метода. Метод разрешается после слияния параметров. Разрешение метода рассматривается в следующем разделе.  
  
> [!IMPORTANT]
>  Обязательно проверяйте все значения параметров, полученные от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойство.  
  
## <a name="method-resolution"></a>Метод разрешения  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> вызове метода, поля данных из элемента управления с привязкой к данным, параметры, созданные декларативно в `InsertParameters` элемент и параметры, которые были добавлены в <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> обработчик событий будут объединены. (Дополнительные сведения см. в предыдущем разделе.) <xref:System.Web.UI.WebControls.ObjectDataSource> Затем пытается найти метод, вызываемый объект. Во-первых, он ищет один или несколько методов с именем, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойство. Если совпадений не найдено, <xref:System.InvalidOperationException> возникает исключение. Если соответствие найдено, он будет искать совпадение имен. Например, предположим, что тип, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство имеет два метода с именем `InsertARecord`. Один `InsertARecord` имеет один параметр `ID`, а другой `InsertARecord` имеет два параметра `Name` и `Number`. Если <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекция имеет только один параметр с именем `ID`, `InsertARecord` метод с только что `ID` параметр называется. Тип параметра не проверяется при разрешении методов. Порядок параметров не имеет значения.  
  
 Если <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство задано, метод разрешается по-разному. <xref:System.Web.UI.WebControls.ObjectDataSource> Ищет метод с именем, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойство, которое принимает один параметр типа, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. В этом случае имя параметра не имеет значения.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объект и <xref:System.Web.UI.WebControls.DetailsView> управления для вставки данных. Во втором примере кода приведен пример среднего уровня бизнес-объекта, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объект и <xref:System.Web.UI.WebControls.DetailsView> управления для вставки данных. Изначально <xref:System.Web.UI.WebControls.DetailsView> открывает новое `NorthwindEmployee` записей, а также автоматически созданный **вставить** кнопки. После ввода данных в поля <xref:System.Web.UI.WebControls.DetailsView> управлять, щелкните **вставить** кнопки. <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Свойство определяет, какой метод выполняет операцию вставки.  
  
 В этом примере `UpdateEmployeeInfo` метод используется для выполнения инструкции insert; Однако он требует `NorthwindEmployee` параметр для вставки данных. По этой причине коллекцию строк, <xref:System.Web.UI.WebControls.DetailsView> передает элемент управления автоматически не является достаточным. `NorthwindEmployeeInserting` Делегат является <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> объект, который обрабатывает <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> событий и позволяет управлять входных параметров перед <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> операции продолжается. Так как `UpdateEmployeeInfo` метод требует `NorthwindEmployee` объекта в виде параметра, один создается с помощью коллекции строк и добавляется к <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> коллекции, используя имя параметра (`ne`), он может принимать. Аналогичные действия можно выполнять при использовании существующего объекта среднего уровня в качестве источника данных с типами и методами, которые не предназначены специально для использования с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> выполняется операция, метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> вызывается свойство. Если `Insert` метод объекта имеет сигнатуру метода, который включает в себя параметры, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекция должна содержать параметр с именами, соответствующими параметры подписи метода для <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> успешного завершения метода.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 В следующем примере кода приведен пример среднего уровня бизнес-объект, в предыдущем примере кода. В примере кода состоит из двух базовых классов:  
  
-   `EmployeeLogic` Класс, который является классом без отслеживания состояния, который инкапсулирует бизнес-логики.  
  
-   `NorthwindEmployee` Класс, который является классом модели, который содержит только базовые функциональные возможности, необходимые для загрузки и сохранения данных на уровне данных.  
  
 Дополнительная `NorthwindDataException` класс предоставляется для удобства. Полный рабочий пример необходимо скомпилировать и использовать эти классы. `UpdateEmployeeInfo` Метод не реализован полностью, поэтому не будет вставлять данные в базе данных Northwind Traders, Экспериментируя с этим примером.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">С помощью Entity Framework и элемент управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию параметров, содержащую параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащий параметры, используемые методом, заданным свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имена и типы параметров, которые содержатся в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции должны совпадать имена и типы параметров, которые находятся в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> сигнатурой свойства. Имена параметров чувствительны к регистру. При работе с элементами управления с привязкой к данным, которые предоставляют параметры, такие как <xref:System.Web.UI.WebControls.GridView> и <xref:System.Web.UI.WebControls.DetailsView> элементов управления, <xref:System.Web.UI.WebControls.ObjectDataSource> управления автоматически объединяет все параметры, заданные явным образом в коллекции с параметрами, которые являются Предоставляет элемент управления с привязкой к данным. Это важно, так как элементы управления с привязкой данных всегда следует указывать свои параметры, как <xref:System.String> типы и если сигнатура метода включает числовые или типы даты, необходимо явно включить параметр в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции с правильным типом. В противном случае <xref:System.Web.UI.WebControls.ObjectDataSource> попытке привести параметры в соответствии с типом, который определяется параметрами в коллекции элемента управления. Дополнительные сведения см. в разделе [использование параметров с помощью элемента управления ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Извлекает свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> свойство, которое содержится в <xref:System.Web.UI.WebControls.ObjectDataSourceView> , связанный с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Дополнительные сведения о параметр слияния, время жизни объекта и метод разрешения, см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объект и <xref:System.Web.UI.WebControls.DetailsView> управления для вставки данных. Второй пример кода предоставляет пример реализации `Insert` метод, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объект и <xref:System.Web.UI.WebControls.DetailsView> управления для вставки данных. Изначально <xref:System.Web.UI.WebControls.DetailsView> отображает текстовые поля, в которых можно ввести данные для нового `NorthwindEmployee` записей, а также автоматически созданный **вставить** кнопки. После ввода данных в поля <xref:System.Web.UI.WebControls.DetailsView> управлять, щелкните **вставить** кнопки. <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Свойство определяет, какой метод выполняет операцию вставки.  
  
 Если щелкнуть **вставить** кнопки, операция выполняется с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойство и все параметры, указанные в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции. В этом примере кода указывается один параметр в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции, соответствующий идентификатору "контролер". Это обусловлено тем, даже если идентификатор отображается в <xref:System.Web.UI.WebControls.GridView.Rows%2A> коллекции для <xref:System.Web.UI.WebControls.DetailsView> управление в качестве <xref:System.Web.UI.WebControls.BoundField> объекта, он передается как строка, <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Путем добавления его явно присвоено <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции с <xref:System.Web.UI.WebControls.Parameter.Type%2A> свойство значение <xref:System.TypeCode.Int32> значение, он будет передан с правильно <xref:System.Web.UI.WebControls.ObjectDataSource> методу в качестве <xref:System.Int32>, а не как строку.  
  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> выполняется операция, метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> вызывается свойство. Если <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> метод объекта имеет сигнатуру метода, который включает в себя параметры, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекция должна содержать параметры, имена которых соответствуют параметрам подпись метода для <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> успешного завершения метода.  
  
> [!IMPORTANT]
>  Обязательно проверяйте все значения параметров, полученные от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойство.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]  
  
 В следующем примере кода предоставляет пример реализации `Insert` метод, который используется в предыдущем примере кода. `InsertNewEmployeeWrapper` Добавляется метод `EmployeeLogic` среднего уровня объекта, который был указан в <xref:System.Web.UI.WebControls.ObjectDataSource> Общие сведения о классе, чтобы включить объект упростить работу с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления в сценариях веб-, без значительных перезаписи на реальный экземпляр бизнес-логики.  
  
 Чтобы запустить пример, необходимо иметь `NorthwindEmployee` класс, который был указан в <xref:System.Web.UI.WebControls.ObjectDataSource> Общие сведения о классе. В этом примере описывается только подключения <xref:System.Web.UI.WebControls.ObjectDataSource> для метода бизнес-объектов, который получает данные для новой записи базы данных с помощью параметров. Пример не добавить записи в базу данных, так как `Save` метод `NorthwindEmployee` класс не содержит код для обновления базы данных.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="objectDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Объект, содержащий сохраненные значения состояния представления для элемента управления.</param>
        <summary>Загружает предварительно сохраненное состояние представления элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется главным образом платформы .NET Framework и не предназначен для использования непосредственно из программного кода. Тем не менее разработчики элементов управления можно переопределить этот метод, чтобы указать, как элемент управления сервера восстановления состояния представления. Дополнительные сведения см. в разделе [управлении](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.LoadViewState%2A> Метод используется для загрузки ранее сохраненное состояние представления элемента <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" /> Метод используется преимущественно разработчиками элементов управления при расширении <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> элемента управления.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRowsParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("maximumRows")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя параметра метода извлечения данных бизнес-объекта, который позволяет задать число извлекаемых записей для обеспечения поддержки разбиения по страницам источника данных.</summary>
        <value>Имя параметра <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />, позволяющее задать число извлекаемых записей. По умолчанию используется <c>«maximumRows»</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Свойство используется для поддержки разбиения по страницам источника данных. Сведения о том, как разбиение по страницам поддерживается <xref:System.Web.UI.WebControls.ObjectDataSource> управления, см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
   
  
## Examples  
 В следующих трех примерах веб-страницу, класс фонового кода страницы и класс доступа к данным, позволяющий пользователю выбрать, сколько записей отображаются на странице.  
  
 Веб-страница содержит <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> свойству `true`. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойству присвоено имя метода, который возвращает общее количество записей в запросе. <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Свойство и <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> имеет значение имена параметров, которые используются в методе Select. Страница также содержит <xref:System.Web.UI.WebControls.DropDownList> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> событие <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Код в обработчик наборов <xref:System.Web.UI.WebControls.GridView.PageSize%2A> свойства для выбранного пользователем.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 В третьем примере класс доступа к данным, который получает данные из таблицы Customers. Он содержит метод с именем `GetSubsetOfEmployees`, которое присваивается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Пример также содержит метод с именем `GetEmployeeCount`, которое присваивается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Этот класс использует LINQ для запроса к таблице клиентов. В примере требуется LINQ to SQL, класс, представляющий базу данных "Борей" и таблице Customers. Дополнительные сведения см. в разделе [Как Создание классов LINQ to SQL в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после создания объекта, созданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> события можно вызвать другие методы в бизнес-объекте, задать свойства или выполнить другие действия по инициализации, относящиеся к бизнес-объект, прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource> объект вызывает метод бизнес-объекта данных для выполнения операции с данными . Ссылка на объект осуществляется <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> свойство, которое возвращается командлетом <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> объекта.  
  
 Если метод, который определен для выполнения операции с данными — `static` (`Shared` в Visual Basic), <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> никогда не вызываются события.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед созданием объекта, созданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если метод, который определен для выполнения операции с данными — `static` (`Shared` в Visual Basic), <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> никогда не вызываются события.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Управления автоматически вызывает конструктор по умолчанию для бизнес-объект для создания экземпляра с помощью отражения. Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событий, чтобы явным образом вызвать другой конструктор и установите экземпляр объекта, в результате чего <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> связанного <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> объекта.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объект и <xref:System.Web.UI.WebControls.GridView> управления для отображения информации. Второй пример кода предоставляет среднего уровня бизнес-объект, который используется в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объект и <xref:System.Web.UI.WebControls.GridView> управления для отображения информации. Можно работать с бизнес-объекта, очень дорогому для создания (с точки зрения времени и ресурсов) для каждой операции с данными, который выполняет веб-страницы. Один из способов работы с ресурсоемкий объект может быть один раз создать его экземпляр и кэшировать его для последующих операций вместо создания и удаления для каждой операции с данными.  
  
> [!NOTE]
>  В рабочем приложении может оказаться несколько запросов одновременно, используя тот же экземпляр. Таким образом объект должен быть реализован в виде поточно ориентированные.  
  
 Этот пример кода демонстрирует этот шаблон. Можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событие, чтобы сначала проверьте кэша для объекта и создать экземпляр объекта, только если один уже не кэшируется. Затем обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событие, чтобы кэшировать бизнес-объект для использования в будущем, вместо того чтобы уничтожить его. В этом примере кода <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> присваивается `true` для направления <xref:System.Web.UI.WebControls.ObjectDataSource> не вызывать <xref:System.IDisposable.Dispose%2A> метода объекта.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 В следующем примере кода предоставляет среднего уровня бизнес-объект в примере, в предыдущем примере кода. В примере кода состоит из основных бизнес-объект, определяемый `EmployeeLogic` класс, который является классом с отслеживанием состояния, который инкапсулирует бизнес-логики. Полный рабочий пример необходимо скомпилировать этот код как библиотеку и использовать эти классы со страницы ASP.NET (ASPX-файл).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberSignature Language="F#" Value="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " Usage="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед объявлением объекта, созданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Событие всегда возникает прежде, чем экземпляр бизнес-объекта удаляется. Если бизнес-объект реализует <xref:System.IDisposable> интерфейс, <xref:System.IDisposable.Dispose%2A> метод вызывается после возникновения этого события.  
  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события можно вызвать другие методы в объекте, задать свойства или выполнить очистку, относящиеся к объекту перед уничтожением объекта. Ссылка на объект осуществляется <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> свойство, которое возвращается командлетом <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> объекта.  
  
 При использовании <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления с помощью LINQ to SQL, класс, необходимо отменить удаление класса контекста данных в обработчик <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событий. Этот шаг необходим потому, что LINQ to SQL поддерживает отложенное выполнение, тогда как <xref:System.Web.UI.WebControls.ObjectDataSource> управления пытается удалить контекст данных после операции выбора.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объект и <xref:System.Web.UI.WebControls.GridView> управления для отображения информации. Второй пример кода предоставляет среднего уровня бизнес-объект, который используется в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объект и <xref:System.Web.UI.WebControls.GridView> управления для отображения информации. Можно работать с бизнес-объекта, очень дорогому для создания (с точки зрения времени и ресурсов) для каждой операции с данными, который выполняет веб-страницы. Один из способов работы с ресурсоемкий объект может быть один раз создать его экземпляр и кэшировать его для последующих операций вместо создания и удаления для каждой операции с данными. Этот пример демонстрирует этот подход. Можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событие, чтобы сначала проверьте кэша для объекта, а также создавать экземпляры, только если один уже не кэшируется. Затем обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событие, чтобы кэшировать бизнес-объект для использования в будущем, вместо того чтобы уничтожить его. В этом примере кода <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> присваивается `true` для направления <xref:System.Web.UI.WebControls.ObjectDataSource> не вызывать <xref:System.IDisposable.Dispose%2A> метода объекта.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 В следующем примере кода предоставляет среднего уровня бизнес-объект в примере, в предыдущем примере кода. В примере кода состоит из основных бизнес-объект, определяемый `EmployeeLogic` класс, который является классом с отслеживанием состояния, который инкапсулирует бизнес-логики. Полный рабочий пример необходимо скомпилировать этот код как библиотеку и использовать эти классы со страницы ASP.NET (ASPX-файл).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 В следующем примере показано, как обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событий при использовании <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления с помощью LINQ to SQL, класс.  
  
```vb  
Public Sub ExampleObjectDisposing(ByVal sender As Object, _   
        ByVal e As ObjectDataSourceDisposingEventArgs)  
    e.Cancel = True  
End Sub  
```  
  
```csharp  
public void ExampleObjectDisposing(object sender,   
        ObjectDataSourceDisposingEventArgs e)  
{  
    e.Cancel = true;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку формата, применяемую к именам параметров для исходных значений, передаваемых методу <see langword="Delete" /> или <see langword="Update" />.</summary>
        <value>Строка, представляющая строку формата, применяемую к именам любых параметров <paramref name="oldValues" /> или параметров ключа, передаваемых методу <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> или <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />. По умолчанию используется <c>"{0}"</c>, который означает, что имя параметра является имя поля.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> свойство применяется с первичными ключами, например те, которые идентифицируются с помощью `DataKeyNames` свойство элемента управления с привязкой данных, либо в удаления и обновления сценариев где <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение, а также набор исходные значения передаются в соответствующий метод данных.  
  
 Ниже приведены два типичных сценария, где можно изменить <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> свойство:  
  
-   Может потребоваться изменить свойство, чтобы различать старое и новое значения в обновлениях. Когда <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues> значения параметров для исходных и новых значений, добавленного к <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции. Без строки форматирования два параметра с тем же именем будут создаваться для каждого поля данных. Можно изменить имя параметра исходного значения, можно сравнить данные к исходному источнику данных для обнаружения конфликтов и сравнения значений ключей.  
  
-   Некоторые визуальные конструкторы реализуют определенную схему именования для исходного значения и ключи.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="objectDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные событий.</param>
        <summary>Добавляет обработчик событий <see cref="E:System.Web.UI.Page.LoadComplete" /> на страницу, содержащую элемент управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.ObjectDataSource.OnInit%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" /> метод в производном классе, не забудьте вызвать <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> метода для базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingCulture : System.Web.UI.WebControls.ParsingCulture with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, какие данные языка и региональные параметры используются при преобразовании строковых значений к фактическим типам свойств для построения объекта типа, указанного <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />.</summary>
        <value>Сведения о языке и региональных параметрах. Значение по умолчанию — <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="objectDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет состояние элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <returns>Возвращает текущее состояние представления элемента управления; в противном случае, если с элементом управления не связано ни одно состояние представления, — значение <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; System.Collections.IEnumerable" Usage="objectDataSource.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает данные из базового хранилища данных, вызвав метод, указанный в свойстве <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />, с параметрами, заданными в коллекции <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />.</summary>
        <returns>Список строк данных <see cref="T:System.Collections.IEnumerable" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Указанный метод может быть любая сигнатура, но он должен возвращать или быть производным от одного из типов, перечисленных в следующей таблице для <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления, для успешного вызова.  
  
|Тип возвращаемого значения|Действие|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|<xref:System.Collections.IEnumerable> Возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
|<xref:System.Data.DataTable>|Объект <xref:System.Data.DataView> создается с помощью <xref:System.Data.DataTable> и возвращенный <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
|<xref:System.Data.DataView>|<xref:System.Data.DataView> Возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
|<xref:System.Data.DataSet>|Первый <xref:System.Data.DataTable> из <xref:System.Data.DataSet> извлекается и <xref:System.Data.DataView> создается и возвращается путем <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
|<xref:System.Object>|Объект инкапсулируется в одноэлементном <xref:System.Collections.IEnumerable> коллекции и возвращенный <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
  
 Метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство может быть методом экземпляра или `static` (`Shared` в Visual Basic) метод. Если он является методом экземпляра, бизнес-объект создается и уничтожается каждый раз, метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> вызывается свойство, за исключением того, что тот же экземпляр используется для вызова метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства и метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойство. <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Возвращает метод <xref:System.Collections.IEnumerable> интерфейс. Тем не менее, чтобы включить кэширование и сценариев фильтрации, возвращаемое значение должно быть <xref:System.Data.DataSet> объекта. Хотя <xref:System.Data.DataSet> класс не реализует <xref:System.Collections.IEnumerable> интерфейс, <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления автоматически извлекает значение по умолчанию <xref:System.Data.DataView> управления, который реализует <xref:System.Collections.IEnumerable>.  
  
 Прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> выполняется операция, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> событий. Можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> событие для проверки значений параметров и всевозможной перед <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> операции. Для выполнения операции по извлечению данных, <xref:System.Web.UI.WebControls.ObjectDataSourceView> объект использует отражение для создания экземпляра объекта, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство. Затем вызывается метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства, используя все связанные <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> свойства. После <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> завершения операции <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> событий. Можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> событий любые возвращаемые значения выходных параметров и исключения, для анализа и выполнять любые операции постобработки.  
  
 Если <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> возвращает <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, или <xref:System.Data.DataView> объекта и кэширование включено, <xref:System.Web.UI.WebControls.ObjectDataSource> извлекает данные из и сохраняет данные в кэш во время <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> операции. Создания кэша, отклоненных или обновленные на поведение кэширования, которое определяется сочетанием основе <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойства.  
  
 Если <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> возвращает <xref:System.Data.DataSet> или <xref:System.Data.DataTable> объекта и <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство задано, оно обрабатывается с любым предоставленный <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> свойства и итоговый фильтр применяется к списку данных во время <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> операции.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Метод делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> метод <xref:System.Web.UI.WebControls.ObjectDataSourceView> , связанный с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Дополнительные сведения о параметр слияния, время жизни объекта и метод разрешения, см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>.  
  
## <a name="data-bound-controls"></a>Элементы управления с привязкой данных  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource> связан элемент управления с привязкой к данным элементом управления, такие как <xref:System.Web.UI.WebControls.GridView> элемента управления, нет необходимости вызывать <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод из кода страницы. <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Метод вызывается непосредственно с помощью элемента управления с привязкой к данным, вместо этого.  
  
   
  
## Examples  
 Пример кода см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCountMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя метода или функции, вызываемых элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для извлечения количества строк.</summary>
        <value>Строка, представляющая имя метода или функции, используемых объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для извлечения количества строк. Метод должен возвращать целое число (<see cref="T:System.Int32" />). Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойство идентифицирует метод бизнес-объекта, который позволяет получить общее число строк, поддержку разбиения по страницам источника данных. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойство вычисляется только в том случае, если <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> свойству `true`.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Сведения о том, как разбиение по страницам поддерживается <xref:System.Web.UI.WebControls.ObjectDataSource> управления, см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
   
  
## Examples  
 В следующих трех примерах веб-страницу, класс фонового кода страницы и класс доступа к данным, позволяющий пользователю выбрать, сколько записей отображаются на странице.  
  
 Веб-страница содержит <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> свойству `true`. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойству присвоено имя метода, который возвращает общее количество записей в запросе. <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Свойство и <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> имеет значение имена параметров, которые используются в методе Select. Страница также содержит <xref:System.Web.UI.WebControls.DropDownList> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> событие <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Код в обработчик наборов <xref:System.Web.UI.WebControls.GridView.PageSize%2A> свойства для выбранного пользователем.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 В третьем примере класс доступа к данным, который получает данные из таблицы Customers. Он содержит метод с именем `GetSubsetOfEmployees`, которое присваивается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Пример также содержит метод с именем `GetEmployeeCount`, которое присваивается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Этот класс использует LINQ для запроса к таблице клиентов. В примере требуется LINQ to SQL, класс, представляющий базу данных "Борей" и таблице Customers. Дополнительные сведения см. в разделе [Как Создание классов LINQ to SQL в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении операции <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> событий проверьте значения, возвращаемого значения или выходные параметры, или требуется определить, возникло ли исключение после <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> завершения операции. Возвращаемое значение, выходные параметры и свойства обработки исключений доступны из <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Ниже приведены три примеры веб-страницу, класс фонового кода страницы и класс доступа к данным, которые пользователи могут получить и обновляют записи в таблицу Employees базы данных "Борей".  
  
 В первом примере веб-страницы, который содержит два <xref:System.Web.UI.WebControls.ObjectDataSource> элементов управления, <xref:System.Web.UI.WebControls.DropDownList> элемента управления и <xref:System.Web.UI.WebControls.DetailsView> элемента управления. Первый <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DropDownList> управления используются для получения и отображения имен сотрудников из базы данных. Второй <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DetailsView> управления используются для получения, отображения и изменения данных записи, выбранной пользователем.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 Во втором примере показаны обработчики для <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> и <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> события. <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Обработчик событий сериализует объект, содержащий данные, извлеченные из таблицы Employee. Сериализованный объект хранится в состоянии представления. <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Обработчик событий выполняет десериализацию объекта в состоянии представления, который содержит исходные данные для записи данных, которая обновляется. Объект, содержащий исходные данные, передается как параметр методу Update. Исходные данные должны передаваться в базу данных, чтобы его можно использовать для проверки, были ли данные изменены другим процессом.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 В третьем примере класс доступа к данным, который взаимодействует с базой данных "Борей". Класс использует LINQ для запроса и обновления таблицы Employees. В примере требуется LINQ to SQL, класс, представляющий таблицу Employees и базы данных "Борей". Дополнительные сведения см. в разделе [Как Создание классов LINQ to SQL в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> событию для выполнения дополнительной инициализации, характерное для приложения, для проверки значений параметров, или измените значения параметров перед <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления выполняет операцию по извлечению данных. Эти параметры доступны как <xref:System.Collections.IDictionary> коллекции, к которому обращаются <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> свойство, которое возвращается командлетом <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> объекта.  
  
 Это событие может генерироваться дважды для одного вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод, если <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойству. <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A> Свойство <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs> объект используется для определения того, если вызван для получения данных или извлекать значение счетчика.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя метода или функции, вызываемых элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для извлечения данных.</summary>
        <value>Строка, представляющая имя метода или функции, используемых элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для извлечения данных. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Указанный метод может иметь любой сигнатуру метода, но он должен возвращать один из типов, приведенных в следующей таблице для <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления, для успешного вызова.  
  
|Возвращаемый тип|Действие|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|<xref:System.Collections.IEnumerable> Возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
|<xref:System.Data.DataTable>|Объект <xref:System.Data.DataView> создается с помощью <xref:System.Data.DataTable> и возвращенный <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
|<xref:System.Data.DataView>|Объект <xref:System.Data.DataView> возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
|<xref:System.Data.DataSet>|Первый <xref:System.Data.DataTable> из <xref:System.Data.DataSet> извлекается и <xref:System.Data.DataView> создается и возвращается путем <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
|<xref:System.Object>|Объект инкапсулируется в одноэлементном <xref:System.Collections.IEnumerable> коллекции и возвращенный <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 При использовании <xref:System.Web.UI.WebControls.ObjectDataSource> класса для удаления или обновления данных, убедитесь, что для имен параметров <xref:System.Web.UI.WebControls.ObjectDataSource> контролировать <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции или <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции совпадают с именами столбцов, которые возвращаются, метод select .  
  
## <a name="object-lifetime"></a>Время жизни объекта  
 Метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство может быть методом экземпляра или `static` (`Shared` в Visual Basic) метод. Если он является методом экземпляра, бизнес-объект создается и уничтожается каждый раз, метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> вызывается свойство. Можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событий для работы с бизнес-объект перед вызовом метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> вызывается свойство. Также можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событие, возникающее после метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> вызывается свойство. Если бизнес-объект реализует <xref:System.IDisposable> интерфейс, <xref:System.IDisposable.Dispose%2A> метод вызывается перед уничтожением объекта. Если метод является `static` (`Shared` в Visual Basic), бизнес-объект еще не создан, и не может обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события.  
  
## <a name="parameter-merging"></a>Слияние параметров  
 Параметры добавляются <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекции из следующих источников:  
  
-   Декларативно из `SelectParameters` элемент.  
  
-   Программно из `Selecting` метод.  
  
 Во-первых, перечислены в `SelectParameters` добавляются. Во-вторых, программно добавляются и удаляются в параметры <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> событие, возникающее перед <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> выполнением метода. Метод разрешается после слияния параметров. Разрешение метода рассматривается в следующем разделе.  
  
> [!IMPORTANT]
>  Обязательно проверяйте все значения параметров, полученные от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство.  
  
## <a name="method-resolution"></a>Метод разрешения  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> вызове метода, поля данных из элемента управления с привязкой к данным, параметры, созданные декларативно в `SelectParameters` элемент и параметры, которые были добавлены в <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> обработчик событий будут объединены. (Дополнительные сведения см. в предыдущем разделе.) <xref:System.Web.UI.WebControls.ObjectDataSource> Управления затем пытается найти вызываемый метод. Во-первых, он ищет один или несколько методов с именем, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Если совпадений не найдено, <xref:System.InvalidOperationException> возникает исключение. Если соответствие найдено, он будет искать совпадение имен. Например, предположим, что тип, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство имеет два метода с именем `SelectARecord`. Один `SelectARecord` имеет один параметр `ID`, а другой `SelectARecord` имеет два параметра `Name` и `Number`. Если <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекция имеет только один параметр с именем `ID`, `SelectARecord` метод с только что `ID` параметр называется. Тип параметра не проверяется при разрешении методов. Порядок параметров не имеет значения.  
  
 Если <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство задано, метод разрешается по-разному. <xref:System.Web.UI.WebControls.ObjectDataSource> Ищет метод с именем, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство, которое принимает один параметр типа, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. В этом случае имя параметра не имеет значения.  
  
   
  
## Examples  
 В следующем примере кода показано, как <xref:System.Web.UI.WebControls.GridView> элемент управления может отображать данные с помощью <xref:System.Web.UI.WebControls.ObjectDataSource> управления на странице веб-форм. <xref:System.Web.UI.WebControls.ObjectDataSource> Идентифицирует класс полное или сокращенное имя с его <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство и метод, который вызывается для получения данных с помощью его <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Во время выполнения объект создается и вызывается метод, с помощью отражения. <xref:System.Web.UI.WebControls.GridView> Перечисление управления <xref:System.Collections.IEnumerable> коллекция, возвращаемая методом, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства и отображает данные.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">С помощью Entity Framework и элемент управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию параметров, используемых методом, заданным свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</summary>
        <value>Коллекция параметров, используемых методом, заданным свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> Свойство получает <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 После добавления параметров к <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекции декларативно с помощью `SelectParameters` элемент или программно в обработчике <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> событий. Во время выполнения, перечислены в `SelectParameters` элемент сначала добавляются в коллекцию. Затем добавляются или удаляются с помощью обработчика для параметров в коллекции <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> событий. <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> Событие, прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> выполнением метода.  
  
 Прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> выполняется метод, имена и типы параметров, которые содержатся в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекции должна соответствовать сигнатуре метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Например, если выбрать метод с именем `GetEmployeesByStateAndAge` принимает `string` и целое число в качестве параметров <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекция должна содержать два параметра. Первым параметром должно разрешаться как строки и второго параметра должно разрешаться как целое число. Оба параметра можно указать в разметке в `SelectParameters` элемент. Кроме того, они могут быть могут добавляться в <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> обработчик событий, или один параметр можно добавить в разметке, и другое можно добавить программно.  
  
 Дополнительные сведения см. в разделе [использование параметров с помощью элемента управления ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4) и <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod> свойство.  
  
> [!IMPORTANT]
>  В коде для <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> обработчик событий или в методе, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство, убедитесь, что проверить все значения параметров, полученных от клиента.  
  
   
  
## Examples  
 В следующем примере кода показано, как получить записи данных с помощью <xref:System.Web.UI.WebControls.ObjectDataSource> управления и отобразит в <xref:System.Web.UI.WebControls.DetailsView> элемента управления. <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления получает определенных записей путем вызова `GetEmployee` метод `EmployeeLogic` класса. `GetEmployee` Метод требует параметр идентификатора сотрудника. <xref:System.Web.UI.WebControls.ObjectDataSource> Управления использует `QueryStringParameter` элемент в разметке для создания <xref:System.Web.UI.WebControls.QueryStringParameter> объект, который будет извлекать значение параметра указанную строку запроса из URL-адрес и передать его в `GetEmployee` метод.  
  
 Другие классы параметров можно использовать для извлечения значений из других источников, таких как свойства элемента управления, поля формы, файлы cookie, данные профиля ASP.NET или состояние сеанса. Можно также использовать объект параметра, определенного в разметке для передачи в метод select жестко запрограммированных значений. Дополнительные сведения о классах параметров, доступных см. в разделе [использование параметров с элементами управления источником данных для фильтрации](https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)).  
  
 Чтобы выполнить этот пример, необходимо следующее:  
  
-   Веб-сайт, который содержит строку подключения с именем `NorthwindConnection` , подключается к базе данных Northwind Traders. Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource> Общие сведения о классе.  
  
-   `EmployeeLogic` Класс, который отображается как один из примеров кода для <xref:System.Web.UI.WebControls.ObjectDataSource> Общие сведения о классе. Файл класса должен быть расположен в папке App_Code.  
  
-   В примере кода запускается как страницы ASPX. При запросе страницы без параметра строки запроса, отображается сообщение об ошибке. При запросе страницы с помощью строки запроса, например `?empid=1` после имени файла .aspx, вы увидите сведения для запрошенного сотрудника.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя бизнес-объекта, который позволяет параметру <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> задать выражение сортировки для обеспечения поддержки сортировки источника данных.</summary>
        <value>Имя параметра метода, позволяющее задать параметр, используемый для сортировки данных. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> Свойство используется для поддержки сортировки источника данных. Когда <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> установлено свойство <xref:System.Web.UI.DataSourceSelectArguments> объекта и передается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод, <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> значение определяет имя параметра <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> метода бизнес-объектов, в соответствии с которым отсортированы данные.  
  
 Если <xref:System.Web.UI.WebControls.ObjectDataSource> связанный с элементом управления с привязкой к данным, значения, которые передаются необходимо выполнить этот параметр, в виде значений полей через запятую, за которым следует `"ASC"` или `"DESC"`. Например, значение для сортировки по возрастанию на `Name` бы `"Name ASC"`.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как реализовать тип, поддерживающий сортировку. Во втором примере кода показано, как реализовать выражение сортировки.  
  
 В следующем примере кода показано, как реализовать тип, поддерживающий сортировку. `SelectMethod` Из `SortingData` класса принимает параметр, `sortExpression`. Строка, которая передается `SelectMethod` используется для <xref:System.Data.DataView.Sort%2A> свойство <xref:System.Data.DataView> объект, возвращаемый `SelectMethod`.  
  
 [!code-csharp[ObjectDataSourceSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingData.cs#1)]
 [!code-vb[ObjectDataSourceSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingData.vb#1)]  
  
 В следующем примере кода показано, как реализовать выражение сортировки. Код в веб-страницы, создает экземпляр <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Свойству `SortingData` и <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> свойству `sortExpression`. <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> Свойство <xref:System.Web.UI.WebControls.GridView> управления `true`. Когда пользователь щелкает **сортировки** кнопка, имя поля `Name` или `Number`, передается `SelectMethod` параметром сортировки.  
  
 [!code-aspx-csharp[ObjectDataSourceSorting#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingDataExample.aspx#2)]
 [!code-aspx-vb[ObjectDataSourceSorting#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingDataExampleVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает разделенную точками с запятой строку, которая показывает, какие базы данных и таблицы используются для зависимости кэша Microsoft SQL Server.</summary>
        <value>Строка, которая показывает, какие базы данных и таблицы используются для зависимости кэша Microsoft SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает политики срока действия необязательно, основанный на <xref:System.Web.Caching.SqlCacheDependency> объект для кэширования данных (служба должна быть настроена для сервера базы данных).  
  
 SQL Server поддерживает два механизма недействительности кэша: опрос и уведомление. Каждый из этих механизмов имеет свой синтаксис для <xref:System.Web.Caching.SqlCacheDependency> объекта.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Поддерживает только опроса. <xref:System.Web.Caching.SqlCacheDependency> Строка используется для создания <xref:System.Data.SqlClient.SqlDependency> объект, который передается <xref:System.Data.Common.DbCommand> конструктор перед <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> выполнения метода. <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> Строка идентифицирует баз данных и таблиц в соответствии с тот же формат, используемый `@ Page` после директивы, где первая часть строки является строка подключения к базе данных SQL Server, с разделителем запятой и, наконец, имя таблицы базы данных (например, `"connectionstring1:table1"`). Если <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> свойство зависит от более одной таблицы, соединения строки и пар табличных имен разделяются точками с запятой (например, `"connectionstring1:table1";connectionstring2:table2"`).  
  
 Для поддержки уведомлений, необходимо написать логику кэша в реализации вашей <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства и обрабатывать конструкции <xref:System.Web.Caching.SqlCacheDependency> объекта в коде.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как создать зависимость кэша SQL Server и установить <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSource> объекта. Во втором примере кода демонстрируется реализация метода оболочки, возвращающий <xref:System.Data.DataSet> объект для включения кэширования и фильтрации с <xref:System.Web.UI.WebControls.ObjectDataSource> объекта.  
  
 В следующем примере кода показано, как создать зависимость кэша SQL Server и установить <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В этом примере база данных опрашивается каждые 120 секунд. Если данные в Northwind Traders сотрудников таблицы изменений во время этого времени, любые данные, которые помещены в кэш <xref:System.Web.UI.WebControls.ObjectDataSource> управления и отображается с <xref:System.Web.UI.WebControls.GridView> истек срок действия элемента управления, а новый набор данных извлекаются при следующем запросе для страницы.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/CS/objds7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/VB/objds7vb.aspx#1)]  
  
 В следующем примере кода показано, как реализовать метод программы-оболочки, возвращающий <xref:System.Data.DataSet> объект для включения кэширования и фильтрации с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В базовой реализации `EmployeeLogic` класс, `GetAllEmployees` возвращает метод <xref:System.Collections.ArrayList> объекта. Вместо рефакторинг объект полностью для работы с <xref:System.Web.UI.WebControls.ObjectDataSource> на страницу Web Forms с именем метода оболочки `GetAllEmployeesAsDataSet` добавляется, возвращающий набор `NorthwindEmployee` данные в виде <xref:System.Data.DataSet>.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndexParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("startRowIndex")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя параметра метода извлечения данных, который позволяет задать значение идентификатора первой записи для обеспечения поддержки разбиения по страницам источника данных.</summary>
        <value>Имя параметра метода бизнес-объекта, позволяющее задать первую извлекаемую запись. Параметр должен возвращать целую величину. По умолчанию используется <c>«startRowIndex»</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Свойство используется для поддержки разбиения по страницам источника данных. Сведения о том, как разбиение по страницам поддерживается <xref:System.Web.UI.WebControls.ObjectDataSource> управления, см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
   
  
## Examples  
 В следующих трех примерах веб-страницу, класс фонового кода страницы и класс доступа к данным, позволяющий пользователю выбрать, сколько записей отображаются на странице.  
  
 Веб-страница содержит <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> свойству `true`. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойству присвоено имя метода, который возвращает общее количество записей в запросе. <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Свойство и <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> имеет значение имена параметров, которые используются в методе Select. Страница также содержит <xref:System.Web.UI.WebControls.DropDownList> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> событие <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Код в обработчик наборов <xref:System.Web.UI.WebControls.GridView.PageSize%2A> свойства для выбранного пользователем.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 В третьем примере класс доступа к данным, который получает данные из таблицы Customers. Он содержит метод с именем `GetSubsetOfEmployees`, которое присваивается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Пример также содержит метод с именем `GetEmployeeCount`, которое присваивается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Этот класс использует LINQ для запроса к таблице клиентов. В примере требуется LINQ to SQL, класс, представляющий базу данных "Борей" и таблице Customers. Дополнительные сведения см. в разделе [Как Создание классов LINQ to SQL в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="objectDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отслеживает изменения состояния представления элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для сохранения в объекте <see cref="T:System.Web.UI.StateBag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.TrackViewState%2A> Метод переопределяется, чтобы пометить начальную точку для отслеживания и сохранения изменений в элементе управления как часть состояния представления для объекта.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает класс, представляемый объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <value>Полное или сокращенное имя класса, обозначающее тип объекта, представляемого классом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для создания экземпляра объекта, который <xref:System.Web.UI.WebControls.ObjectDataSource> привязан элемент управления, элемент управления использует отражение для загрузки типа, который определяется по имени типа во время выполнения. Таким образом, значение <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство может быть сокращенное имя типа для кода, который находится в каталогах Bin или App_Code или полное имя типа для кода, который регистрируется в глобальном кэше сборок. Если вы используете в глобальном кэше сборок, необходимо добавить соответствующую ссылку на `assemblies` раздел файла Machine.config или Web.config.  
  
 Тип должен иметь конструктор по умолчанию, если вы обрабатываете <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событий самостоятельно создать его экземпляр. Для каждого вызова создается экземпляр типа <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> методы, если методы типа являются методы членов. Экземпляр не создается, если методы являются `static` (`Shared` в Visual Basic). Если тип реализует <xref:System.IDisposable> интерфейс, <xref:System.IDisposable.Dispose%2A> метод вызывается перед уничтожением объекта.  
  
   
  
## Examples  
 В следующем примере кода показано, как <xref:System.Web.UI.WebControls.GridView> элемент управления может отображать данные с помощью <xref:System.Web.UI.WebControls.ObjectDataSource> управления на странице веб-форм. <xref:System.Web.UI.WebControls.ObjectDataSource> Идентифицирует класс полное или сокращенное имя с его <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство и метод, который вызывается для получения данных с помощью его <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Во время выполнения объект создается и вызывается метод, с помощью отражения. <xref:System.Web.UI.WebControls.GridView> Перечисление управления <xref:System.Collections.IEnumerable> коллекции, который возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства и отображает данные.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 В следующем примере показано класса <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> ссылается значение свойства.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="objectDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет операцию обновления путем вызова метода, заданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />, и параметры, содержащиеся в коллекции <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />.</summary>
        <returns>Значение, представляющее число строк, обновленных в базовом хранилище данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предполагается, что бизнес-объект, обновление данных по одной записи за раз, а не в пакете.  
  
 Прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> выполняется операция, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> событий. Можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> событие для проверки значений параметров и всевозможной перед <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> операции. Для выполнения операции обновления <xref:System.Web.UI.WebControls.ObjectDataSourceView> объект использует отражение для создания экземпляра объекта, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство. Затем вызывается метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойства, используя все связанные <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> свойства. После <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> завершения операции <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> событий. Можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> событий любые возвращаемые значения выходных параметров и исключения, для анализа и выполнять любые операции постобработки.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Метод делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> метод <xref:System.Web.UI.WebControls.ObjectDataSourceView> , связанный с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Дополнительные сведения о параметр слияния, время жизни объекта и метод разрешения, см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.  
  
> [!IMPORTANT]
>  Обязательно проверяйте все значения параметров, полученные от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство.  
  
## <a name="data-bound-controls"></a>Элементы управления с привязкой данных  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource> связан элемент управления с привязкой к данным элементом управления, такие как <xref:System.Web.UI.WebControls.GridView> элемента управления, нет необходимости вызывать <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> метод из кода страницы. <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Метод вызывается непосредственно с помощью элемента управления с привязкой к данным, вместо этого.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DropDownList> управления <xref:System.Web.UI.WebControls.TextBox> элементов управления, а также несколько <xref:System.Web.UI.WebControls.ObjectDataSource> объекты для обновления данных. Второй пример показывает код `EmployeeLogic` класс, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DropDownList> управления <xref:System.Web.UI.WebControls.TextBox> элементов управления, а также несколько <xref:System.Web.UI.WebControls.ObjectDataSource> элементы управления для обновления данных. <xref:System.Web.UI.WebControls.DropDownList> Отображает имя сотрудника в Northwind, хотя <xref:System.Web.UI.WebControls.TextBox> элементы управления позволяют вводить и обновлять сведения об адресе. Так как <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекция содержит <xref:System.Web.UI.WebControls.ControlParameter> объекта, привязанного к выбранному значению из <xref:System.Web.UI.WebControls.DropDownList>, кнопка, которая вызывает <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> включена только в том случае, когда сотрудник будет выбрана операция.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 В следующем коде показано в примере `EmployeeLogic` класс, используемый в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">С помощью Entity Framework и элемент управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> событий проверьте значения, возвращаемого значения или выходные параметры, или требуется определить, возникло ли исключение после <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> завершения операции. Возвращаемое значение, выходные параметры и свойства обработки исключений доступны из <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">С помощью Entity Framework и элемент управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя метода или функции, вызываемого элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для обновления данных.</summary>
        <value>Строка, представляющая имя метода или функции, используемых объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для обновления данных. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Управления предполагает, что метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство выполняет обновления одной за раз, а не в пакете.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Убедитесь, что для имен параметров <xref:System.Web.UI.WebControls.ObjectDataSource> контролировать <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции совпадают с именами столбцов, возвращаемых функцией метода выбора.  
  
## <a name="object-lifetime"></a>Время жизни объекта  
 Метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство может быть методом экземпляра или `static` (`Shared` в Visual Basic) метод. Если он является методом экземпляра, бизнес-объект создается и уничтожается каждый раз, метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> вызывается свойство. Можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событий для работы с бизнес-объект перед вызовом метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> вызывается свойство. Также можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событие, возникающее после метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> вызывается свойство. Если бизнес-объект реализует <xref:System.IDisposable> интерфейс, <xref:System.IDisposable.Dispose%2A> метод вызывается перед уничтожением объекта. Если метод является `static` (`Shared` в Visual Basic), бизнес-объект еще не создан, и не может обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события.  
  
## <a name="parameter-merging"></a>Слияние параметров  
 Параметры добавляются <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции из трех источников:  
  
-   Из элемента управления с привязкой к данным, во время выполнения.  
  
-   Из `UpdateParameters` элемент, декларативно.  
  
-   Из <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> обработчик событий, программными средствами.  
  
 Во-первых, все параметры, которые создаются из элементов управления с привязкой данных добавляются к <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции. Например если <xref:System.Web.UI.WebControls.ObjectDataSource> привязан элемент управления <xref:System.Web.UI.WebControls.GridView> элемента управления, в которой присутствуют столбцы `Name` и `Number`, параметры для `Name` и `Number` добавляются в коллекцию. Точное имя параметра зависит от <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойство. Тип данных из этих параметров является `string`. Далее, параметры, которые перечислены в `UpdateParameters` добавляются. Если параметр в `UpdateParameters` найти элемент с именем параметра, которое уже находится в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекция, существующий параметр изменяется в соответствии с параметром, который указан в `UpdateParameters` элемент. Как правило используется для изменения типа данных в параметре. Наконец, можно программно добавлять и удалять параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> событие, возникающее перед <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> выполнением метода. Метод разрешается после слияния параметров. Разрешение метода рассматривается в следующем разделе.  
  
> [!IMPORTANT]
>  Обязательно проверяйте все значения параметров, полученные от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство.  
  
## <a name="method-resolution"></a>Метод разрешения  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> вызове метода, поля данных из элемента управления с привязкой к данным, параметры, созданные декларативно в `UpdateParameters` элемент и параметры, которые были добавлены в <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> обработчик событий будут объединены. (Дополнительные сведения см. в предыдущем разделе.) <xref:System.Web.UI.WebControls.ObjectDataSource> Управления затем пытается найти вызываемый метод. Во-первых, он ищет один или несколько методов с именем, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство. Если совпадений не найдено, <xref:System.InvalidOperationException> возникает исключение. Если соответствие найдено, он будет искать совпадение имен. Например, предположим, что тип, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство имеет два метода с именем `UpdateARecord`. Один `UpdateARecord` имеет один параметр `ID`, а другой `UpdateARecord` имеет два параметра `Name` и `Number`. Если <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекция имеет только один параметр с именем `ID`, `UpdateARecord` метод с только что `ID` параметр называется. Тип параметра не проверяется при разрешении методов. Порядок параметров не имеет значения.  
  
 Если <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство задано, метод разрешается по-разному. <xref:System.Web.UI.WebControls.ObjectDataSource> Ищет метод с именем, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство, которое принимает один параметр типа, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. В этом случае имя параметра не имеет значения.  
  
   
  
## Examples  
 Ниже приведены три примеры веб-страницу, класс фонового кода страницы и класс доступа к данным, которые пользователи могут получить и обновляют записи в таблицу Employees базы данных "Борей".  
  
 В первом примере веб-страницы, который содержит два <xref:System.Web.UI.WebControls.ObjectDataSource> элементов управления, <xref:System.Web.UI.WebControls.DropDownList> элемента управления и <xref:System.Web.UI.WebControls.DetailsView> элемента управления. Первый <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DropDownList> управления используются для получения и отображения имен сотрудников из базы данных. Второй <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DetailsView> управления используются для получения, отображения и изменения данных записи, выбранной пользователем.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 Во втором примере показаны обработчики для <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> и <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> события. <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Обработчик событий сериализует объект, содержащий данные, извлеченные из таблицы Employee. Сериализованный объект хранится в состоянии представления. <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Обработчик событий выполняет десериализацию объекта в состоянии представления, который содержит исходные данные для записи данных, которая обновляется. Объект, содержащий исходные данные, передается как параметр методу Update. Исходные данные должны передаваться в базу данных, чтобы его можно использовать для проверки, были ли данные изменены другим процессом.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 В третьем примере класс доступа к данным, который взаимодействует с базой данных "Борей". Класс использует LINQ для запроса и обновления таблицы Employees. В примере требуется LINQ to SQL, класс, представляющий таблицу Employees и базы данных "Борей". Дополнительные сведения см. в разделе [Как Создание классов LINQ to SQL в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">С помощью Entity Framework и элемент управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию параметров, содержащую параметры, используемые методом, заданным свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащий параметры, используемые методом, заданным свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имена и типы параметров, которые содержатся в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции должны совпадать имена и типы параметров в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> сигнатуру метода. Имена параметров зависят от <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойство на них с учетом регистра. Параметры в коллекции, зависит от данных в элемент управления с привязкой к данным, параметров, указанных декларативно и параметры, которые добавляются программно. Дополнительные сведения см. в разделе «Параметр слияния» <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> и [использование параметров с помощью элемента управления ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Извлекает свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> свойство, которое содержится в <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Дополнительные сведения о параметр слияния, время жизни объекта и метод разрешения, см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.  
  
> [!IMPORTANT]
>  Обязательно проверяйте все значения параметров, полученные от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DropDownList> управления <xref:System.Web.UI.WebControls.TextBox> элементов управления, а также несколько <xref:System.Web.UI.WebControls.ObjectDataSource> объекты для обновления данных. Второй пример показывает код `EmployeeLogic` класс, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DropDownList> управления <xref:System.Web.UI.WebControls.TextBox> элементов управления, а также несколько <xref:System.Web.UI.WebControls.ObjectDataSource> элементы управления для обновления данных. <xref:System.Web.UI.WebControls.DropDownList> Отображает имя сотрудника в Northwind, хотя <xref:System.Web.UI.WebControls.TextBox> элементы управления позволяют вводить и обновлять сведения об адресе. Так как <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекция содержит <xref:System.Web.UI.WebControls.ControlParameter> , привязанный к значению выбранного <xref:System.Web.UI.WebControls.DropDownList>, кнопка, которая вызывает <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> включена только в том случае, когда сотрудник будет выбрана операция.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 В следующем коде показано в примере `EmployeeLogic` класс, используемый в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> событию для выполнения дополнительной инициализации, характерное для приложения, для проверки значений параметров, или измените значения параметров перед <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления выполняет операцию обновления. Эти параметры доступны как <xref:System.Collections.IDictionary> коллекции, к которому обращаются <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> свойство, которое возвращается командлетом <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> объекта.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Ниже приведены три примеры веб-страницу, класс фонового кода страницы и класс доступа к данным, которые пользователи могут получить и обновляют записи в таблицу Employees базы данных "Борей".  
  
 В первом примере веб-страницы, который содержит два <xref:System.Web.UI.WebControls.ObjectDataSource> элементов управления, <xref:System.Web.UI.WebControls.DropDownList> элемента управления и <xref:System.Web.UI.WebControls.DetailsView> элемента управления. Первый <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DropDownList> управления используются для получения и отображения имен сотрудников из базы данных. Второй <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DetailsView> управления используются для получения, отображения и изменения данных записи, выбранной пользователем.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 Во втором примере показаны обработчики для <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> и <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> события. <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Обработчик событий сериализует объект, содержащий данные, извлеченные из таблицы Employee. Сериализованный объект хранится в состоянии представления. <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Обработчик событий выполняет десериализацию объекта в состоянии представления, который содержит исходные данные для записи данных, которая обновляется. Объект, содержащий исходные данные, передается как параметр методу Update. Исходные данные должны передаваться в базу данных, чтобы его можно использовать для проверки, были ли данные изменены другим процессом.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 В третьем примере класс доступа к данным, который взаимодействует с базой данных "Борей". Класс использует LINQ для запроса и обновления таблицы Employees. В примере требуется LINQ to SQL, класс, представляющий таблицу Employees и базы данных "Борей". Дополнительные сведения см. в разделе [Как Создание классов LINQ to SQL в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
  </Members>
</Type>