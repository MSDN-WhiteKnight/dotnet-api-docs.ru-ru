<Type Name="EmbeddedMailObject" FullName="System.Web.UI.WebControls.EmbeddedMailObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="97029acdea85cfc80174429744e599c46a9ea1e1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55404574" /></Metadata><TypeSignature Language="C#" Value="public sealed class EmbeddedMailObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmbeddedMailObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EmbeddedMailObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmbeddedMailObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmbeddedMailObject sealed" />
  <TypeSignature Language="F#" Value="type EmbeddedMailObject = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет объект для внедрения в сообщение электронной почты, сконструированного с помощью класса <see cref="T:System.Web.UI.WebControls.MailDefinition" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject> Представляет объект для внедрения в сообщение электронной почты. Эти внедренные элементы могут быть файлы изображений, такие как эмблема компании. Каждый внедренный объект задается идентификатор и путь.  
  
 Чтобы убедиться, что внедренный объект будет правильно отображен в файле сообщения электронной почты, должны быть выполнены следующие условия:  
  
-   Сообщение имеет формат HTML.  
  
-   Элемент является файлом изображения (.jpg, .gif, .bmp и т. д.).  
  
-   Текст в формате HTML-файл, указанный в <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> свойство содержит ссылку на файл изображения, используя следующий синтаксис:  
  
    ```  
    <img src="cid:identifier" alt="Alternate Text" />.  
    ```  
  
 Если <xref:System.Web.UI.WebControls.EmbeddedMailObject> добавляется в сообщение электронной почты, а не удовлетворяет всем требованиям, указанным ранее, он скорее отображается как вложение в сообщение электронной почты. Если элемент ссылается на идентификатор сообщения электронной почты, но не включены в качестве внедренного элемента, она отображается как потерянного вложения, при просмотре электронной почты.  
  
 <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> Хранит коллекцию <xref:System.Web.UI.WebControls.EmbeddedMailObject> объектов одного почтового сообщения. <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> Используется <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> свойство <xref:System.Web.UI.WebControls.MailDefinition> объект для создания сообщения электронной почты.  
  
 Сообщения электронной почты, разрешить внедренные объекты могут быть изменены в следующих веб-элементы управления, установив их <xref:System.Web.UI.WebControls.MailDefinition> свойства декларативно:  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard>  
  
-   <xref:System.Web.UI.WebControls.ChangePassword>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery>  
  
> [!NOTE]
>  Значения в <xref:System.Web.UI.WebControls.EmbeddedMailObject> и <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> объекты хранятся не в состоянии представления. Это обеспечивает защиту от атак злоумышленников, обнаружение сведений о пути для вашего сервера.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется страница ASP.NET, которая использует <xref:System.Web.UI.WebControls.ChangePassword> веб-элемент управления и включает в себя обработчик событий для <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> событие с именем `SendingMail`. В примере кода предполагается, что ASP.NET веб-сайт настроен на использование членства ASP.NET и проверки подлинности форм и что был создан пользователь, имя и пароль вы должны знать. Дополнительные сведения см. в разделе [Как Реализация простых форм проверки подлинности](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Если смена пароля прошла успешно, код в `SendingMail` обработчик событий предпринимает попытку отправки сообщения электронной почты пользователю, чтобы подтвердить изменение. SMTP должен быть уже настроен на сервере в порядке для работы этого примера кода. Сведения о настройке SMTP-сервера, см. в разделе [NIB: Как выполнить  Установить и настроить виртуальные серверы SMTP в IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Для целей этого примера нет необходимости для настройки SMTP-сервера; Пример предназначен для проверки на сбой отправки сообщения электронной почты.  
  
 Если почтовый сервер настроен неправильно или другой ошибки и не удается отправить сообщение электронной почты, `SendMailError` функция вызывается. Сообщение отображается для пользователя. Кроме того событие заносится в журнал событий приложений Windows, исходя из предположения, что источник события с именем MySamplesSite уже существует. См. в примере кода ниже, чтобы создать указанный источник события. Дополнительные сведения о создании источника событий, см. в разделе [Server, обработка событий в страниц веб-форм ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Свойство <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> имеет значение `true` для указания, что ошибка была обработана.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 В следующем примере кода следует используйте, если вам нужно программным способом добавить источник события с именем MySamplesSite в журнал приложений. Источник событий должен существовать в порядке для первого примера кода для правильной работы. В следующем примере кода требуются права администратора.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 В следующем примере кода можно использовать в качестве файла ChangePasswordMail.htm для предыдущего примера.  
  
> [!IMPORTANT]
>  Отправка учетных записей пользователей, имена и пароли в сообщении электронной почты — это потенциальная угроза безопасности. Сообщения электронной почты обычно отправляются в виде обычного текста и может быть прочитан специальные сетевые «Вставка на лету» приложений.  Для повышения безопасности используйте устранения рисков, которые описаны в [защита элементами управления входом](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.ChangePassword" />
    <altmember cref="P:System.Web.UI.WebControls.ChangePassword.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
    <altmember cref="P:System.Web.UI.WebControls.PasswordRecovery.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Вкладка приложения средства администрирования веб-сайта</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получить или задать идентификатор внедренного элемента, используйте <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> свойство. Чтобы получить или задать путь к внедренным объектом, используйте <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> свойство. Оба свойства должно быть присвоено успешно внедрить элемент сообщения электронной почты.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Вкладка приложения средства администрирования веб-сайта</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject (string name, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject(System::String ^ name, System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.EmbeddedMailObject : string * string -&gt; System.Web.UI.WebControls.EmbeddedMailObject" Usage="new System.Web.UI.WebControls.EmbeddedMailObject (name, path)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя используется в качестве идентификатора внедренного в сообщение объекта. Дополнительные сведения см. в разделе <see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />.</param>
        <param name="path">Маршрут используется для извлечения объекта, который будет внедрен в сообщение. Дополнительные сведения см. в разделе <see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />, используя указанные идентификатор и маршрут для формирования объекта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показан пример кода страницы ASP.NET, использующего <xref:System.Web.UI.WebControls.ChangePassword> управления и включает обработчики для событий <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> событие с именем `SendingMail`. Данный пример кода предполагает, что ASP.NET веб-сайт настроен на использование членства ASP.NET и проверки подлинности форм и что был создан пользователь, имя и пароль вы должны знать. Дополнительные сведения см. в разделе [Как Реализация простых форм проверки подлинности](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Если смена пароля прошла успешно, код в `SendingMail` обработчик событий предпринимает попытку отправки сообщения электронной почты пользователю, чтобы подтвердить изменение. SMTP должен быть уже настроен на сервере в порядке для работы этого примера кода. Сведения о настройке SMTP-сервера, см. в разделе [NIB: Как выполнить  Установить и настроить виртуальные серверы SMTP в IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Для целей этого примера нет необходимости для настройки SMTP-сервера; Пример предназначен для проверки на сбой отправки сообщения электронной почты.  
  
 Если почтовый сервер настроен неправильно или другой ошибки и не удается отправить сообщение электронной почты, `SendMailError` функция вызывается. Сообщение отображается для пользователя. Кроме того событие заносится в журнал событий приложений Windows, исходя из предположения, что источник события с именем MySamplesSite уже существует. См. в примере кода ниже, чтобы создать указанный источник события. Дополнительные сведения о создании источника событий, см. в разделе [Server, обработка событий в страниц веб-форм ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Свойство <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> имеет значение `true` для указания, что ошибка была обработана.  
  
 В следующем примере кода демонстрируется использование ASPX-странице.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword_vb.aspx#1)]  
  
 В следующем примере кода демонстрируется использование файл с выделенным кодом.  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword.vb#2)]  
  
 В следующем примере кода следует используйте, если вам нужно программным способом добавить источник события с именем MySamplesSite в журнал приложений. Источник событий должен существовать в порядке для первого примера кода для правильной работы. В следующем примере кода требуются права администратора.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 В следующем примере кода можно использовать в качестве файла ChangePasswordMail.htm для предыдущего примера.  
  
> [!IMPORTANT]
>  Отправка учетных записей пользователей, имена и пароли в сообщении электронной почты — это потенциальная угроза безопасности. Сообщения электронной почты обычно отправляются в виде обычного текста и может быть прочитан специальные сетевые «Вставка на лету» приложений.  Для повышения безопасности используйте устранения рисков, которые описаны в [защита элементами управления входом](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <altmember cref="T:System.Web.Mail.SmtpMail" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Вкладка приложения средства администрирования веб-сайта</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя, используемое в качестве идентификатора объекта, который внедряется в сообщение электронной почты, сформированное с помощью класса <see cref="T:System.Web.UI.WebControls.MailDefinition" />.</summary>
        <value>Возвращает идентификатор объекта для внедрения в сообщение электронной почты.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> Свойство задает идентификатор элемента для внедрения в сообщение электронной почты, созданный декларативно с помощью <xref:System.Web.UI.WebControls.MailDefinition> класса. Этот идентификатор используется для сопоставления элементов, содержащихся в <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> свойство его соответствующее место в тексте файла, указанного в <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> свойства, используя следующий синтаксис:  
  
```  
<img src="cid:identifier" alt="Alternate Text" />  
```  
  
 Как правило элемент является файлом образа. По умолчанию для <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> свойство представляет собой пустую строку.  
  
 Рекомендуется для разработки специальных возможностей для установки свойства альтернативный текст в сообщении для всех внедренных изображений.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется страница ASP.NET, которая использует <xref:System.Web.UI.WebControls.ChangePassword> веб-элемент управления и включает в себя обработчик событий для <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> событие с именем `SendingMail`. В примере кода предполагается, что ASP.NET веб-сайт настроен на использование членства ASP.NET и проверки подлинности форм и что был создан пользователь, имя и пароль вы должны знать. Дополнительные сведения см. в разделе [Как Реализация простых форм проверки подлинности](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Если смена пароля прошла успешно, код в `SendingMail` обработчик событий предпринимает попытку отправки сообщения электронной почты пользователю, чтобы подтвердить изменение. SMTP должен быть уже настроен на сервере в порядке для работы этого примера кода. Сведения о настройке SMTP-сервера, см. в разделе [NIB: Как выполнить  Установить и настроить виртуальные серверы SMTP в IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Для целей этого примера нет необходимости для настройки SMTP-сервера; Пример предназначен для проверки на сбой отправки сообщения электронной почты.  
  
 Если почтовый сервер настроен неправильно или другой ошибки и не удается отправить сообщение электронной почты, `SendMailError` функция вызывается. Сообщение отображается для пользователя. Кроме того событие заносится в журнал событий приложений Windows, исходя из предположения, что источник события с именем MySamplesSite уже существует. См. в примере кода ниже, чтобы создать указанный источник события. Дополнительные сведения о создании источника событий, см. в разделе [Server, обработка событий в страниц веб-форм ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Свойство <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> имеет значение `true` для указания, что ошибка была обработана.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 В следующем примере кода следует используйте, если вам нужно программным способом добавить источник события с именем MySamplesSite в журнал приложений. Источник событий должен существовать в порядке для первого примера кода для правильной работы. В следующем примере кода требуются права администратора.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 В следующем примере кода можно использовать в качестве файла ChangePasswordMail.htm для предыдущего примера.  
  
> [!IMPORTANT]
>  Отправка учетных записей пользователей, имена и пароли в сообщении электронной почты — это потенциальная угроза безопасности. Сообщения электронной почты отправляются в виде обычного текста и может быть прочитан специальные сетевые «Вставка на лету» приложений.  Для повышения безопасности используйте устранения рисков, которые описаны в [защита элементами управления входом](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Вкладка приложения средства администрирования веб-сайта</related>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает маршрут, используемый для извлечения объекта, который внедряется в сообщение, формируемое с помощью класса <see cref="T:System.Web.UI.WebControls.MailDefinition" />.</summary>
        <value>Возвращает маршрут к объекту, внедряемому в сообщение.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> Задает путь к элементу, который требуется внедрить в сообщении электронной почты, созданный декларативно с помощью <xref:System.Web.UI.WebControls.MailDefinition> объекта. Путь к файлу в <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> должен представлять собой путь, например C:\MyServer\Banner.gif. Как правило внедренным объектом является файл изображения. Если файл изображения ссылается его идентификатор сообщения электронной почты, но не включены в сообщение, изображение отображается в виде потерянного вложения при просмотре сообщения электронной почты.  
  
 Рекомендуется для разработки специальных возможностей для установки свойства альтернативный текст в сообщении для всех внедренных изображений.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется страница ASP.NET, которая использует <xref:System.Web.UI.WebControls.ChangePassword> веб-элемент управления и включает в себя обработчик событий для <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> событие с именем `SendingMail`. В примере кода предполагается, что ASP.NET веб-сайт настроен на использование членства ASP.NET и проверки подлинности форм и что был создан пользователь, имя и пароль вы должны знать. Дополнительные сведения см. в разделе [Как Реализация простых форм проверки подлинности](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Если смена пароля прошла успешно, код в `SendingMail` обработчик событий предпринимает попытку отправки сообщения электронной почты пользователю, чтобы подтвердить изменение. SMTP должен быть уже настроен на сервере в порядке для работы этого примера кода. Сведения о настройке SMTP-сервера, см. в разделе [NIB: Как выполнить  Установить и настроить виртуальные серверы SMTP в IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Для целей этого примера нет необходимости для настройки SMTP-сервера; Пример предназначен для проверки на сбой отправки сообщения электронной почты.  
  
 Если почтовый сервер настроен неправильно или другой ошибки и не удается отправить сообщение электронной почты, `SendMailError` функция вызывается. Сообщение отображается для пользователя. Кроме того событие заносится в журнал событий приложений Windows, исходя из предположения, что источник события с именем MySamplesSite уже существует. См. в примере кода ниже, чтобы создать указанный источник события. Дополнительные сведения о создании источника событий, см. в разделе [Server, обработка событий в страниц веб-форм ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Свойство <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> имеет значение `true` для указания, что ошибка была обработана.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 В следующем примере кода следует используйте, если вам нужно программным способом добавить источник события с именем MySamplesSite в журнал приложений. Источник событий должен существовать в порядке для первого примера кода для правильной работы. В следующем примере кода требуются права администратора.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 В следующем примере кода можно использовать в качестве файла ChangePasswordMail.htm для предыдущего примера.  
  
> [!IMPORTANT]
>  Отправка учетных записей пользователей, имена и пароли в сообщении электронной почты — это потенциальная угроза безопасности. Сообщения электронной почты обычно отправляются в виде обычного текста и может быть прочитан специальные сетевые «Вставка на лету» приложений.  Для повышения безопасности используйте устранения рисков, которые описаны в [защита элементами управления входом](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Вкладка приложения средства администрирования веб-сайта</related>
      </Docs>
    </Member>
  </Members>
</Type>