<Type Name="SendMailErrorEventHandler" FullName="System.Web.UI.WebControls.SendMailErrorEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db67fe646746e8ddbc98aa2e7ddc2a04dc281e74" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51867392" /></Metadata><TypeSignature Language="C#" Value="public delegate void SendMailErrorEventHandler(object sender, SendMailErrorEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SendMailErrorEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub SendMailErrorEventHandler(sender As Object, e As SendMailErrorEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void SendMailErrorEventHandler(System::Object ^ sender, SendMailErrorEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type SendMailErrorEventHandler = delegate of obj * SendMailErrorEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.SendMailErrorEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Источник события.</param>
    <param name="e">Объект <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />, содержащий данные события.</param>
    <summary>Представляет метод, который обрабатывает событие <see langword="SendMailError" /> элементов управления (например, элементы управления <see cref="T:System.Web.UI.WebControls.ChangePassword" />, <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> и <see cref="T:System.Web.UI.WebControls.PasswordRecovery" />).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании делегата <xref:System.Web.UI.WebControls.SendMailErrorEventHandler> необходимо указать метод, обрабатывающий событие. Чтобы связать событие с обработчиком событий, добавьте экземпляр делегата к событию. Обработчик событий вызывается всякий раз, когда происходит событие, пока не будет удален делегат из события. Дополнительные сведения о делегатов обработчиков событий, см. в разделе [Server, обработка событий в страниц веб-форм ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
 Обработка `SendMailError` событие позволяет веб-приложения продолжать работу, даже если исключение возникает при попытке отправить сообщение электронной почты. Например это полезно в том случае, если исключение возникает, когда пользователь работает с помощью нескольких шагов мастера. Желательно записать ошибку в журнал, отобразить информационное сообщение для пользователя и пользователи могут завершить работу мастера, а не завершить работу приложения.  
  
 Если не создать обработчик событий для <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> событий, или при создании обработчика событий, но оставить <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> свойство значение `false`, веб-приложения перестанут работать, если произошла ошибка при отправке сообщения электронной почты и будет ASP.NET сообщение об ошибке.  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> Метод также позволяет производным классам обрабатывать событие, а не <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>. Это предпочтительная методика для обработки события в классе, который является производным от <xref:System.Web.UI.WebControls.ChangePassword> или <xref:System.Web.UI.WebControls.CreateUserWizard>.  
  
 Дополнительные сведения об обработке событий см. в разделе [Server, обработка событий в страниц веб-форм ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется страница ASP.NET, которая использует <xref:System.Web.UI.WebControls.ChangePassword> веб-элемент управления и включает в себя обработчик событий для <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> событие с именем `SendMailError`. В примере кода предполагается, что ASP.NET веб-сайт настроен на использование членства ASP.NET и проверки подлинности форм и что был создан пользователь, имя и пароль вы должны знать. Дополнительные сведения см. в разделе [как: реализация простой проверки подлинности Forms](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Если изменить пароль завершается успешно, код пытается использовать протокол SMTP для отправки сообщения электронной почты пользователю, чтобы подтвердить изменение. Это можно сделать в `SendingMail` обработчик событий. Сведения о настройке SMTP-сервера, см. в разделе [NIB: Практическое: Установка и настройка виртуальные SMTP-серверы в IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Для целей этого примера нет необходимости для настройки SMTP-сервера; Пример предназначен для проверки на сбой отправки сообщения электронной почты.  
  
 Если почтовый сервер настроен неправильно или другой ошибки и не удается отправить сообщение электронной почты, `SendMailError` функция вызывается. Сообщение отображается для пользователя. Кроме того событие заносится в журнал событий приложений Windows, исходя из предположения, что источник события с именем MySamplesSite уже существует. См. в примере кода ниже, чтобы создать указанный источник события. Дополнительные сведения о создании источника событий, см. в разделе [Server, обработка событий в страниц веб-форм ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Свойство <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> имеет значение `true` для указания, что ошибка была обработана.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 В следующем примере кода следует используйте, если вам нужно программным способом добавить источник события с именем MySamplesSite в журнал приложений. Источник событий должен существовать в порядке для первого примера кода для правильной работы. В следующем примере кода требуются права администратора.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <altmember cref="T:System.Web.Mail.SmtpMail" />
    <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Обработка событий сервера на веб-страниц ASP.NET</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Обработка и вызов событий</related>
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">SMTP-элемент (параметры сети)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Вкладка приложения средства администрирования веб-сайта</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c">Защита элементов управления входа</related>
    <related type="Article" href="https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad">Базовые методики безопасности для веб-приложений</related>
  </Docs>
</Type>