<Type Name="CallConvStdcall" FullName="System.Runtime.CompilerServices.CallConvStdcall">
  <Metadata><Meta Name="ms.openlocfilehash" Value="252a2755236af4d35b0603bde784ff4c2cee0870" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48689647" /></Metadata><TypeSignature Language="C#" Value="public class CallConvStdcall" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallConvStdcall extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.CallConvStdcall" />
  <TypeSignature Language="VB.NET" Value="Public Class CallConvStdcall" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallConvStdcall" />
  <TypeSignature Language="F#" Value="type CallConvStdcall = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает, что метод должен использовать соглашение о вызовах <see langword="StdCall" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызываемый объект очищает стек. Это соглашение по умолчанию для вызова неуправляемых функций из управляемого кода.  
  
 Классы в <xref:System.Runtime.CompilerServices> предназначены только для создателям компиляторов.  
  
 Компиляторы выдают пользовательские модификаторы, в метаданных, чтобы изменить способ, которым компилятор just-in-time (JIT) обрабатывает значения, когда поведение по умолчанию не подходит.  Когда JIT-компилятор встречает пользовательский модификатор, он обрабатывает значение так, как указывает этот модификатор.  Компиляторы могут применять пользовательские модификаторы для методов, параметров и возвращаемых значений.  JIT-компилятор должен отвечать на обязательные модификаторы, но могут игнорировать необязательные модификаторы.  Компилятор C++ может вставить пользовательский модификатор, чтобы описать, каким образом следует байта в случаях, когда JIT-компилятор интерпретирует байты способом, который не совместим с C++ по умолчанию.  
  
 Допускается выдача пользовательских модификаторов в метаданные, с помощью одного из следующих способов:  
  
-   С помощью методов в <xref:System.Reflection.Emit.TypeBuilder> класса, такие как <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, и <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  
  
-   Создание файла инструкций промежуточного языка MSIL Майкрософт, которое содержит вызовы к `modopt` и `modreq`и сборка файла с [Ilasm.exe (ассемблер IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).  
  
-   С помощью API неуправляемого отражения.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallConvStdcall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.CallConvStdcall.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallConvStdcall();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.CallConvStdcall" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы в <xref:System.Runtime.CompilerServices> предназначены только для создателям компиляторов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>