<Type Name="XamlObjectWriter" FullName="System.Xaml.XamlObjectWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88e6ca45083f7c3b687072f89d33f2067088da08" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53390863" /></Metadata><TypeSignature Language="C#" Value="public class XamlObjectWriter : System.Xaml.XamlWriter, System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectWriter extends System.Xaml.XamlWriter implements class System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectWriter&#xA;Inherits XamlWriter&#xA;Implements IXamlLineInfoConsumer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectWriter : System::Xaml::XamlWriter, System::Xaml::IXamlLineInfoConsumer" />
  <TypeSignature Language="F#" Value="type XamlObjectWriter = class&#xA;    inherit XamlWriter&#xA;    interface IXamlLineInfoConsumer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xaml.IXamlLineInfoConsumer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Создает граф объектов из исходного потока узлов XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Write` Методы <xref:System.Xaml.XamlObjectWriter> реализовать шаблон, чтобы <xref:System.Xaml.XamlObjectWriter> использует <xref:System.Xaml.XamlWriter> , определяется <xref:System.Xaml.XamlWriter.WriteNode%2A> метод. <xref:System.Xaml.XamlWriter.WriteNode%2A> логика для переключения между `Write` методов, в зависимости от того, какой из узлов является тип, соответствующий текущей позиции в модуле чтения.  
  
## <a name="scope"></a>Область  
 Объект <xref:System.Xaml.XamlObjectWriter> имеет смысл областью; это, <xref:System.Xaml.XamlObjectWriter> поддерживает концептуальной точку ссылки в его выходной граф объектов. Для определенной области некоторые операции могут быть допустимой или недопустимой или результат, отсутствие операции. Например, если вы вызываете <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> записываемое директивы для инициализации объекта, уже существует как экземпляр реализации по умолчанию вызывает исключение.  
  
 Возможный способ отслеживания области в пользовательском <xref:System.Xaml.XamlObjectWriter> , — выровняем действия с узлами с классом стека или фрейма. Стек или фрейм можно отслеживать, принудительная отправка и извлечение для каждого уровня глубины объектной модели, которые вводятся или завершил работу во время <xref:System.Xaml.XamlObjectWriter> записывает граф объектов.  
  
## <a name="callbacks"></a>Обратные вызовы  
 Для поддержки промежуточного и расширенного <xref:System.Xaml.XamlObjectWriter> сценариев, механизм записи графа объектов предоставляет обратного вызова точки входа, возникающих при <xref:System.Xaml.XamlObjectWriter> фиксирует или скоро зафиксировать определенные действия. Некоторые обратные вызовы включены в параметрах и не являются специфичными для типа объекта или члена записываемого; Тем не менее сведения об обратном вызове часто является доступным в контексте или находится в данных события, отправленный с помощью обратного вызова. Ниже приведен список соответствующие ответные вызовы:  
  
-   Обратный вызов, который объявляется с <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> вызывается, когда область переходит в новый объект и на <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> этапе существования объекта для каждого созданного объекта.  
  
-   Обратный вызов, который объявляется с <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> вызывается, когда область переходит в новый объект и на <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> этапе существования объекта для каждого созданного объекта.  
  
-   Обратный вызов, который объявляется с <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> вызывается, когда область начинается в объекте и возникает при первой <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> вызов этой области объект внесены, но еще не были зафиксированы.  
  
-   Обратный вызов, который объявляется с <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> вызывается, когда область начинается в объекте и происходит при <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> вызов этой области объект внесены, но еще не были зафиксированы.  
  
-   Обратный вызов, который объявляется с <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> при вызове <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> вызывается.  
  
## <a name="writing-dictionary-keys"></a>Запись словаря ключей  
 Реализация по умолчанию <xref:System.Xaml.XamlObjectWriter> поддерживает преобразование типа ограничений, установленных объектом <xref:System.Collections.Generic.Dictionary%602> перед словаря содержимое добавляется в граф объекта. Таким образом, универсальный словарь объектов может быть использовано во время выполнения и может соответствовать соответствующие универсального `Add` и поведения индексатора. Тем не менее, как они реализованы в базе <xref:System.Xaml.XamlObjectWriter>, эта возможность существует только для создания графа объектов из базового <xref:System.Collections.Generic.Dictionary%602> класса, а не для классов, производных от <xref:System.Collections.Generic.Dictionary%602>.  
  
## <a name="checks-for-disposed"></a>Проверяет наличие удаленных  
 Модули записи XAML потенциально используются для отложенных операций или где выполняется вызов для экземпляра модуля записи XAML, который был удален до этого времени. Различные интерфейсы API из <xref:System.Xaml.XamlObjectWriter> может выдавать <xref:System.ObjectDisposedException> в таких случаях.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlWriter" />
    <altmember cref="T:System.Xaml.XamlObjectReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter schemaContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="schemaContext">Контекст схемы XAML, общий со средством чтения XAML. Этот контекст предоставляет узлы для записи.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriter" />, используя контекст схемы XAML, применяемый объектом <see cref="T:System.Xaml.XamlReader" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="schemaContext" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlObjectWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext, settings As XamlObjectWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlObjectWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext * System.Xaml.XamlObjectWriterSettings -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter (schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectWriterSettings" />
      </Parameters>
      <Docs>
        <param name="schemaContext">Контекст схемы XAML, общий со средством чтения XAML. Этот контекст предоставляет узлы для записи.</param>
        <param name="settings">Объект параметров, задающий определенные параметры для поведения и вывода объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriter" /> контекстом, используемым объектом <see cref="T:System.Xaml.XamlReader" /> и его параметрами.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="schemaContext" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="xamlObjectWriter.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сбрасывает все возможные кадры и очищает граф объектов.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xamlObjectWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" />, если необходимо освободить управляемые ресурсы; в противном случае — значение <see langword="false" />.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xaml.XamlObjectWriter" />, а при необходимости освобождает также управляемые ресурсы.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterBeginInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterBeginInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterBeginInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterBeginInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterBeginInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterBeginInit : obj -&gt; unit&#xA;override this.OnAfterBeginInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterBeginInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, о котором требуется отчет. При вызове обработчика объект упакован в <see cref="T:System.Xaml.XamlObjectEventArgs" />.</param>
        <summary>Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" />, связанный с объектом <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterEndInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterEndInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterEndInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterEndInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterEndInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterEndInit : obj -&gt; unit&#xA;override this.OnAfterEndInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterEndInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, о котором требуется отчет. При вызове обработчика значение упаковывается в объект <see cref="T:System.Xaml.XamlObjectEventArgs" />.</param>
        <summary>Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" />, связанный с объектом <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterProperties : obj -&gt; unit&#xA;override this.OnAfterProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, о котором требуется отчет. При вызове обработчика он упакован в объект <see cref="T:System.Xaml.XamlObjectEventArgs" />.</param>
        <summary>Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" />, на который имеется ссылка и который связан с <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeProperties : obj -&gt; unit&#xA;override this.OnBeforeProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnBeforeProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Значение, передаваемое при вызове обработчика через объект <see cref="T:System.Xaml.XamlObjectEventArgs" />.</param>
        <summary>Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" />, на который имеется ссылка и который связан с <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetValue">
      <MemberSignature Language="C#" Value="protected virtual bool OnSetValue (object eventSender, System.Xaml.XamlMember member, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnSetValue(object eventSender, class System.Xaml.XamlMember member, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSetValue (eventSender As Object, member As XamlMember, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnSetValue(System::Object ^ eventSender, System::Xaml::XamlMember ^ member, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool&#xA;override this.OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool" Usage="xamlObjectWriter.OnSetValue (eventSender, member, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSender" Type="System.Object" />
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventSender">Объект, передаваемый в обработчик в качестве источника.</param>
        <param name="member">Имя задаваемого свойства, передаваемое обработчику в составе объекта <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
        <param name="value">Значение, которое нужно предоставить свойству, определенному параметром <paramref name="property" />. Значение передается обработчику в составе объекта <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
        <summary>Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" />, на который имеется ссылка и который связан с <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для этого средства записи при условии, что параметр <paramref name="handled" /> в данных события <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> имеет значение, отличное от <see langword="true" />.</summary>
        <returns>Логическое значение, заданное любым связанным обработчиком; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `SetValue` операции для этого средства записи XAML имеет связанного обработчика ( <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> объявляется в <xref:System.Xaml.XamlObjectWriterSettings>), этот метод создает новые <xref:System.Windows.Markup.XamlSetValueEventArgs> и передает их обработчику. Возвращаемое значение устанавливается путем считывания <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> значение, которое передается через данные события. Если обработчик не существует, и этот метод вызывается, вызов возвращает `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public virtual object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.Result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Xaml.XamlObjectWriter.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает последний записанный объект. Вызывается, только когда поток узла достиг конца и граф объекта завершен.</summary>
        <value>Последний записанный объект или <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Наиболее типичное применение <xref:System.Xaml.XamlObjectWriter.Result%2A> — вызов его только в том случае, если известно, в потоке узлов в конце, а граф объекта завершен. В противном случае графа объектов, вероятнее всего будут неполными и не подходит для большинства сценариев платформы.  
  
 <xref:System.Xaml.XamlObjectWriter.Result%2A> обычно содержит только значение отличное от null, если он вызывается сразу после вызова <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, и если текущая область — в члене, когда объект предоставляет значение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNameScope">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.INameScope RootNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.INameScope RootNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNameScope As INameScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::INameScope ^ RootNameScope { System::Windows::Markup::INameScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNameScope : System.Windows.Markup.INameScope" Usage="System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает службу <see cref="T:System.Windows.Markup.INameScope" />, которая поддерживает область имен XAML для абсолютного корня узла средства записи объекта XAML.</summary>
        <value>Служба <see cref="T:System.Windows.Markup.INameScope" />, которая поддерживает область имен XAML для текущего корня средства записи объекта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение этого свойства могут поступать из контекста объекта модуля записи.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает активный контекст схемы XAML.</summary>
        <value>Контекст схемы XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Контекст схемы XAML является источником необходимые сведения для написания сценариев, наиболее удобным. Контекст схемы XAML влияет на поиск резервных типов и содержит сведения о сборках, на которых существуют резервные типы. Контекст схемы XAML по умолчанию основан на правилах сопоставления типов среды CLR. Инфраструктуры обычно предоставляют собственный контекст схемы XAML, чтобы гарантировать соответствие механизмы загрузки сборки платформы моделей программирования приложения amd.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineInfo">
      <MemberSignature Language="C#" Value="public void SetLineInfo (int lineNumber, int linePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLineInfo(int32 lineNumber, int32 linePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLineInfo (lineNumber As Integer, linePosition As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLineInfo(int lineNumber, int linePosition);" />
      <MemberSignature Language="F#" Value="abstract member SetLineInfo : int * int -&gt; unit&#xA;override this.SetLineInfo : int * int -&gt; unit" Usage="xamlObjectWriter.SetLineInfo (lineNumber, linePosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">Номер строки от средства чтения.</param>
        <param name="linePosition">Положение в строке от средства чтения.</param>
        <summary>Реализует метод <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> и предоставляет сведения о строке для исключений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод службы не предназначен для вызова непосредственно из программного кода. Тем не менее если вы создаете класс, производный от <xref:System.Xaml.XamlObjectWriter> и ожидать сообщения контекста, где номера строк недоступны или не будет полезным, этот метод может вызываться.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldProvideLineInfo">
      <MemberSignature Language="C#" Value="public bool ShouldProvideLineInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldProvideLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShouldProvideLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldProvideLineInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShouldProvideLineInfo : bool" Usage="System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, которое сообщает, должна ли служба сведений о строке предоставлять значения и, следовательно, вызывать метод <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" />, когда это требуется.</summary>
        <value>Значение <see langword="true" />, если сведения о строке используются средством записи; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данная реализация всегда возвращает значение `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberSignature Language="F#" Value="override this.WriteEndMember : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает область текущего члена и может при закрытии записать значение области члена. Новая область становится областью родительского объекта этого члена.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Не удалось создать значение элемента из узла значения, который встречается между этим вызовом и предыдущим <see langword="StartMember" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает текущую область объекта в средстве записи. Новой областью объекта становится область родительского члена.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если этот `EndObject` закрывает положение области корневого объекта, новой областью объекта становится корневой областью.  
  
 Вызов <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> может еще не создана объект так, как элемент объекта может быть передача необходимую инициализацию, таких как текст инициализации или параметры инициализации. В этих случаях вызов <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> фактически записывает объект.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberSignature Language="F#" Value="override this.WriteGetObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Записывает концептуальный <see langword="StartObject" /> в граф объекта, если заданный объект является значением по умолчанию или неявным значением родительского свойства. Неявное значение получается из сведений, полученных из контекста схемы XAML и информации базовых типов, а не задается в виде значения объекта во входном наборе узлов XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Разница между записи с использованием <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> и записи с помощью <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> можно увидеть в граф объектов. <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> не создает экземпляр типа, так как <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API не имеет информации для информирования о том, что для создания графа объектов. Вместо этого объект был создан при инициализации родительское свойство; Поэтому <xref:System.Xaml.XamlObjectWriter> не требуется создавать его. Напротив <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> указывает, что созданный экземпляр этого типа и они будут вставлены в графе объекта.  
  
 Если вы считаете потока узлов XAML как ряд кадров, <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> сбалансированы для <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> вызова. Таким образом, число <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> , а также <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> вызовов должно быть равно числу <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> вызовы как часть полного вычисления записи объекта потока узлов XAML.  
  
 Концептуальные `StartObject` размещения для неявного объект в графе объектов является необходимым, поскольку Хотя само значение объекта неявными по умолчанию, этот объект может по-прежнему имеет члены, которые должны быть записаны на основе в потоке узлов XAML. Типичный сценарий, где это происходит, — когда <xref:System.Xaml.XamlObjectWriter> записи узлов членов для свойства коллекции и инициализация коллекции является неявным для создания объекта, которому принадлежит свойство коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="override this.WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlObjectWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">Объявление пространства имен для записи.</param>
        <summary>Определяет объявление пространства имен, которое применяется к следующей области объекта или члена.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно написать объявление пространства имен, если текущая область — корневой областью, область объекта или области члена. Тем не менее <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> может вызываться только непосредственно перед вызовом одного из следующих: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, или <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>. Последовательные <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> случай — для записи множественные декларации пространств имен в том же узле. Со временем, либо <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> или <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> должен вызываться.  
  
 <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> не используйте `Start` / `End` метафора. Несмотря на то, что пространство имен XAML содержит члены в смысле представления CLR, члены известны и не обязательно должны быть представлены как специальный тип <xref:System.Xaml.XamlMember> для расширяемости. Для доступа к значениям из <xref:System.Xaml.NamespaceDeclaration>, доступ к его <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> и <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> свойства.  
  
 Объявление пространства имен может содержать <xref:System.String.Empty?displayProperty=nameWithType> значение префикса. Объект <xref:System.String.Empty?displayProperty=nameWithType> префикс представляет объявление пространства имен XAML по умолчанию. Не пытайтесь использовать null для представления префикс по умолчанию;  в этот API выдает исключение. Для получения дополнительной информации см. <xref:System.Xaml.NamespaceDeclaration>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="namespaceDeclaration" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Компонент <paramref name="namespaceDeclaration" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Xaml.XamlObjectReaderException">Попытка записи узла пространства имен XAML в недопустимую область.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberSignature Language="F#" Value="override this.WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlObjectWriter.WriteStartMember property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property">Записываемое свойство XAML. Это значение, как правило, получается из средства чтения XAML посредством промежуточного потока узлов XAML.</param>
        <summary>Записывает новый узел члена в текущую область объекта, и эта область становится новой областью члена.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  Следить за <xref:System.Xaml.XamlDuplicateMemberException>, когда одно и то же свойство XAML задается дважды в XAML, который входных данных. В простых случаях, например когда то же свойство задается в синтаксис атрибута и синтаксис элемента свойства вы увидите легко это исключение в разметке ввода. Однако несколько особых случаях может произойти, которые сложнее, чтобы заметить изменения. Например это исключение может возникнуть, если значение свойства содержимого XAML, если задействовать внешние свойства XAML, и в том случае, если свойство позволяет использование присоединяемого и использование экземпляра. На этапах разработки, отладки можно часто найти это исключение, просмотрев промежуточного представления узла XAML, который соединяет чтение разметки и запись графа объектов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Для свойства <paramref name="property" /> значение <see cref="P:System.Xaml.XamlMember.IsUnknown" /> установлено равным <see langword="true" />.  
  
- или - 
 Свойство переданное <see cref="P:System.Xaml.XamlLanguage.UnknownContent" />, которое указывает, что поток узлов XAML, содержащий содержимое для объекта, который не поддерживает содержимое.  
  
- или - 
Попытка записи начального члена в недопустимой области действия.</exception>
        <exception cref="T:System.Xaml.XamlDuplicateMemberException"><paramref name="property" /> задает свойство, которое уже явно задано в области родительского объекта.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="property" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlObjectWriter.WriteStartObject xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">Записываемый тип. Обычно это значение получается из средства чтения XAML.</param>
        <summary>Записывает узел объекта в текущую область, и задает эту область для области нового объекта.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Обработка типа <see cref="P:System.Xaml.XamlType.IsUnknown" />, не удается создать объект.  
  
- или - 
Попытка записи начального объекта в недопустимой области действия.</exception>
        <exception cref="T:System.Xaml.XamlParseException">Попытка записи корневого объекта, когда корневой объект уже был предоставлен в настройках.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="xamlType" /> имеет значение <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Если текущая область — внутри коллекции, словаря или массива, новый экземпляр должны добавляться к коллекции, словаря или массива, с помощью <see langword="Add" /> метод соответствующего типа. В противном случае член должен быть назначен новый экземпляр.</para></block>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteValue : obj -&gt; unit" Usage="xamlObjectWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Значение для записи.</param>
        <summary>Выполняет запись значения в область текущего члена. Если текущая область находится в объекте коллекции, словаря или массива, это значение необходимо добавить в коллекцию, словарь или массив.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Попытка записи значения в недопустимой области действия.</exception>
      </Docs>
    </Member>
  </Members>
</Type>