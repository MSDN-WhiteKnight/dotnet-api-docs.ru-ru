<Type Name="TouchFrameEventArgs" FullName="System.Windows.Input.TouchFrameEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30f87b6247b094010302d8c5f86db873bb00fa53" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52226732" /></Metadata><TypeSignature Language="C#" Value="public sealed class TouchFrameEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TouchFrameEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchFrameEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TouchFrameEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchFrameEventArgs sealed : EventArgs" />
  <TypeSignature Language="F#" Value="type TouchFrameEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для события <see cref="E:System.Windows.Input.Touch.FrameReported" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Touch.FrameReported> Событие включается в [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] для поддержки совместимости с Silverlight. Если у вас нет для обеспечения совместимости с Silverlight, используйте события касания, такие как <xref:System.Windows.UIElement.TouchDown> и <xref:System.Windows.UIElement.TouchMove>на <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, или <xref:System.Windows.ContentElement>.  
  
 Используйте <xref:System.Windows.Input.TouchFrameEventArgs> для получения <xref:System.Windows.Input.TouchPoint> значения, относящиеся к событие сенсорного ввода. Из <xref:System.Windows.Input.TouchPoint>, вы можете получить <xref:System.Windows.Input.TouchPoint.Position%2A> точки касания и определить ли <xref:System.Windows.Input.TouchAction> был <xref:System.Windows.Input.TouchAction.Down>, <xref:System.Windows.Input.TouchAction.Move>, или <xref:System.Windows.Input.TouchAction.Up> действие. Можно также использовать <xref:System.Windows.Input.TouchPoint> для получения <xref:System.Windows.Input.TouchDevice>. Из <xref:System.Windows.Input.TouchDevice>, можно определить устройство <xref:System.Windows.Input.TouchDevice.Id%2A> и получения сведений об элементе, который был затронут.  
  
   
  
## Examples  
 В следующем примере показана обработка <xref:System.Windows.Input.Touch.FrameReported> событий и обращается к данным сенсорного ввода в <xref:System.Windows.Input.TouchFrameEventArgs>. При сенсорном нажатии <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice> захвачена <xref:System.Windows.Controls.Canvas>. Когда удаляется сенсорное устройство, <xref:System.Windows.Input.TouchDevice> освобождается. При перемещении касания между <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice.Id%2A> проверяется. Если перемещение пришло из первого касания, его расположение записывается. Если перемещение пришло из второго касания, проводится линия от позиции первого касания в позицию второго касания.  
  
 Этот пример является частью большего примера, который доступен в <xref:System.Windows.Input.Touch> Общие сведения о классе.  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPrimaryTouchPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPoint GetPrimaryTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPoint GetPrimaryTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPoint ^ GetPrimaryTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetPrimaryTouchPoint : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPoint" Usage="touchFrameEventArgs.GetPrimaryTouchPoint relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">Элемент, который определяет пространство координат. Чтобы использовать абсолютные координаты WPF, необходимо присвоить параметру <paramref name="relativeTo" /> значение <see langword="null" />.</param>
        <summary>Возвращает текущую сенсорную точку основного сенсорного устройства относительно заданного элемента.</summary>
        <returns>Текущее положение основного устройства <see cref="T:System.Windows.Input.TouchDevice" /> относительно заданного элемента; или значение <see langword="null" />, если основное устройство <see cref="T:System.Windows.Input.TouchDevice" /> неактивно.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В набор активных устройства, первое устройство, чтобы быть touch <xref:System.Windows.Input.TouchDevice.Activated> является основного сенсорного устройства. Например если два пальца касаются экрана, первый палец, что не работает представляется основного сенсорного устройства. Если первый палец удаляется, пока не удерживая второй палец по-прежнему работает, становится основного сенсорного устройства `null`.  
  
   
  
## Examples  
 Следующий код обрабатывает точки касания, извлекаемые из <xref:System.Windows.Input.TouchFrameEventArgs>. При сенсорном нажатии <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice> захвачена <xref:System.Windows.Controls.Canvas>. Когда удаляется сенсорное устройство, <xref:System.Windows.Input.TouchDevice> освобождается. При перемещении касания между <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice.Id%2A> проверяется. Если <xref:System.Windows.Input.TouchDevice.Id%2A> соответствует <xref:System.Windows.Input.TouchDevice.Id%2A> основную точку касания, который указывает первого касания, его расположение записывается. Если перемещение пришло из второго касания, проводится линия от позиции первого касания в позицию второго касания.  
  
 Этот пример является частью большего примера, который доступен в <xref:System.Windows.Input.Touch> Общие сведения о классе.  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPointCollection GetTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPointCollection GetTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPointCollection ^ GetTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetTouchPoints : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPointCollection" Usage="touchFrameEventArgs.GetTouchPoints relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">Элемент, который определяет пространство координат. Чтобы использовать абсолютные координаты WPF, необходимо присвоить параметру <paramref name="relativeTo" /> значение <see langword="null" />.</param>
        <summary>Возвращает коллекцию, которая содержит текущую сенсорную точку для каждого активного сенсорного устройства, имеющего отношение к заданному элементу.</summary>
        <returns>Коллекция, которая содержит текущую точку <see cref="T:System.Windows.Input.TouchPoint" /> для каждого активного <see cref="T:System.Windows.Input.TouchDevice" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода в процессах, полученную точки касания <xref:System.Windows.Input.TouchFrameEventArgs>. При сенсорном нажатии на холсте <xref:System.Windows.Input.TouchDevice> фиксируется на холст. При возникновении сенсорного ввода, <xref:System.Windows.Input.TouchDevice> освобождается. При перемещении касания по холсту, <xref:System.Windows.Input.TouchDevice.Id%2A> проверяется. Если <xref:System.Windows.Input.TouchDevice.Id%2A> соответствует <xref:System.Windows.Input.TouchDevice.Id%2A> основную точку касания, который указывает первого касания, его расположение записывается. Если перемещение пришло из второго касания, проводится линия от позиции первого касания в позицию второго касания.  
  
 Этот пример является частью большего примера, который доступен в <xref:System.Windows.Input.Touch> Общие сведения о классе.  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendMousePromotionUntilTouchUp">
      <MemberSignature Language="C#" Value="public void SuspendMousePromotionUntilTouchUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendMousePromotionUntilTouchUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendMousePromotionUntilTouchUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendMousePromotionUntilTouchUp();" />
      <MemberSignature Language="F#" Value="member this.SuspendMousePromotionUntilTouchUp : unit -&gt; unit" Usage="touchFrameEventArgs.SuspendMousePromotionUntilTouchUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Этот член не реализован.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляется для обеспечения совместимости с Silverlight. Из-за различий в реализации устройств это не реализовано в WPF.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public int Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timestamp { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int" Usage="System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает отметку времени данного события.</summary>
        <value>Отметка времени данного события.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>