<Type Name="SettingsProvider" FullName="System.Configuration.SettingsProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7f52b620dcf453e22ecba312320a96021be7efa" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56773302" /></Metadata><TypeSignature Language="C#" Value="public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SettingsProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SettingsProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SettingsProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Действует как базовый класс для извлечения поставщиков пользовательских параметров в архитектуре параметров приложения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поставщик параметров определяет механизм для хранения данных конфигурации, используемых в архитектуре параметров приложения. .NET Framework содержит поставщик параметров по умолчанию единый, <xref:System.Configuration.LocalFileSettingsProvider>, который хранит данные конфигурации в локальной файловой системе. Тем не менее, можно создать путем наследования от абстрактного механизмы хранения <xref:System.Configuration.SettingsProvider> класса. Поставщик, который использует класс-оболочку определяется, дополняя класс-оболочку с <xref:System.Configuration.SettingsProviderAttribute>. Если этот атрибут не задан, по умолчанию, <xref:System.Configuration.LocalFileSettingsProvider>, используется.  
  
 Создавая настраиваемый поставщик параметров, как минимум, вы обязаны предоставлять реализацию для трех методов этого класса: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> и <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.  
  
 Для клиентских приложений, можно добавить более стандартизированные функции для пользовательского поставщика путем реализации также <xref:System.Configuration.IApplicationSettingsProvider> интерфейс. Этот интерфейс отражает методы, найденные в <xref:System.Configuration.ApplicationSettingsBase> класс, который главным образом включает поддержку управления версиями.  
  
 Как правило следует разрабатывать поставщиков параметров в единственном экземпляре, чтобы избежать конфликта ресурсов хранилища. Поставщики должны иметь поточно ориентированной, так как они могут быть вызваны одновременно из нескольких экземпляров программы-оболочки в одном домене приложения или из нескольких приложений в разных доменах.  
  
 Как минимум, поставщик параметров должен распознать три атрибута - <xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, и <xref:System.Configuration.DefaultSettingValueAttribute>. Полный список атрибутов, которые могут применяться к параметрам приложения, см. в разделе [атрибуты параметров приложения](~/docs/framework/winforms/advanced/application-settings-attributes.md). Поставщик пользовательских параметров должен разрешать атрибуты, примененные к свойствам параметров следующим образом:  
  
1.  Если поставщик может выполнить запрос, сделанный атрибутом, очевидно, что оно должно делать это.  
  
2.  Если поставщик не может выполнить запрос, он должен проигнорировать его.  
  
3.  Если два или несколько свойств; Например, свойство помеченное атрибутами <xref:System.Configuration.ApplicationScopedSettingAttribute> и <xref:System.Configuration.UserScopedSettingAttribute>; поставщик должен вызывать <xref:System.Configuration.ConfigurationException>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ConfigurationException" />
    <related type="Article" href="https://msdn.microsoft.com/library/c8eb2ad0-fac6-4ea2-9140-675a4a44d562">Архитектура параметров приложения</related>
    <related type="Article" href="https://msdn.microsoft.com/library/53caa66c-a9fb-43a5-953c-ad092590098d">Атрибуты параметров приложения</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует экземпляр класса <see cref="T:System.Configuration.SettingsProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это защищенный конструктор по умолчанию для этого абстрактного класса. Поставщики производные пользовательские параметры не требуются для предоставления явный конструктор, так как <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> метод обычно выполняет все инициализацию.  
  
 Клиентский код обычно не создаются напрямую поставщик параметров; Вместо этого использовать следующую процедуру для поиска поставщика параметров для определенных параметров свойства:  
  
1.  Вызовите <xref:System.ComponentModel.Component.GetService%2A> метод в текущем <xref:System.ComponentModel.Component> или <xref:System.ComponentModel.ISite> для возврата ссылки на текущий <xref:System.Configuration.ISettingsProviderService>.  
  
2.  Вызовите <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> метод <xref:System.Configuration.ISettingsProviderService> полученные на первом шаге, чтобы вернуть поставщика параметров.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Configuration.SettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя работающего в данный момент приложения.</summary>
        <value>Объект <see cref="T:System.String" /> , содержащее сокращенное имя приложения, которое не содержит полный путь или расширение, например, <c>SimpleAppSettings</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SettingsProvider.ApplicationName%2A> И <xref:System.Configuration.Provider.ProviderBase.Name%2A> свойства помогают устранить неоднозначность аналогичным образом именованные свойства в разных приложениях.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPropertyValues (context As SettingsContext, collection As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="settingsProvider.GetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</param>
        <param name="collection">Объект <see cref="T:System.Configuration.SettingsPropertyCollection" />, содержащий группу свойств параметров, значения которых необходимо извлечь.</param>
        <summary>Возвращает коллекцию значений свойства параметров для указанного экземпляра приложения и группы свойств параметров.</summary>
        <returns>Объект <see cref="T:System.Configuration.SettingsPropertyValueCollection" />, содержащий значения для указанной группы свойств параметров.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> Метод должен быть реализован для обработки специальных параметров, отмеченные <xref:System.Configuration.SpecialSettingAttribute>, а также согласования параметров приложения и пользователя.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetPropertyValues (context As SettingsContext, collection As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="settingsProvider.SetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</param>
        <param name="collection">Объект <see cref="T:System.Configuration.SettingsPropertyValueCollection" />, представляющий группу параметров свойств, которые необходимо задать.</param>
        <summary>Задает значения указанной группы параметров свойств.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase> содержит <xref:System.Configuration.ApplicationSettingsBase.Save%2A> метод, который вызывается для сохранения значений всех его свойств параметров. Этот метод перечисляет все параметры поставщиков, связанных с его свойств и вызовов <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> метод для каждого <xref:System.Configuration.SettingsProvider> для выполнения операции фактическую сериализацию.  
  
 <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> Метод должен быть реализован с учетом безопасности:  
  
-   Чтобы обновить параметры приложения должны только полностью доверенный код. Частично доверенный код может изменить только параметры приложения пользователя. Ненадежный код обычно не может обновлять параметры приложения.  
  
-   Для защиты от атак ресурсов следует рассматривать квоты на использование приложений с частичным доверием.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
  </Members>
</Type>