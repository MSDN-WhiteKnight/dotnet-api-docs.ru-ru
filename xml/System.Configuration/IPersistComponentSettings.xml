<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9127b6636e86acc136c4dfc774ac26d983a775c8" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56767400" /></Metadata><TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistComponentSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistComponentSettings" />
  <TypeSignature Language="F#" Value="type IPersistComponentSettings = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет стандартную функциональность для элементов управления или библиотек, которые хранят и извлекают параметры приложения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, можно добавить поддержку параметров приложения в приложение, создав класс-оболочку параметров, который является производным от <xref:System.Configuration.ApplicationSettingsBase>, а затем добавьте особые свойства к этому классу. Однако этот подход не достаточно инкапсулирует параметры приложения для элемента управления таким образом, чтобы контейнер защищен от деталей. <xref:System.Configuration.IPersistComponentSettings> Интерфейс предоставляет приложение со стандартным интерфейсом для запросов на изменение состояния приложения параметров в модуль управления, компонент или библиотеку. Средства разработки также зависят от этого интерфейса позволяет элементами управления и компонентов.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <related type="Article" href="https://msdn.microsoft.com/library/f44afb74-76cc-44f2-890a-44b7cdc211a1">Параметры приложения для пользовательских элементов управления</related>
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member LoadComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.LoadComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Считывает параметры приложения элемента управления в их соответствующие свойства и обновляет состояние элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В общем случае <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> метод выполняет две основные операции:  
  
-   Это вызывает каждый экземпляр параметров приложения, содержащегося в элементе управления, чтобы обновить значения свойства параметров приложения, как правило, вызвав их <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> методы.  
  
-   Если потребуется он обновляет эти общие свойства, которые зависят от этих перезагруженных значений свойств. Например, если содержащиеся в классе параметров `location` свойства параметров <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> следует убедиться, что элемент управления <xref:System.Windows.Forms.Control.Location%2A> свойство будет обновлена с учетом этот параметр повторно загружается.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member ResetComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.ResetComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Повторно загружает свойства параметров приложения элемента управления относительно значений по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> обычно вызывает метод <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> метод для каждого экземпляра класса параметров приложения, которые он содержит.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member SaveComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.SaveComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет свойства параметров приложения элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> Метод записывает значения свойств параметров приложения элемента управления в связанном хранилище данных. Данный метод использует метод магазина и сериализации данных определяется поставщик параметров, связанных с каждым из классов параметров через <xref:System.Configuration.SettingsProviderAttribute>. Выбор поставщика параметров можно переопределить с помощью <xref:System.Configuration.ISettingsProviderService> интерфейс.  
  
> [!NOTE]
>  Если <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> свойство `true`, элемент управления должен вызывать <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> в свой собственный <xref:System.Windows.Forms.Control.Dispose%2A> метод таким образом, чтобы данные конфигурации элемента управления автоматически сохраняются до окончания работы приложения.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveSettings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SaveSettings : bool with get, set" Usage="System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее на то, должен ли элемент управления автоматически сохранять свойства параметров приложения.</summary>
        <value><see langword="true" />, если элемент управления должен автоматически сохранять свое состояние, иначе <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если элемент управления содержит данные конфигурации, он обычно сохраняют эти данные в ответ на явный вызов в <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> метода или неявно Иногда при элемента управления <xref:System.Windows.Forms.Control.Dispose%2A> вызывается метод. <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> Свойство определяет ли элемент управления автоматически сохраняет его данные конфигурации, когда она будет удалена.  
  
 Значение по умолчанию <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> зависит от реализации элемента управления. Документацию по элементу управления должно быть указано, используется ли параметры приложения, какие данные сохраняются и какое значение по умолчанию имеет <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показан правильный способ для элемента управления проверить значение <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> свойство перед попыткой автоматически сохранять данные о конфигурации.  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение ключа параметров приложения для текущего экземпляра элемента управления.</summary>
        <value>Строка <see cref="T:System.String" />, содержащая ключ параметров для текущего экземпляра элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> свойство для однозначного определения группы свойств параметров приложения, при наличии нескольких экземпляров одного класса программы-оболочки. Например если элемент управления содержит связанный класс-оболочку, а затем поместить несколько экземпляров одного элемента управления в одном приложении обычно будет привести несколько экземпляров класса-оболочки. Параметры ключа необходим только в том случае, когда данные конфигурации отличается на основе каждого экземпляра; например расположение динамично установленных элементов управления.  
  
 Следующие общие правила применяются к использованию <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:  
  
-   Элемент управления, как и любой класс может содержать ноль или более классов параметров приложения, производный от <xref:System.Configuration.ApplicationSettingsBase>. Каждый класс параметров содержит собственные <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> свойство, которое помогает устранить неоднозначность несколько экземпляров этого класса.  
  
-   Элемент управления должен распределять данные для каждого экземпляра и общие данные в отдельные классы параметров.  
  
-   Для элемента управления с данными конфигурации для каждого экземпляра `get` метод доступа <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> свойство по умолчанию <xref:System.Windows.Forms.Control.Name%2A> элемента управления. В большинстве случаев имя элемента управления будет уникальным в пределах приложения. Если элемент управления содержит только общие данные конфигурации, `get` действия по умолчанию `null`.  
  
-   `set` Для этого свойства, которые должны быть реализованы для различения классов параметров, содержащий каждого экземпляра и общие данные конфигурации. Для каждого класса параметров, содержащий данные для каждого экземпляра `set` следует просто сквозной для <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> свойство класса параметров. Для классов параметров, содержащих общие данные `set` должно выполнять никаких действий для данного класса параметров.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <related type="Article" href="https://msdn.microsoft.com/library/f44afb74-76cc-44f2-890a-44b7cdc211a1">Параметры приложения для пользовательских элементов управления</related>
      </Docs>
    </Member>
  </Members>
</Type>